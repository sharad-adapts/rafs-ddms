{
    "openapi": "3.0.2",
    "info": {
        "title": "Rock and Fluid Sample DDMS",
        "description": "OSDU Rock and Fluid Sample DDMS",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "/api/rafs-ddms/v1"
        }
    ],
    "paths": {
        "/metrics": {
            "get": {
                "summary": "Metrics",
                "description": "Endpoint that serves Prometheus metrics.",
                "operationId": "metrics_metrics_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "tags": [
                    "info"
                ],
                "summary": "Get Info",
                "description": "Get application info.\n\n:return: application info\n:rtype: InfoResponse",
                "operationId": "get_info_info_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InfoResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rocksampleanalyses/{record_id}/rca/data/{dataset_id}": {
            "get": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `RockSampleAnalysis` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_rocksampleanalyses__record_id__rca_data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:routine-core-analysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksampleanalyses/{record_id}/rca/data": {
            "post": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `RockSampleAnalysis` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_rocksampleanalyses__record_id__rca_data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Rocksampleanalyses  Record Id  Rca Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksampleanalyses/{record_id}/rca/source": {
            "get": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_rocksampleanalyses__record_id__rca_source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksampleanalyses/{record_id}": {
            "get": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `RockSampleAnalysis` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_rocksampleanalyses__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Rocksampleanalyses  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `RockSampleAnalysis` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_rocksampleanalyses__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksampleanalyses/{record_id}/versions": {
            "get": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `RockSampleAnalysis` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_rocksampleanalyses__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Rocksampleanalyses  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksampleanalyses/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `RockSampleAnalysis` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_rocksampleanalyses__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Rocksampleanalyses  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksampleanalyses": {
            "post": {
                "tags": [
                    "rocksampleanalyses",
                    "rocksampleanalyses"
                ],
                "summary": "Post Records",
                "description": "Create or update `RockSampleAnalysis` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_rocksampleanalyses_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/coringreports/{record_id}": {
            "get": {
                "tags": [
                    "coringreports",
                    "coringreports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `Coring` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_coringreports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Coringreports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "coringreports",
                    "coringreports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `Coring` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_coringreports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/coringreports/{record_id}/versions": {
            "get": {
                "tags": [
                    "coringreports",
                    "coringreports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `Coring` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_coringreports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Coringreports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/coringreports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "coringreports",
                    "coringreports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `Coring` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_coringreports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Coringreports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/coringreports": {
            "post": {
                "tags": [
                    "coringreports",
                    "coringreports"
                ],
                "summary": "Post Records",
                "description": "Create or update `Coring` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_coringreports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksamples/{record_id}": {
            "get": {
                "tags": [
                    "rocksamples",
                    "rocksamples"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `RockSample` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_rocksamples__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Rocksamples  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "rocksamples",
                    "rocksamples"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `RockSample` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_rocksamples__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksamples/{record_id}/versions": {
            "get": {
                "tags": [
                    "rocksamples",
                    "rocksamples"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `RockSample` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_rocksamples__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Rocksamples  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksamples/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "rocksamples",
                    "rocksamples"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `RockSample` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_rocksamples__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Rocksamples  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/rocksamples": {
            "post": {
                "tags": [
                    "rocksamples",
                    "rocksamples"
                ],
                "summary": "Post Records",
                "description": "Create or update `RockSample` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_rocksamples_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/pvtreports/{record_id}": {
            "get": {
                "tags": [
                    "pvtreports",
                    "pvtreports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `PVT` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_pvtreports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Pvtreports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pvtreports",
                    "pvtreports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `PVT` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_pvtreports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/pvtreports/{record_id}/versions": {
            "get": {
                "tags": [
                    "pvtreports",
                    "pvtreports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `PVT` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_pvtreports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Pvtreports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/pvtreports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "pvtreports",
                    "pvtreports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `PVT` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_pvtreports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Pvtreports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/pvtreports": {
            "post": {
                "tags": [
                    "pvtreports",
                    "pvtreports"
                ],
                "summary": "Post Records",
                "description": "Create or update `PVT` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_pvtreports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Records List",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OsduStorageRecord"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/pvtreports/{record_id}/source": {
            "get": {
                "tags": [
                    "pvtreports",
                    "pvtreports"
                ],
                "summary": "Get Source Data",
                "operationId": "get_source_data_pvtreports__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `ConstantCompositionExpansionTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_ccereports__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:constant-composition-expansion[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports/{record_id}/data": {
            "post": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `ConstantCompositionExpansionTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_ccereports__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Ccereports  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports/{record_id}/source": {
            "get": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_ccereports__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports/{record_id}": {
            "get": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `ConstantCompositionExpansionTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_ccereports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Ccereports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `ConstantCompositionExpansionTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_ccereports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports/{record_id}/versions": {
            "get": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `ConstantCompositionExpansionTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_ccereports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Ccereports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `ConstantCompositionExpansionTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_ccereports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Ccereports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/ccereports": {
            "post": {
                "tags": [
                    "ccereports",
                    "ccereports"
                ],
                "summary": "Post Records",
                "description": "Create or update `ConstantCompositionExpansionTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_ccereports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `DifferentialLiberationTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_difflibreports__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:differential-liberation[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports/{record_id}/data": {
            "post": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `DifferentialLiberationTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_difflibreports__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Difflibreports  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports/{record_id}/source": {
            "get": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_difflibreports__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports/{record_id}": {
            "get": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `DifferentialLiberationTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_difflibreports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Difflibreports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `DifferentialLiberationTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_difflibreports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports/{record_id}/versions": {
            "get": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `DifferentialLiberationTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_difflibreports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Difflibreports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `DifferentialLiberationTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_difflibreports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Difflibreports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/difflibreports": {
            "post": {
                "tags": [
                    "difflibreports",
                    "difflibreports"
                ],
                "summary": "Post Records",
                "description": "Create or update `DifferentialLiberationTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_difflibreports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `TransportTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_transporttests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:transport-test[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests/{record_id}/data": {
            "post": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `TransportTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_transporttests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Transporttests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests/{record_id}/source": {
            "get": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_transporttests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests/{record_id}": {
            "get": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `TransportTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_transporttests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Transporttests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `TransportTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_transporttests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests/{record_id}/versions": {
            "get": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `TransportTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_transporttests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Transporttests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `TransportTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_transporttests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Transporttests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/transporttests": {
            "post": {
                "tags": [
                    "transporttests",
                    "transporttests"
                ],
                "summary": "Post Records",
                "description": "Create or update `TransportTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_transporttests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `CompositionAnalysisTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_compositionalanalysisreports__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:compositionalanalysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports/{record_id}/data": {
            "post": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `CompositionAnalysisTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_compositionalanalysisreports__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Compositionalanalysisreports  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports/{record_id}/source": {
            "get": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_compositionalanalysisreports__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports/{record_id}": {
            "get": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `CompositionAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_compositionalanalysisreports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Compositionalanalysisreports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `CompositionAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_compositionalanalysisreports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports/{record_id}/versions": {
            "get": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `CompositionAnalysisTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_compositionalanalysisreports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Compositionalanalysisreports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `CompositionAnalysisTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_compositionalanalysisreports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Compositionalanalysisreports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/compositionalanalysisreports": {
            "post": {
                "tags": [
                    "compositionalanalysisreports",
                    "compositionalanalysisreports"
                ],
                "summary": "Post Records",
                "description": "Create or update `CompositionAnalysisTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_compositionalanalysisreports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `MultiStageSeparatorTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_multistageseparatortests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:multi-stage-separator[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests/{record_id}/data": {
            "post": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `MultiStageSeparatorTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_multistageseparatortests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Multistageseparatortests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests/{record_id}/source": {
            "get": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_multistageseparatortests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests/{record_id}": {
            "get": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `MultiStageSeparatorTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_multistageseparatortests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Multistageseparatortests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `MultiStageSeparatorTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_multistageseparatortests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests/{record_id}/versions": {
            "get": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `MultiStageSeparatorTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_multistageseparatortests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Multistageseparatortests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `MultiStageSeparatorTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_multistageseparatortests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Multistageseparatortests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multistageseparatortests": {
            "post": {
                "tags": [
                    "multistageseparatortests",
                    "multistageseparatortests"
                ],
                "summary": "Post Records",
                "description": "Create or update `MultiStageSeparatorTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_multistageseparatortests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `SwellingTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_swellingtests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:swelling[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests/{record_id}/data": {
            "post": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `SwellingTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_swellingtests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Swellingtests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests/{record_id}/source": {
            "get": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_swellingtests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests/{record_id}": {
            "get": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `SwellingTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_swellingtests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Swellingtests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `SwellingTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_swellingtests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests/{record_id}/versions": {
            "get": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `SwellingTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_swellingtests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Swellingtests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `SwellingTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_swellingtests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Swellingtests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/swellingtests": {
            "post": {
                "tags": [
                    "swellingtests",
                    "swellingtests"
                ],
                "summary": "Post Records",
                "description": "Create or update `SwellingTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_swellingtests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `ConstantVolumeDepletionTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_constantvolumedepletiontests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:constantvolumedepletiontest[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests/{record_id}/data": {
            "post": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `ConstantVolumeDepletionTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_constantvolumedepletiontests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Constantvolumedepletiontests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests/{record_id}/source": {
            "get": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_constantvolumedepletiontests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests/{record_id}": {
            "get": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `ConstantVolumeDepletionTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_constantvolumedepletiontests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Constantvolumedepletiontests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `ConstantVolumeDepletionTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_constantvolumedepletiontests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests/{record_id}/versions": {
            "get": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `ConstantVolumeDepletionTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_constantvolumedepletiontests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Constantvolumedepletiontests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `ConstantVolumeDepletionTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_constantvolumedepletiontests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Constantvolumedepletiontests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/constantvolumedepletiontests": {
            "post": {
                "tags": [
                    "constantvolumedepletiontests",
                    "constantvolumedepletiontests"
                ],
                "summary": "Post Records",
                "description": "Create or update `ConstantVolumeDepletionTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_constantvolumedepletiontests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `WaterAnalysisTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_wateranalysisreports__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:wateranalysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports/{record_id}/data": {
            "post": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `WaterAnalysisTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_wateranalysisreports__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Wateranalysisreports  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports/{record_id}/source": {
            "get": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_wateranalysisreports__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports/{record_id}": {
            "get": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `WaterAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_wateranalysisreports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Wateranalysisreports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `WaterAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_wateranalysisreports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports/{record_id}/versions": {
            "get": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `WaterAnalysisTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_wateranalysisreports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Wateranalysisreports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `WaterAnalysisTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_wateranalysisreports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Wateranalysisreports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/wateranalysisreports": {
            "post": {
                "tags": [
                    "wateranalysisreports",
                    "wateranalysisreports"
                ],
                "summary": "Post Records",
                "description": "Create or update `WaterAnalysisTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_wateranalysisreports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `StockTankOilAnalysisTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_stocktankoilanalysisreports__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:stoanalysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports/{record_id}/data": {
            "post": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `StockTankOilAnalysisTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_stocktankoilanalysisreports__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Stocktankoilanalysisreports  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports/{record_id}/source": {
            "get": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_stocktankoilanalysisreports__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports/{record_id}": {
            "get": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `StockTankOilAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_stocktankoilanalysisreports__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Stocktankoilanalysisreports  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `StockTankOilAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_stocktankoilanalysisreports__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports/{record_id}/versions": {
            "get": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `StockTankOilAnalysisTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_stocktankoilanalysisreports__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Stocktankoilanalysisreports  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `StockTankOilAnalysisTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_stocktankoilanalysisreports__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Stocktankoilanalysisreports  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/stocktankoilanalysisreports": {
            "post": {
                "tags": [
                    "stocktankoilanalysisreports",
                    "stocktankoilanalysisreports"
                ],
                "summary": "Post Records",
                "description": "Create or update `StockTankOilAnalysisTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_stocktankoilanalysisreports_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `InterfacialTensionTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_interfacialtensiontests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:interfacialtension[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests/{record_id}/data": {
            "post": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `InterfacialTensionTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_interfacialtensiontests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Interfacialtensiontests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests/{record_id}/source": {
            "get": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_interfacialtensiontests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests/{record_id}": {
            "get": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `InterfacialTensionTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_interfacialtensiontests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Interfacialtensiontests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `InterfacialTensionTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_interfacialtensiontests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests/{record_id}/versions": {
            "get": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `InterfacialTensionTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_interfacialtensiontests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Interfacialtensiontests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `InterfacialTensionTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_interfacialtensiontests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Interfacialtensiontests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/interfacialtensiontests": {
            "post": {
                "tags": [
                    "interfacialtensiontests",
                    "interfacialtensiontests"
                ],
                "summary": "Post Records",
                "description": "Create or update `InterfacialTensionTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_interfacialtensiontests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `VaporLiquidEquilibriumTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_vaporliquidequilibriumtests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:vaporliquidequilibriumtest[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests/{record_id}/data": {
            "post": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `VaporLiquidEquilibriumTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_vaporliquidequilibriumtests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Vaporliquidequilibriumtests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests/{record_id}/source": {
            "get": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_vaporliquidequilibriumtests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests/{record_id}": {
            "get": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `VaporLiquidEquilibriumTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_vaporliquidequilibriumtests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Vaporliquidequilibriumtests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `VaporLiquidEquilibriumTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_vaporliquidequilibriumtests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests/{record_id}/versions": {
            "get": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `VaporLiquidEquilibriumTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_vaporliquidequilibriumtests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Vaporliquidequilibriumtests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `VaporLiquidEquilibriumTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_vaporliquidequilibriumtests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Vaporliquidequilibriumtests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/vaporliquidequilibriumtests": {
            "post": {
                "tags": [
                    "vaporliquidequilibriumtests",
                    "vaporliquidequilibriumtests"
                ],
                "summary": "Post Records",
                "description": "Create or update `VaporLiquidEquilibriumTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_vaporliquidequilibriumtests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `MultipleContactMiscibilityTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_multiplecontactmiscibilitytests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:multiple-contact-miscibility[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests/{record_id}/data": {
            "post": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `MultipleContactMiscibilityTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_multiplecontactmiscibilitytests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Multiplecontactmiscibilitytests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests/{record_id}/source": {
            "get": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_multiplecontactmiscibilitytests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests/{record_id}": {
            "get": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `MultipleContactMiscibilityTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_multiplecontactmiscibilitytests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Multiplecontactmiscibilitytests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `MultipleContactMiscibilityTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_multiplecontactmiscibilitytests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests/{record_id}/versions": {
            "get": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `MultipleContactMiscibilityTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_multiplecontactmiscibilitytests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Multiplecontactmiscibilitytests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `MultipleContactMiscibilityTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_multiplecontactmiscibilitytests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Multiplecontactmiscibilitytests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/multiplecontactmiscibilitytests": {
            "post": {
                "tags": [
                    "multiplecontactmiscibilitytests",
                    "multiplecontactmiscibilitytests"
                ],
                "summary": "Post Records",
                "description": "Create or update `MultipleContactMiscibilityTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_multiplecontactmiscibilitytests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `SlimTubeTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_slimtubetests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:slimtube-test[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests/{record_id}/data": {
            "post": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `SlimTubeTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_slimtubetests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Slimtubetests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests/{record_id}/source": {
            "get": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_slimtubetests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests/{record_id}": {
            "get": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `SlimTubeTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_slimtubetests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Slimtubetests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `SlimTubeTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_slimtubetests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests/{record_id}/versions": {
            "get": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `SlimTubeTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_slimtubetests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Slimtubetests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `SlimTubeTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_slimtubetests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Slimtubetests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/slimtubetests": {
            "post": {
                "tags": [
                    "slimtubetests",
                    "slimtubetests"
                ],
                "summary": "Post Records",
                "description": "Create or update `SlimTubeTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_slimtubetests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/samplesanalysesreport/{record_id}": {
            "get": {
                "tags": [
                    "samplesanalysesreport",
                    "samplesanalysesreport"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `SamplesAnalysesReport` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_samplesanalysesreport__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Samplesanalysesreport  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "samplesanalysesreport",
                    "samplesanalysesreport"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `SamplesAnalysesReport` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_samplesanalysesreport__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/samplesanalysesreport/{record_id}/versions": {
            "get": {
                "tags": [
                    "samplesanalysesreport",
                    "samplesanalysesreport"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `SamplesAnalysesReport` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_samplesanalysesreport__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Samplesanalysesreport  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/samplesanalysesreport/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "samplesanalysesreport",
                    "samplesanalysesreport"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `SamplesAnalysesReport` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_samplesanalysesreport__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Samplesanalysesreport  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/samplesanalysesreport": {
            "post": {
                "tags": [
                    "samplesanalysesreport",
                    "samplesanalysesreport"
                ],
                "summary": "Post Records",
                "description": "Create or update `SamplesAnalysesReport` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_samplesanalysesreport_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request Records",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/samplesanalysesreport/{record_id}/source": {
            "get": {
                "tags": [
                    "samplesanalysesreport",
                    "samplesanalysesreport"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_samplesanalysesreport__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `CapPressure` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_capillarypressuretests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:capillary-pressure[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests/{record_id}/data": {
            "post": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `CapPressure` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_capillarypressuretests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Capillarypressuretests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests/{record_id}/source": {
            "get": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_capillarypressuretests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests/{record_id}": {
            "get": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `CapPressure` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_capillarypressuretests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Capillarypressuretests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `CapPressure` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_capillarypressuretests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests/{record_id}/versions": {
            "get": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `CapPressure` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_capillarypressuretests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Capillarypressuretests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `CapPressure` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_capillarypressuretests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Capillarypressuretests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/capillarypressuretests": {
            "post": {
                "tags": [
                    "capillarypressuretests",
                    "capillarypressuretests"
                ],
                "summary": "Post Records",
                "description": "Create or update `CapPressure` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_capillarypressuretests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Records List",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OsduStorageRecord"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests/{record_id}": {
            "get": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `RelativePermeability` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_relativepermeabilitytests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Relativepermeabilitytests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `RelativePermeability` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_relativepermeabilitytests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests/{record_id}/versions": {
            "get": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `RelativePermeability` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_relativepermeabilitytests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Relativepermeabilitytests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `RelativePermeability` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_relativepermeabilitytests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Relativepermeabilitytests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests": {
            "post": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Post Records",
                "description": "Create or update `RelativePermeability` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_relativepermeabilitytests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Records List",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OsduStorageRecord"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `RelativePermeability` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_relativepermeabilitytests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:relative-permeability[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests/{record_id}/data": {
            "post": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `RelativePermeability` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_relativepermeabilitytests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Relativepermeabilitytests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/relativepermeabilitytests/{record_id}/source": {
            "get": {
                "tags": [
                    "relativepermeabilitytests",
                    "relativepermeabilitytests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_relativepermeabilitytests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests/{record_id}": {
            "get": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `Fractionation` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_fractionationtests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Fractionationtests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `Fractionation` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_fractionationtests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests/{record_id}/versions": {
            "get": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `Fractionation` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_fractionationtests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Fractionationtests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `Fractionation` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_fractionationtests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Fractionationtests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests": {
            "post": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Post Records",
                "description": "Create or update `Fractionation` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_fractionationtests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Records List",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OsduStorageRecord"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `Fractionation` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_fractionationtests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:fractionation[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests/{record_id}/data": {
            "post": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `Fractionation` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_fractionationtests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Fractionationtests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/fractionationtests/{record_id}/source": {
            "get": {
                "tags": [
                    "fractionationtests",
                    "fractionationtests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_fractionationtests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests/{record_id}": {
            "get": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `Extraction` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_extractiontests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Extractiontests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `Extraction` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_extractiontests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests/{record_id}/versions": {
            "get": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `Extraction` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_extractiontests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Extractiontests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `Extraction` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_extractiontests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Extractiontests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests": {
            "post": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Post Records",
                "description": "Create or update `Extraction` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_extractiontests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Records List",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OsduStorageRecord"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `Extraction` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_extractiontests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:extraction[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests/{record_id}/data": {
            "post": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `Extraction` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_extractiontests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Extractiontests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/extractiontests/{record_id}/source": {
            "get": {
                "tags": [
                    "extractiontests",
                    "extractiontests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_extractiontests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests/{record_id}": {
            "get": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Get Record",
                "description": "Get the latest version of `PhysChem` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_physicalchemistrytests__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Physicalchemistrytests  Record Id  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Soft Delete Record",
                "description": "Delete the `PhysChem` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "soft_delete_record_physicalchemistrytests__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests/{record_id}/versions": {
            "get": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Get Record Versions",
                "description": "Get a list of `PhysChem` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_versions_physicalchemistrytests__record_id__versions_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Versions Physicalchemistrytests  Record Id  Versions Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests/{record_id}/versions/{version}": {
            "get": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Get Record Specific Version",
                "description": "Get the given version of `PhysChem` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_record_specific_version_physicalchemistrytests__record_id__versions__version__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "integer"
                        },
                        "name": "version",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Record Specific Version Physicalchemistrytests  Record Id  Versions  Version  Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests": {
            "post": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Post Records",
                "description": "Create or update `PhysChem` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_records_physicalchemistrytests_post",
                "parameters": [
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Records List",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OsduStorageRecord"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageUpsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests/{record_id}/data/{dataset_id}": {
            "get": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Get Data",
                "description": "Get the (`latest version`) bulk data for a given `PhysChem` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "get_data_physicalchemistrytests__record_id__data__dataset_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Dataset Id",
                            "pattern": "[\\w\\-\\.]+:dataset--File.Generic:physical-chemistry[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
                            "type": "string"
                        },
                        "name": "dataset_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Filter",
                            "type": "string"
                        },
                        "example": "PropertyX,PropertyY,PropertyZ",
                        "name": "columns_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Rows Filter",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],gt,4000",
                        "name": "rows_filter",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Columns Aggregation",
                            "type": "string"
                        },
                        "example": "PropertyX[.PropertyXFieldA],avg",
                        "name": "columns_aggregation",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests/{record_id}/data": {
            "post": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Post Data",
                "description": "Upload the bulk data for a given `PhysChem` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
                "operationId": "post_data_physicalchemistrytests__record_id__data_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Data Physicalchemistrytests  Record Id  Data Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/physicalchemistrytests/{record_id}/source": {
            "get": {
                "tags": [
                    "physicalchemistrytests",
                    "physicalchemistrytests"
                ],
                "summary": "Get Source Data",
                "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
                "operationId": "get_source_data_physicalchemistrytests__record_id__source_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "description": "Specifies the proper data partition id",
                        "required": true,
                        "schema": {
                            "title": "data-partition-id",
                            "description": "Specifies the proper data partition id"
                        },
                        "example": "opendes",
                        "name": "data-partition-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Acl": {
                "title": "Acl",
                "required": [
                    "viewers",
                    "owners"
                ],
                "type": "object",
                "properties": {
                    "viewers": {
                        "title": "Viewers",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "owners": {
                        "title": "Owners",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "app_name": "Errors"
                    }
                }
            },
            "InfoResponse": {
                "title": "InfoResponse",
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "build_time": {
                        "title": "Build Time",
                        "type": "string"
                    },
                    "branch": {
                        "title": "Branch",
                        "type": "string"
                    },
                    "commit_id": {
                        "title": "Commit Id",
                        "type": "string"
                    },
                    "commit_message": {
                        "title": "Commit Message",
                        "type": "string"
                    }
                }
            },
            "Legal": {
                "title": "Legal",
                "required": [
                    "legaltags",
                    "otherRelevantDataCountries"
                ],
                "type": "object",
                "properties": {
                    "legaltags": {
                        "title": "Legaltags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "otherRelevantDataCountries": {
                        "title": "Otherrelevantdatacountries",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                }
            },
            "OsduStorageRecord": {
                "title": "OsduStorageRecord",
                "required": [
                    "kind",
                    "acl",
                    "legal",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "kind": {
                        "title": "Kind",
                        "type": "string"
                    },
                    "acl": {
                        "$ref": "#/components/schemas/Acl"
                    },
                    "legal": {
                        "$ref": "#/components/schemas/Legal"
                    },
                    "data": {
                        "title": "Data",
                        "type": "object"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "array",
                        "items": {}
                    },
                    "ancestry": {
                        "title": "Ancestry",
                        "type": "object"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "object"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "createUser": {
                        "title": "Createuser",
                        "type": "string"
                    },
                    "createTime": {
                        "title": "Createtime",
                        "type": "string"
                    },
                    "modifyUser": {
                        "title": "Modifyuser",
                        "type": "string"
                    },
                    "modifyTime": {
                        "title": "Modifytime",
                        "type": "string"
                    }
                }
            },
            "StorageUpsertResponse": {
                "title": "StorageUpsertResponse",
                "required": [
                    "record_count",
                    "record_id_versions",
                    "skipped_record_count"
                ],
                "type": "object",
                "properties": {
                    "record_count": {
                        "title": "Record Count",
                        "type": "integer"
                    },
                    "record_id_versions": {
                        "title": "Record Id Versions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "skipped_record_count": {
                        "title": "Skipped Record Count",
                        "type": "integer"
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "app_name": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "app_name": "Message"
                    },
                    "type": {
                        "type": "string",
                        "app_name": "Error Type"
                    }
                }
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}