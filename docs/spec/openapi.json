{
  "openapi": "3.0.2",
  "info": {
    "title": "Rock and Fluid Sample DDMS",
    "description": "OSDU Rock and Fluid Sample DDMS",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.2.0"
  },
  "paths": {
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Endpoint that serves Prometheus metrics.",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/rafs-ddms/info": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Get Info",
        "description": "Get application info.\n\n:return: application info\n:rtype: InfoResponse",
        "operationId": "get_info_api_rafs_ddms_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses/{record_id}/rca/data/{dataset_id}": {
      "get": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `RockSampleAnalysis` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_rocksampleanalyses__record_id__rca_data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:routine-core-analysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses/{record_id}/rca/data": {
      "post": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `RockSampleAnalysis` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_rocksampleanalyses__record_id__rca_data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Rocksampleanalyses  Record Id  Rca Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses/{record_id}/rca/source": {
      "get": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_rocksampleanalyses__record_id__rca_source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses/{record_id}": {
      "get": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `RockSampleAnalysis` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_rocksampleanalyses__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Rocksampleanalyses  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `RockSampleAnalysis` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_rocksampleanalyses__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses/{record_id}/versions": {
      "get": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `RockSampleAnalysis` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_rocksampleanalyses__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Rocksampleanalyses  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `RockSampleAnalysis` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_rocksampleanalyses__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--RockSampleAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Rocksampleanalyses  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksampleanalyses": {
      "post": {
        "tags": [
          "rocksampleanalyses"
        ],
        "summary": "Post Records",
        "description": "Create or update `RockSampleAnalysis` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_rocksampleanalyses_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/coringreports/{record_id}": {
      "get": {
        "tags": [
          "coringreports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `Coring` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_coringreports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Coringreports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "coringreports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `Coring` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_coringreports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/coringreports/{record_id}/versions": {
      "get": {
        "tags": [
          "coringreports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `Coring` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_coringreports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Coringreports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/coringreports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "coringreports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `Coring` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_coringreports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--Coring:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Coringreports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/coringreports": {
      "post": {
        "tags": [
          "coringreports"
        ],
        "summary": "Post Records",
        "description": "Create or update `Coring` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_coringreports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksamples/{record_id}": {
      "get": {
        "tags": [
          "rocksamples"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `RockSample` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_rocksamples__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Rocksamples  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "rocksamples"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `RockSample` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_rocksamples__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksamples/{record_id}/versions": {
      "get": {
        "tags": [
          "rocksamples"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `RockSample` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_rocksamples__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Rocksamples  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksamples/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "rocksamples"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `RockSample` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_rocksamples__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:master-data--RockSample:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Rocksamples  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rocksamples": {
      "post": {
        "tags": [
          "rocksamples"
        ],
        "summary": "Post Records",
        "description": "Create or update `RockSample` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_rocksamples_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/pvtreports/{record_id}": {
      "get": {
        "tags": [
          "pvtreports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `PVT` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_pvtreports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Pvtreports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "pvtreports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `PVT` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_pvtreports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/pvtreports/{record_id}/versions": {
      "get": {
        "tags": [
          "pvtreports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `PVT` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_pvtreports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Pvtreports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/pvtreports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "pvtreports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `PVT` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_pvtreports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Pvtreports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/pvtreports": {
      "post": {
        "tags": [
          "pvtreports"
        ],
        "summary": "Post Records",
        "description": "Create or update `PVT` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_pvtreports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/pvtreports/{record_id}/source": {
      "get": {
        "tags": [
          "pvtreports"
        ],
        "summary": "Get Source Data",
        "operationId": "get_source_data_api_rafs_ddms_v1_pvtreports__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--PVT:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "ccereports"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `ConstantCompositionExpansionTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_ccereports__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:constant-composition-expansion[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports/{record_id}/data": {
      "post": {
        "tags": [
          "ccereports"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `ConstantCompositionExpansionTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_ccereports__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Ccereports  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports/{record_id}/source": {
      "get": {
        "tags": [
          "ccereports"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_ccereports__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports/{record_id}": {
      "get": {
        "tags": [
          "ccereports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `ConstantCompositionExpansionTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_ccereports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Ccereports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ccereports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `ConstantCompositionExpansionTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_ccereports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports/{record_id}/versions": {
      "get": {
        "tags": [
          "ccereports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `ConstantCompositionExpansionTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_ccereports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Ccereports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "ccereports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `ConstantCompositionExpansionTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_ccereports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantCompositionExpansionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Ccereports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/ccereports": {
      "post": {
        "tags": [
          "ccereports"
        ],
        "summary": "Post Records",
        "description": "Create or update `ConstantCompositionExpansionTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_ccereports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `DifferentialLiberationTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_difflibreports__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:differential-liberation[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports/{record_id}/data": {
      "post": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `DifferentialLiberationTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_difflibreports__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Difflibreports  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports/{record_id}/source": {
      "get": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_difflibreports__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports/{record_id}": {
      "get": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `DifferentialLiberationTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_difflibreports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Difflibreports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `DifferentialLiberationTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_difflibreports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports/{record_id}/versions": {
      "get": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `DifferentialLiberationTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_difflibreports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Difflibreports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `DifferentialLiberationTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_difflibreports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--DifferentialLiberationTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Difflibreports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/difflibreports": {
      "post": {
        "tags": [
          "difflibreports"
        ],
        "summary": "Post Records",
        "description": "Create or update `DifferentialLiberationTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_difflibreports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "transporttests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `TransportTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_transporttests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:transport-test[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests/{record_id}/data": {
      "post": {
        "tags": [
          "transporttests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `TransportTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_transporttests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Transporttests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests/{record_id}/source": {
      "get": {
        "tags": [
          "transporttests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_transporttests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests/{record_id}": {
      "get": {
        "tags": [
          "transporttests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `TransportTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_transporttests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Transporttests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "transporttests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `TransportTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_transporttests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests/{record_id}/versions": {
      "get": {
        "tags": [
          "transporttests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `TransportTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_transporttests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Transporttests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "transporttests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `TransportTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_transporttests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--TransportTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Transporttests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/transporttests": {
      "post": {
        "tags": [
          "transporttests"
        ],
        "summary": "Post Records",
        "description": "Create or update `TransportTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_transporttests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `CompositionAnalysisTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_compositionalanalysisreports__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:compositionalanalysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports/{record_id}/data": {
      "post": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `CompositionAnalysisTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_compositionalanalysisreports__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Compositionalanalysisreports  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports/{record_id}/source": {
      "get": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_compositionalanalysisreports__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports/{record_id}": {
      "get": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `CompositionAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_compositionalanalysisreports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Compositionalanalysisreports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `CompositionAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_compositionalanalysisreports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports/{record_id}/versions": {
      "get": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `CompositionAnalysisTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_compositionalanalysisreports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Compositionalanalysisreports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `CompositionAnalysisTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_compositionalanalysisreports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--CompositionalAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Compositionalanalysisreports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/compositionalanalysisreports": {
      "post": {
        "tags": [
          "compositionalanalysisreports"
        ],
        "summary": "Post Records",
        "description": "Create or update `CompositionAnalysisTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_compositionalanalysisreports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `MultiStageSeparatorTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_multistageseparatortests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:multi-stage-separator[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests/{record_id}/data": {
      "post": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `MultiStageSeparatorTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_multistageseparatortests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Multistageseparatortests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests/{record_id}/source": {
      "get": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_multistageseparatortests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests/{record_id}": {
      "get": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `MultiStageSeparatorTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_multistageseparatortests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Multistageseparatortests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `MultiStageSeparatorTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_multistageseparatortests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests/{record_id}/versions": {
      "get": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `MultiStageSeparatorTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_multistageseparatortests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Multistageseparatortests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `MultiStageSeparatorTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_multistageseparatortests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultiStageSeparatorTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Multistageseparatortests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multistageseparatortests": {
      "post": {
        "tags": [
          "multistageseparatortests"
        ],
        "summary": "Post Records",
        "description": "Create or update `MultiStageSeparatorTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_multistageseparatortests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `SwellingTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_swellingtests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:swelling[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests/{record_id}/data": {
      "post": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `SwellingTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_swellingtests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Swellingtests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests/{record_id}/source": {
      "get": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_swellingtests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests/{record_id}": {
      "get": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `SwellingTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_swellingtests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Swellingtests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `SwellingTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_swellingtests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests/{record_id}/versions": {
      "get": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `SwellingTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_swellingtests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Swellingtests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `SwellingTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_swellingtests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SwellingTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Swellingtests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/swellingtests": {
      "post": {
        "tags": [
          "swellingtests"
        ],
        "summary": "Post Records",
        "description": "Create or update `SwellingTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_swellingtests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `ConstantVolumeDepletionTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:constantvolumedepletiontest[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests/{record_id}/data": {
      "post": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `ConstantVolumeDepletionTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Constantvolumedepletiontests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests/{record_id}/source": {
      "get": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests/{record_id}": {
      "get": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `ConstantVolumeDepletionTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Constantvolumedepletiontests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `ConstantVolumeDepletionTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests/{record_id}/versions": {
      "get": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `ConstantVolumeDepletionTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Constantvolumedepletiontests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `ConstantVolumeDepletionTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_constantvolumedepletiontests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--ConstantVolumeDepletionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Constantvolumedepletiontests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/constantvolumedepletiontests": {
      "post": {
        "tags": [
          "constantvolumedepletiontests"
        ],
        "summary": "Post Records",
        "description": "Create or update `ConstantVolumeDepletionTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_constantvolumedepletiontests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `WaterAnalysisTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_wateranalysisreports__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:wateranalysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports/{record_id}/data": {
      "post": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `WaterAnalysisTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_wateranalysisreports__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Wateranalysisreports  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports/{record_id}/source": {
      "get": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_wateranalysisreports__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports/{record_id}": {
      "get": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `WaterAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_wateranalysisreports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Wateranalysisreports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `WaterAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_wateranalysisreports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports/{record_id}/versions": {
      "get": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `WaterAnalysisTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_wateranalysisreports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Wateranalysisreports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `WaterAnalysisTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_wateranalysisreports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--WaterAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Wateranalysisreports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/wateranalysisreports": {
      "post": {
        "tags": [
          "wateranalysisreports"
        ],
        "summary": "Post Records",
        "description": "Create or update `WaterAnalysisTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_wateranalysisreports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `StockTankOilAnalysisTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:stoanalysis[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports/{record_id}/data": {
      "post": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `StockTankOilAnalysisTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Stocktankoilanalysisreports  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports/{record_id}/source": {
      "get": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports/{record_id}": {
      "get": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `StockTankOilAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Stocktankoilanalysisreports  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `StockTankOilAnalysisTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports/{record_id}/versions": {
      "get": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `StockTankOilAnalysisTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Stocktankoilanalysisreports  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `StockTankOilAnalysisTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_stocktankoilanalysisreports__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--StockTankOilAnalysisTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Stocktankoilanalysisreports  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/stocktankoilanalysisreports": {
      "post": {
        "tags": [
          "stocktankoilanalysisreports"
        ],
        "summary": "Post Records",
        "description": "Create or update `StockTankOilAnalysisTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_stocktankoilanalysisreports_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `InterfacialTensionTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_interfacialtensiontests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:interfacialtension[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests/{record_id}/data": {
      "post": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `InterfacialTensionTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_interfacialtensiontests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Interfacialtensiontests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests/{record_id}/source": {
      "get": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_interfacialtensiontests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests/{record_id}": {
      "get": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `InterfacialTensionTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_interfacialtensiontests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Interfacialtensiontests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `InterfacialTensionTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_interfacialtensiontests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests/{record_id}/versions": {
      "get": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `InterfacialTensionTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_interfacialtensiontests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Interfacialtensiontests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `InterfacialTensionTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_interfacialtensiontests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--InterfacialTensionTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Interfacialtensiontests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/interfacialtensiontests": {
      "post": {
        "tags": [
          "interfacialtensiontests"
        ],
        "summary": "Post Records",
        "description": "Create or update `InterfacialTensionTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_interfacialtensiontests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `VaporLiquidEquilibriumTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:vaporliquidequilibriumtest[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests/{record_id}/data": {
      "post": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `VaporLiquidEquilibriumTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Vaporliquidequilibriumtests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests/{record_id}/source": {
      "get": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests/{record_id}": {
      "get": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `VaporLiquidEquilibriumTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Vaporliquidequilibriumtests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `VaporLiquidEquilibriumTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests/{record_id}/versions": {
      "get": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `VaporLiquidEquilibriumTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Vaporliquidequilibriumtests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `VaporLiquidEquilibriumTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_vaporliquidequilibriumtests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--VaporLiquidEquilibriumTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Vaporliquidequilibriumtests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/vaporliquidequilibriumtests": {
      "post": {
        "tags": [
          "vaporliquidequilibriumtests"
        ],
        "summary": "Post Records",
        "description": "Create or update `VaporLiquidEquilibriumTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_vaporliquidequilibriumtests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `MultipleContactMiscibilityTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:multiple-contact-miscibility[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests/{record_id}/data": {
      "post": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `MultipleContactMiscibilityTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Multiplecontactmiscibilitytests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests/{record_id}/source": {
      "get": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests/{record_id}": {
      "get": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `MultipleContactMiscibilityTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Multiplecontactmiscibilitytests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `MultipleContactMiscibilityTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests/{record_id}/versions": {
      "get": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `MultipleContactMiscibilityTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Multiplecontactmiscibilitytests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `MultipleContactMiscibilityTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_multiplecontactmiscibilitytests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--MultipleContactMiscibilityTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Multiplecontactmiscibilitytests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/multiplecontactmiscibilitytests": {
      "post": {
        "tags": [
          "multiplecontactmiscibilitytests"
        ],
        "summary": "Post Records",
        "description": "Create or update `MultipleContactMiscibilityTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_multiplecontactmiscibilitytests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `SlimTubeTest` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_slimtubetests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:slimtube-test[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests/{record_id}/data": {
      "post": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `SlimTubeTest` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_slimtubetests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Slimtubetests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests/{record_id}/source": {
      "get": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_slimtubetests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests/{record_id}": {
      "get": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `SlimTubeTest` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_slimtubetests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Slimtubetests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `SlimTubeTest` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_slimtubetests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests/{record_id}/versions": {
      "get": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `SlimTubeTest` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_slimtubetests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Slimtubetests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `SlimTubeTest` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_slimtubetests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SlimTubeTest:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Slimtubetests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/slimtubetests": {
      "post": {
        "tags": [
          "slimtubetests"
        ],
        "summary": "Post Records",
        "description": "Create or update `SlimTubeTest` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_slimtubetests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/samplesanalysesreport/{record_id}": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `SamplesAnalysesReport` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_samplesanalysesreport__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Samplesanalysesreport  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `SamplesAnalysesReport` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_samplesanalysesreport__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/samplesanalysesreport/{record_id}/versions": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `SamplesAnalysesReport` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_samplesanalysesreport__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Samplesanalysesreport  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/samplesanalysesreport/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `SamplesAnalysesReport` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_samplesanalysesreport__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Samplesanalysesreport  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/samplesanalysesreport": {
      "post": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Post Records",
        "description": "Create or update `SamplesAnalysesReport` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_samplesanalysesreport_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/samplesanalysesreport/{record_id}/source": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_samplesanalysesreport__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `CapPressure` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_capillarypressuretests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:capillary-pressure[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests/{record_id}/data": {
      "post": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `CapPressure` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_capillarypressuretests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Capillarypressuretests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests/{record_id}/source": {
      "get": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_capillarypressuretests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests/{record_id}": {
      "get": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `CapPressure` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_capillarypressuretests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Capillarypressuretests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `CapPressure` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_capillarypressuretests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests/{record_id}/versions": {
      "get": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `CapPressure` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_capillarypressuretests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Capillarypressuretests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `CapPressure` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_capillarypressuretests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Capillarypressuretests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/capillarypressuretests": {
      "post": {
        "tags": [
          "capillarypressuretests"
        ],
        "summary": "Post Records",
        "description": "Create or update `CapPressure` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_capillarypressuretests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests/{record_id}": {
      "get": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `RelativePermeability` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_relativepermeabilitytests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Relativepermeabilitytests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `RelativePermeability` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_relativepermeabilitytests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests/{record_id}/versions": {
      "get": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `RelativePermeability` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_relativepermeabilitytests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Relativepermeabilitytests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `RelativePermeability` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_relativepermeabilitytests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Relativepermeabilitytests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests": {
      "post": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Post Records",
        "description": "Create or update `RelativePermeability` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_relativepermeabilitytests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `RelativePermeability` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_relativepermeabilitytests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:relative-permeability[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests/{record_id}/data": {
      "post": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `RelativePermeability` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_relativepermeabilitytests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Relativepermeabilitytests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/relativepermeabilitytests/{record_id}/source": {
      "get": {
        "tags": [
          "relativepermeabilitytests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_relativepermeabilitytests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests/{record_id}": {
      "get": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `Fractionation` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_fractionationtests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Fractionationtests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `Fractionation` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_fractionationtests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests/{record_id}/versions": {
      "get": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `Fractionation` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_fractionationtests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Fractionationtests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `Fractionation` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_fractionationtests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Fractionationtests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests": {
      "post": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Post Records",
        "description": "Create or update `Fractionation` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_fractionationtests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `Fractionation` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_fractionationtests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:fractionation[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests/{record_id}/data": {
      "post": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `Fractionation` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_fractionationtests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Fractionationtests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/fractionationtests/{record_id}/source": {
      "get": {
        "tags": [
          "fractionationtests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_fractionationtests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests/{record_id}": {
      "get": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `Extraction` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_extractiontests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Extractiontests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `Extraction` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_extractiontests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests/{record_id}/versions": {
      "get": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `Extraction` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_extractiontests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Extractiontests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `Extraction` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_extractiontests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Extractiontests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests": {
      "post": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Post Records",
        "description": "Create or update `Extraction` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_extractiontests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `Extraction` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_extractiontests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:extraction[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests/{record_id}/data": {
      "post": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `Extraction` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_extractiontests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Extractiontests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/extractiontests/{record_id}/source": {
      "get": {
        "tags": [
          "extractiontests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_extractiontests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests/{record_id}": {
      "get": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `PhysChem` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_physicalchemistrytests__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Physicalchemistrytests  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `PhysChem` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_physicalchemistrytests__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests/{record_id}/versions": {
      "get": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `PhysChem` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_physicalchemistrytests__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Physicalchemistrytests  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `PhysChem` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_physicalchemistrytests__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Physicalchemistrytests  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests": {
      "post": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Post Records",
        "description": "Create or update `PhysChem` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_physicalchemistrytests_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `PhysChem` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_physicalchemistrytests__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:physical-chemistry[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests/{record_id}/data": {
      "post": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `PhysChem` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_physicalchemistrytests__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Physicalchemistrytests  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/physicalchemistrytests/{record_id}/source": {
      "get": {
        "tags": [
          "physicalchemistrytests"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_physicalchemistrytests__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties/{record_id}": {
      "get": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `ElectricalProperties` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_electricalproperties__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Electricalproperties  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `ElectricalProperties` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_electricalproperties__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties/{record_id}/versions": {
      "get": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `ElectricalProperties` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_electricalproperties__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Electricalproperties  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `ElectricalProperties` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_electricalproperties__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Electricalproperties  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties": {
      "post": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Post Records",
        "description": "Create or update `ElectricalProperties` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_electricalproperties_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `ElectricalProperties` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_electricalproperties__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:electricalproperties[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties/{record_id}/data": {
      "post": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `ElectricalProperties` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_electricalproperties__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Electricalproperties  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/electricalproperties/{record_id}/source": {
      "get": {
        "tags": [
          "electricalproperties"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_electricalproperties__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities/{record_id}": {
      "get": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `RockCompressibility` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_rockcompressibilities__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Rockcompressibilities  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `RockCompressibility` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_rockcompressibilities__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities/{record_id}/versions": {
      "get": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `RockCompressibility` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_rockcompressibilities__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Rockcompressibilities  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `RockCompressibility` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_rockcompressibilities__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Rockcompressibilities  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities": {
      "post": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Post Records",
        "description": "Create or update `RockCompressibility` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_rockcompressibilities_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `RockCompressibility` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_rockcompressibilities__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:rock-compressibility[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities/{record_id}/data": {
      "post": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `RockCompressibility` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_rockcompressibilities__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Rockcompressibilities  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/rockcompressibilities/{record_id}/source": {
      "get": {
        "tags": [
          "rockcompressibilities"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_rockcompressibilities__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities/{record_id}": {
      "get": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `WaterGasRelativePermeability` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Watergasrelativepermeabilities  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `WaterGasRelativePermeability` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities/{record_id}/versions": {
      "get": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `WaterGasRelativePermeability` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Watergasrelativepermeabilities  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `WaterGasRelativePermeability` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Watergasrelativepermeabilities  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities": {
      "post": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Post Records",
        "description": "Create or update `WaterGasRelativePermeability` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_watergasrelativepermeabilities_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `WaterGasRelativePermeability` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:water-gas-relative-permeability[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities/{record_id}/data": {
      "post": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `WaterGasRelativePermeability` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Watergasrelativepermeabilities  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/watergasrelativepermeabilities/{record_id}/source": {
      "get": {
        "tags": [
          "watergasrelativepermeabilities"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_watergasrelativepermeabilities__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes/{record_id}": {
      "get": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `FormationResistivityIndex` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v1_formationresistivityindexes__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V1 Formationresistivityindexes  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `FormationResistivityIndex` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v1_formationresistivityindexes__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes/{record_id}/versions": {
      "get": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `FormationResistivityIndex` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v1_formationresistivityindexes__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V1 Formationresistivityindexes  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `FormationResistivityIndex` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v1_formationresistivityindexes__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V1 Formationresistivityindexes  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes": {
      "post": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Post Records",
        "description": "Create or update `FormationResistivityIndex` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v1_formationresistivityindexes_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes/{record_id}/data/{dataset_id}": {
      "get": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Get Data",
        "description": "Get the (`latest version`) bulk data for a given `FormationResistivityIndex` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_api_rafs_ddms_v1_formationresistivityindexes__record_id__data__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:formationresistivityindex[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes/{record_id}/data": {
      "post": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Post Data",
        "description": "Upload the bulk data for a given `FormationResistivityIndex` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_api_rafs_ddms_v1_formationresistivityindexes__record_id__data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data Api Rafs Ddms V1 Formationresistivityindexes  Record Id  Data Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v1/formationresistivityindexes/{record_id}/source": {
      "get": {
        "tags": [
          "formationresistivityindexes"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v1_formationresistivityindexes__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysesreport/{record_id}": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `SamplesAnalysesReport` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v2_samplesanalysesreport__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V2 Samplesanalysesreport  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `SamplesAnalysesReport` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v2_samplesanalysesreport__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysesreport/{record_id}/versions": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `SamplesAnalysesReport` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v2_samplesanalysesreport__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V2 Samplesanalysesreport  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysesreport/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `SamplesAnalysesReport` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v2_samplesanalysesreport__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V2 Samplesanalysesreport  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysesreport": {
      "post": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Post Records",
        "description": "Create or update `SamplesAnalysesReport` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v2_samplesanalysesreport_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request Records",
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysesreport/{record_id}/source": {
      "get": {
        "tags": [
          "samplesanalysesreport"
        ],
        "summary": "Get Source Data",
        "description": "Get source data from data.Datasets property.\n\n:param record_id: record id\n:type record_id: str\n:param storage_service: storage service, defaults to Depends(get_async_storage_service)\n:type storage_service: dataset.DatasetService, optional\n:param dataset_service: dataset service, defaults to Depends(get_async_dataset_service)\n:type dataset_service: storage.StorageService, optional\n:param version: version, defaults to None\n:type version: Optional[str], optional\n:return: rendered source data response\n:rtype: JSONResponse",
        "operationId": "get_source_data_api_rafs_ddms_v2_samplesanalysesreport__record_id__source_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysesReport:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Version",
              "type": "string"
            },
            "name": "version",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysis/analysistypes": {
        "get": {
          "tags": [
            "samplesanalysis"
          ],
          "summary": "Get Types",
          "description": "Get available types.",
          "operationId": "get_types_api_rafs_ddms_v2_samplesanalysis_types_get",
          "parameters": [
            {
              "description": "Specifies the proper data partition id",
              "required": true,
              "schema": {
                "title": "data-partition-id",
                "description": "Specifies the proper data partition id"
              },
              "example": "opendes",
              "name": "data-partition-id",
              "in": "header"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Get Types Api Rafs Ddms V2 Samplesanalysis Types Get",
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                      }
                    }
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/rafs-ddms/v2/samplesanalysis/{record_id}": {
      "get": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Get Record",
        "description": "Get the latest version of `SamplesAnalysis` object by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_api_rafs_ddms_v2_samplesanalysis__record_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Api Rafs Ddms V2 Samplesanalysis  Record Id  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Soft Delete Record",
        "description": "Delete the `SamplesAnalysis` object by record id.<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "soft_delete_record_api_rafs_ddms_v2_samplesanalysis__record_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysis/{record_id}/versions": {
      "get": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Get Record Versions",
        "description": "Get a list of `SamplesAnalysis` object versions by record id.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_versions_api_rafs_ddms_v2_samplesanalysis__record_id__versions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Versions Api Rafs Ddms V2 Samplesanalysis  Record Id  Versions Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysis/{record_id}/versions/{version}": {
      "get": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Get Record Specific Version",
        "description": "Get the given version of `SamplesAnalysis` object.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_record_specific_version_api_rafs_ddms_v2_samplesanalysis__record_id__versions__version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Version",
              "type": "integer"
            },
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Specific Version Api Rafs Ddms V2 Samplesanalysis  Record Id  Versions  Version  Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysis": {
      "post": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Post Records",
        "description": "Create or update `SamplesAnalysis` record(s).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_records_api_rafs_ddms_v2_samplesanalysis_post",
        "parameters": [
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Records List",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OsduStorageRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUpsertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysis/{record_id}/data/{analysis_type}/{dataset_id}": {
      "get": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Get Data V2",
        "description": "Get the (`latest version`) bulk data for a given `{analysis_type}` object by record id. <br><br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>            The  `columns_filter`, `rows_filter`, and  `columns_aggregation`                 query parameters can be used to manage data in response.<br><br>        Required roles: `users.datalake.viewers` or `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "get_data_v2_api_rafs_ddms_v2_samplesanalysis__record_id__data__analysis_type___dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Analysis Type",
              "type": "string"
            },
            "name": "analysis_type",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "pattern": "[\\w\\-\\.]+:dataset--File.Generic:[\\w\\-\\d\\.]+:?[\\w\\-\\.\\:\\%]*",
              "type": "string"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Filter",
              "type": "string"
            },
            "example": "PropertyX,PropertyY,PropertyZ",
            "name": "columns_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Rows Filter",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],gt,4000",
            "name": "rows_filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Columns Aggregation",
              "type": "string"
            },
            "example": "PropertyX[.PropertyXFieldA],avg",
            "name": "columns_aggregation",
            "in": "query"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    },
    "/api/rafs-ddms/v2/samplesanalysis/{record_id}/data/{analysis_type}": {
      "post": {
        "tags": [
          "samplesanalysis"
        ],
        "summary": "Post Data V2",
        "description": "Upload the bulk data for a given `{analysis_type}` object by record id.<br>            It creates a new version of the record. <br>            The previous meta-data with bulk data is available by their `versions`. <br> <br>            Use the `Content-Type` request header to specify payload and response formats                 (`application/json` and `application/parquet` are supported).<br>            Use the `Accept` request header to specify content schema version                 (example header `Accept: */*;version=1.0.0` is supported).<br><br>        Required roles: `users.datalake.editors` or `users.datalake.admins`.<br>         In addition, users must be members of a data group(ACL) to access the data.",
        "operationId": "post_data_v2_api_rafs_ddms_v2_samplesanalysis__record_id__data__analysis_type__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record Id",
              "pattern": "^[\\w\\-\\.]+:work-product-component--SamplesAnalysis:[\\w\\-\\.\\:\\%]+$",
              "type": "string"
            },
            "name": "record_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Analysis Type",
              "type": "string"
            },
            "name": "analysis_type",
            "in": "path"
          },
          {
            "description": "Specifies the proper data partition id",
            "required": true,
            "schema": {
              "title": "data-partition-id",
              "description": "Specifies the proper data partition id"
            },
            "example": "opendes",
            "name": "data-partition-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post Data V2 Api Rafs Ddms V2 Samplesanalysis  Record Id  Data  Analysis Type  Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": [

            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Acl": {
        "title": "Acl",
        "required": [
          "viewers",
          "owners"
        ],
        "type": "object",
        "properties": {
          "viewers": {
            "title": "Viewers",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "owners": {
            "title": "Owners",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "app_name": "Errors"
          }
        }
      },
      "InfoResponse": {
        "title": "InfoResponse",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "app_version": {
            "title": "App Version",
            "type": "string"
          },
          "build_time": {
            "title": "Build Time",
            "type": "string"
          },
          "branch": {
            "title": "Branch",
            "type": "string"
          },
          "commit_id": {
            "title": "Commit Id",
            "type": "string"
          },
          "commit_message": {
            "title": "Commit Message",
            "type": "string"
          },
          "release_version": {
            "title": "Release Version",
            "type": "string"
          }
        }
      },
      "Legal": {
        "title": "Legal",
        "required": [
          "legaltags",
          "otherRelevantDataCountries"
        ],
        "type": "object",
        "properties": {
          "legaltags": {
            "title": "Legaltags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "otherRelevantDataCountries": {
            "title": "Otherrelevantdatacountries",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        }
      },
      "OsduStorageRecord": {
        "title": "OsduStorageRecord",
        "required": [
          "kind",
          "acl",
          "legal",
          "data"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "kind": {
            "title": "Kind",
            "type": "string"
          },
          "acl": {
            "$ref": "#/components/schemas/Acl"
          },
          "legal": {
            "$ref": "#/components/schemas/Legal"
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "meta": {
            "title": "Meta",
            "type": "array",
            "items": {

            }
          },
          "ancestry": {
            "title": "Ancestry",
            "type": "object"
          },
          "tags": {
            "title": "Tags",
            "type": "object"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          },
          "createUser": {
            "title": "Createuser",
            "type": "string"
          },
          "createTime": {
            "title": "Createtime",
            "type": "string"
          },
          "modifyUser": {
            "title": "Modifyuser",
            "type": "string"
          },
          "modifyTime": {
            "title": "Modifytime",
            "type": "string"
          }
        }
      },
      "StorageUpsertResponse": {
        "title": "StorageUpsertResponse",
        "required": [
          "record_count",
          "record_id_versions",
          "skipped_record_count"
        ],
        "type": "object",
        "properties": {
          "record_count": {
            "title": "Record Count",
            "type": "integer"
          },
          "record_id_versions": {
            "title": "Record Id Versions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skipped_record_count": {
            "title": "Skipped Record Count",
            "type": "integer"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "app_name": "Location"
          },
          "msg": {
            "type": "string",
            "app_name": "Message"
          },
          "type": {
            "type": "string",
            "app_name": "Error Type"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
