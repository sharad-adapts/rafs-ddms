#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  swelling_test_data_schema.json
#   timestamp: 2023-04-20T16:47:55+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, constr


class TestTemperature(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class SaturationPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class DensityAtSaturationPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class GasPhaseType(Enum):
    Pb = 'Pb'
    Pd = 'Pd'
    field_2_Ph = '2-Ph'


class RelativeVolume(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class Density(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class GasOilRatio(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeMethaneToOriginalFluidMolePCT(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeMethaneOfTotalFluidMolePCT(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class SwellingTestStep(BaseModel):
    StepNumber: Optional[str] = Field(
        None,
        description='Internal step number which identifies the sequence of step in swelling measurements',
        title='Step Number',
    )
    SaturationPressure: Optional[SaturationPressure] = None
    GasPhaseType: Optional[GasPhaseType] = Field(None, description='Pb/Pd/2-Ph')
    RelativeVolume: Optional[RelativeVolume] = None
    Density: Optional[Density] = None
    GasOilRatio: Optional[GasOilRatio] = None
    CumulativeMethaneToOriginalFluidMolePCT: Optional[
        CumulativeMethaneToOriginalFluidMolePCT
    ] = None
    CumulativeMethaneOfTotalFluidMolePCT: Optional[
        CumulativeMethaneOfTotalFluidMolePCT
    ] = None


class MoleWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class TargetMolePct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class AchieveMolePct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class InjectionGasProperty(BaseModel):
    ComponentName: Optional[str] = Field(None, title='Component Name')
    ComponentFormula: Optional[str] = Field(None, title='Component Name')
    MoleWeight: Optional[MoleWeight] = None
    TargetMolePct: Optional[TargetMolePct] = None
    AchieveMolePct: Optional[AchieveMolePct] = None


class Model(BaseModel):
    SwellingTestID: constr(
        regex=r'^[\w\-\.]+:work-product-component\-\-SwellingTest:[\w\-\.\:\%]+:[0-9]*$'
    ) = Field(..., title='Swelling Test ID')
    FluidSampleID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-FluidSample:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Unique identifier of the Fluid Sample which Atmospheric Flash and Compositional Analysis is done on',
        title='Fluid Sample ID',
    )
    TestNumber: Optional[str] = Field(
        None,
        description='A number for this test for purposes of e.g., tracking lab sequence.',
        title='Test Number',
    )
    TestTemperature: Optional[TestTemperature] = None
    SaturationPressure: Optional[SaturationPressure] = None
    DensityAtSaturationPressure: Optional[DensityAtSaturationPressure] = None
    SwellingTestSteps: Optional[List[SwellingTestStep]] = None
    InjectionGasProperties: Optional[List[InjectionGasProperty]] = None
