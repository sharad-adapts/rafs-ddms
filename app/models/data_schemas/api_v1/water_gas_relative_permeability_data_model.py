#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  water_gas_relatve_permeability_data_schema.json
#   timestamp: 2023-07-18T09:37:46+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, constr


class WaterSaturation(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ]


class GasSaturation(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ]


class PermeabilityItem(BaseModel):
    PermeabilityType: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ]


class InitialCondition(BaseModel):
    WaterSaturation: Optional[WaterSaturation] = None
    GasSaturation: Optional[GasSaturation] = None
    Permeability: Optional[List[PermeabilityItem]] = None


class PermeabilityItem1(BaseModel):
    PermeabilityType: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ]


class PctOfOriginalGasInPlace(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ]


class PctOfInitialGasInPlace(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ]


class TerminalCondition(BaseModel):
    GasSaturation: Optional[GasSaturation] = None
    Permeability: Optional[List[PermeabilityItem1]] = None
    PctOfOriginalGasInPlace: Optional[PctOfOriginalGasInPlace] = None
    PctOfInitialGasInPlace: Optional[PctOfInitialGasInPlace] = None


class Model(BaseModel):
    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    InitialConditions: Optional[List[InitialCondition]] = None
    TerminalConditions: Optional[List[TerminalCondition]] = None
