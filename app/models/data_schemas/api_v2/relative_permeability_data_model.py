#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  relative_permeability_data_schema.json
#   timestamp: 2023-12-13T16:46:14+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class TestTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Porosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PorosityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PorosityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class EffectivePermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    PermeabilityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    FluidType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    WettabilityPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class RelativePermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RelativePermeabilityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    FluidType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    WettabilityPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SaturationItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    FluidType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    WettabilityPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    SaturationType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class LastFlowRate(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InitialConditions(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    EffectivePermeability: Optional[List[EffectivePermeabilityItem]] = None
    RelativePermeability: Optional[List[RelativePermeabilityItem]] = None
    Saturation: Optional[List[SaturationItem]] = None
    LastFlowRate: Optional[LastFlowRate] = None


class TerminalConditions(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    EffectivePermeability: Optional[List[EffectivePermeabilityItem]] = None
    RelativePermeability: Optional[List[RelativePermeabilityItem]] = None
    Saturation: Optional[List[SaturationItem]] = None


class RelativePermeabilityCrossover(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class EndFaceSaturationCrossover(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ReferencePermeability(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Type: Optional[Any] = None


class InterfacialTension(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BrineSalinity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilViscosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasViscosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WaterViscosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WaterDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NetConfiningStress(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class DeltaP(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InjectionRateItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    FluidType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    WettabilityPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeProductionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    FluidType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    WettabilityPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PermeabilityTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    NetConfiningStress: Optional[NetConfiningStress] = None
    DeltaP: Optional[DeltaP] = None
    InjectionRate: Optional[List[InjectionRateItem]] = None
    CumulativeProduction: Optional[List[CumulativeProductionItem]] = None
    EffectivePermeability: Optional[List[EffectivePermeabilityItem]] = None
    RelativePermeability: Optional[List[RelativePermeabilityItem]] = None
    Saturation: Optional[List[SaturationItem]] = None


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    DesaturationMethod: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DesaturationMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="method of desaturation, e.g. centrifuge gas-water, centrifuge oil-water, flood-gas, pore pressure gas-water, etc",
    )
    TestTemperature: Optional[TestTemperature] = None
    Porosity: Optional[Porosity] = None
    InitialConditions: Optional[InitialConditions] = None
    TerminalConditions: Optional[TerminalConditions] = None
    RelativePermeabilityCrossover: Optional[RelativePermeabilityCrossover] = None
    EndFaceSaturationCrossover: Optional[EndFaceSaturationCrossover] = None
    ReferencePermeability: Optional[ReferencePermeability] = Field(
        None,
        description="e.g. gas permeability kg, gas permeability at minimum liquid saturation kg@Slmin, oil permeability ko, water permeability kw, etc",
    )
    SaturationProcessMethod: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationProcessMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    InterfacialTension: Optional[InterfacialTension] = None
    BrineSalinity: Optional[BrineSalinity] = None
    OilViscosity: Optional[OilViscosity] = None
    GasViscosity: Optional[GasViscosity] = None
    WaterViscosity: Optional[WaterViscosity] = None
    OilDensity: Optional[OilDensity] = None
    GasDensity: Optional[GasDensity] = None
    WaterDensity: Optional[WaterDensity] = None
    FluidSystemType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidSystemType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PermeabilityTestSteps: Optional[List[PermeabilityTestStep]] = None
