#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  multiple_salinity_data_schema.json
#   timestamp: 2023-12-14T14:37:02+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, constr

from app.models.config import RafsBaseModel


class BQv(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Qv(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BrineResistivity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$")
    ] = None


class WaterSaturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$")
    ] = None


class WaterSaturationOverResistivityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ResistivityIndex: Optional[float] = None
    WaterSaturation: Optional[WaterSaturation] = None


class SalinityTestResult(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SampleID: Optional[
        constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    ] = None
    BQv: Optional[BQv] = None
    Qv: Optional[Qv] = None
    BrineResistivity: Optional[BrineResistivity] = None
    AdjustedFormationResistivityFactor: Optional[float] = None
    AdjustedSaturationExponent: Optional[float] = None
    WaterSaturationOverResistivity: Optional[
        List[WaterSaturationOverResistivityItem]
    ] = None


class BrineSalinity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BrineConductivity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CoreConductivity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SalinityTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    BrineSalinity: Optional[BrineSalinity] = None
    BrineConductivity: Optional[BrineConductivity] = None
    CoreConductivity: Optional[CoreConductivity] = None


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    TestMethod: Optional[str] = None
    SalinityTestResults: Optional[List[SalinityTestResult]] = None
    SalinityTestSteps: Optional[List[SalinityTestStep]] = None
