#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  bulk_pyrolysis_analyses.1.0.0.json
#   timestamp: 2025-02-07T15:58:34+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional

from pydantic import Extra, Field, constr


class TOCItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S1(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S2(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S3Org(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S3InOrg(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class TMAX(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class RawTMAX(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S5(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class TotalSulfurContentItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S3COOrg(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S3COInOrg(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S4CO(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S4CO2(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PyrolysisCarbon(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ResidualCarbon(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MineralCarbon(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Q0(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Q1(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Q2(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Q3(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Q4(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MultiHeatingPeaks(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    q0: Optional[Q0] = Field(None, description="multi-heating peak 0")
    q1: Optional[Q1] = Field(None, description="multi-heating peak 1")
    q2: Optional[Q2] = Field(None, description="multi-heating peak 2")
    q3: Optional[Q3] = Field(None, description="multi-heating peak 3")
    q4: Optional[Q4] = Field(None, description="multi-heating peak 4")


class HI(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OI(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PI(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S1TOCRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PP(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class S2S3Ratio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class VREItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class TransformationRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class TOCOriginal(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class HIOriginal(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CalculatedProperties(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    HI: Optional[HI] = Field(None, description="Hydrogen Index: S2/TOC")
    OI: Optional[OI] = Field(None, description="Oxygen Index: S3/TOC")
    PI: Optional[PI] = Field(None, description="Production Index: S1/(S1+S2))")
    S1TOCRatio: Optional[S1TOCRatio] = Field(
        None, description="Ratio of pyrolysis S1 to the total organic carbon %"
    )
    PP: Optional[PP] = Field(None, description="PP (Petroleum Potential): S1+S2")
    S2S3Ratio: Optional[S2S3Ratio] = Field(None, description="Ratio Pyrolysis S2/S3")
    VRE: Optional[List[VREItem]] = Field(
        None, description="Vitrinite Reflectance Equivalent (VRE) using Tmax"
    )
    TransformationRatio: Optional[TransformationRatio] = Field(
        None,
        description="Calculated transformation ratio using the calculated VRE, assuming organofacies B",
    )
    TOCOriginal: Optional[TOCOriginal] = Field(
        None,
        description="TOC original (TOCo) back-calculated using present day TOC and a calculated VRE, to account for maturity",
    )
    HIOriginal: Optional[HIOriginal] = Field(
        None,
        description="HI original (HIo) back-calculated using present day TOC and a calculated VRE, to account for maturity",
    )


class BulkPyrolysisAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Prep: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SamplesPreparationMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="Sample preparation method")
    TOC: Optional[List[TOCItem]] = Field(
        None, description="Total organic carbon content"
    )
    S1: Optional[S1] = Field(
        None,
        description="Pyrolysis S1. Free hydrocarbons generated at lower temperatures",
    )
    S2: Optional[S2] = Field(
        None,
        description="Pyrolysis S2. Hydrocarbon potential generated at higher temperatures",
    )
    S3Org: Optional[S3Org] = Field(
        None,
        description="Pyrolysis S3, carbon dioxide generated from pyrolsis below 400degC. Thought to relate to organic carbon",
    )
    S3InOrg: Optional[S3InOrg] = Field(
        None,
        description="Pyrolysis S3, carbon dioxide generated from pyrolsis below 400degC. Thought to relate to inorganic carbon",
    )
    TMAX: Optional[TMAX] = Field(
        None,
        description="The temperature at which the maximum rate of hydrocarbon generation occurs in a kerogen sample during pyrolysis analysis",
    )
    RawTMAX: Optional[RawTMAX] = Field(
        None, description="The temperature at the maximum S2 value"
    )
    S5: Optional[S5] = Field(
        None,
        description="Pyrolysis S5, carbon dioxide generated from oxidation above 650degC. Thought to relate to inorganic carbon",
    )
    TotalSulfurContent: Optional[List[TotalSulfurContentItem]] = Field(
        None, description="Total Sulfur content"
    )
    S3COOrg: Optional[S3COOrg] = Field(
        None,
        description="Pyrolysis S3CO, carbon monoxide generated from pyrolsis below 550degC. Thought to relate to organic carbon",
    )
    S3COInOrg: Optional[S3COInOrg] = Field(
        None,
        description="Pyrolysis S3CO, carbon monoxide generated from pyrolsis below 550degC. Thought to relate to inorganic carbon",
    )
    S4CO: Optional[S4CO] = Field(
        None,
        description="Pyrolysis S4CO, carbon monoxide generated from oxidation below 650degC. Thought to relate to organic carbon",
    )
    S4CO2: Optional[S4CO2] = Field(
        None,
        description="Pyrolysis S4CO2, carbon dioxide generated from oxidation below 650degC. Thought to relate to organic carbon",
    )
    PyrolysisCarbon: Optional[PyrolysisCarbon] = Field(
        None, description="Pyrolysable organic carbon content"
    )
    ResidualCarbon: Optional[ResidualCarbon] = Field(
        None, description="Residual organic carbon content"
    )
    MineralCarbon: Optional[MineralCarbon] = Field(
        None, description="Mineral carbon content"
    )
    MultiHeatingPeaks: Optional[MultiHeatingPeaks] = Field(
        None, description="Mineral carbon content"
    )
    CalculatedProperties: Optional[CalculatedProperties] = None


class BulkPyrolysisAnalysesModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    BulkPyrolysisAnalysis: Optional[List[BulkPyrolysisAnalysi]] = Field(
        None, description="", title="Bulk Pyrolysis Analysis"
    )
