#  Copyright 2025 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  bulk_pyrolysis_analyses.1.0.0.json
#   timestamp: 2025-02-11T19:43:05+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class TOCItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    BulkPyrolysisMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to determine the Total Organic Carbon (TOC) content in the sample, indicating the quantity of organic material present.",
        title="Bulk Pyrolysis Method ID",
    )


class Q0(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to determine the q0 parameter, which represents the initial hydrocarbon yield in the pyrolysis process.",
        title="Method",
    )


class Q1(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to determine the q1 parameter, reflecting the amount of hydrocarbons released during the initial stages of pyrolysis.",
        title="Method",
    )


class Q2(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to determine the q2 parameter, indicating the quantity of hydrocarbons released at intermediate pyrolysis temperatures.",
        title="Method",
    )


class Q3(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to determine the q3 parameter, related to the hydrocarbon yield during the later stages of pyrolysis.",
        title="Method",
    )


class Q4(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to determine the q4 parameter, which reflects the hydrocarbon release at high temperatures during the pyrolysis process.",
        title="Method",
    )


class MultiHeatingPeaks(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    q0: Optional[Q0] = Field(
        None,
        description="Multi-heating peak 0, the initial hydrocarbon yield in the pyrolysis process.",
        title="q0",
    )
    q1: Optional[Q1] = Field(
        None,
        description="Multi-heating peak 1, the amount of hydrocarbons released during the initial stages of pyrolysis.",
        title="q1",
    )
    q2: Optional[Q2] = Field(
        None,
        description="Multi-heating peak 2, the quantity of hydrocarbons released at intermediate pyrolysis temperatures.",
        title="q2",
    )
    q3: Optional[Q3] = Field(
        None,
        description="Multi-heating peak 3 - the hydrocarbon yield during the later stages of pyrolysis.",
        title="q3",
    )
    q4: Optional[Q4] = Field(
        None,
        description="Multi-heating peak 4 - the hydrocarbon release at high temperatures during the pyrolysis process.",
        title="q4",
    )


class VREItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    BulkPyrolysisMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to measure the Vitrinite Reflectance Equivalent (VRE), providing information about the thermal maturity of the sample.",
        title="Bulk Pyrolysis Method ID",
    )


class CalculatedProperties(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    HI: Optional[float] = Field(
        None, description="Hydrogen Index: S2/TOC", title="Hydrogen Index"
    )
    OI: Optional[float] = Field(
        None, description="Oxygen Index: S3/TOC", title="Oxygen Index"
    )
    PI: Optional[float] = Field(
        None, description="Production Index: S1/(S1+S2))", title="Production Index"
    )
    S1TOCRatio: Optional[float] = Field(
        None,
        description="Ratio of pyrolysis S1 to the total organic carbon %\n\nAlso known as the oil saturation index (OSI)",
        title="S1 TOC Ratio",
    )
    PP: Optional[float] = Field(
        None, description="PP (Petroleum Potential): S1+S2", title="Petroleum Potential"
    )
    S2S3Ratio: Optional[float] = Field(
        None, description="Ratio Pyrolysis S2/S3", title="S2S3 Ratio"
    )
    VRE: Optional[List[VREItem]] = Field(
        None,
        description="Vitrinite Reflectance Equivalent (VRE) using Tmax",
        title="Vitrinite Reflectance Equivalent",
    )
    TransformationRatio: Optional[float] = Field(
        None,
        description="Calculated transformation ratio using the calculated VRE, assuming organofacies B",
        title="Transformation Ratio",
    )
    TOCOriginal: Optional[float] = Field(
        None,
        description="TOC original (TOCo) back-calculated using present day TOC and a calculated VRE, to account for maturity",
        title="TOC Original",
    )
    HIOriginal: Optional[float] = Field(
        None,
        description="HI original (HIo) back-calculated using present day TOC and a calculated VRE, to account for maturity.",
        title="Hydrogen Index Original",
    )


class TotalSulfurContentItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    BulkPyrolysisMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-BulkPyrolysisMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to measure the total sulfur content, which affects the accuracy and interpretation of the sulfur data.",
        title="Bulk Pyrolysis Method ID",
    )


class BulkPyrolysisAnalysesModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        title="Meta",
    )
    SamplePreparationID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SamplePreparationMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None, description="Sample preparation method", title="Sample Preparation ID"
    )
    TOC: Optional[List[TOCItem]] = Field(
        None, description="Total organic carbon content.", title="Total Organic Carbon"
    )
    S1: Optional[float] = Field(
        None,
        description="The amount of free hydrocarbons (oil and gas) present in a rock sample before it undergoes pyrolysis--volatilized at a moderate temperature and measured as the S1 peak.",
        title="S1",
    )
    S2: Optional[float] = Field(
        None,
        description="In Rock-Eval pyrolysis, S2 measures the hydrocarbons produced when the rock’s organic matter, called kerogen, is heated and breaks down. This process happens at higher temperatures, releasing hydrocarbons that weren’t initially present in the rock. So, S2 shows how much more hydrocarbon the rock can still generate.",
        title="S2",
    )
    S3: Optional[float] = Field(
        None,
        description="In Rock-Eval pyrolysis, S3 measures the amount of carbon dioxide (CO₂) released when the rock’s organic matter is heated. This CO₂ comes from the breakdown of kerogen and other organic materials in the rock. Essentially, S3 indicates the amount of oxygen-rich organic matter present in the rock.",
        title="S3",
    )
    S3Org: Optional[float] = Field(
        None,
        description="S3 Organic: This helps you specifically assess the amount of CO₂ from organic matter, which is crucial for calculating the Oxygen Index (OI) and understanding the type and maturity of the organic material.\n\nThis refers to the CO₂ released from the decomposition of organic matter, such as kerogen, within the rock. It typically occurs at temperatures between 300 and 400°C12.",
        title="S3 Organic",
    )
    S3InOrg: Optional[float] = Field(
        None,
        description="S3 Inorganic quantifies the CO₂ from carbonate minerals, providing insights into the mineralogical composition of the rock.\n\nThis refers to the CO₂ released from the decomposition of carbonate minerals, like calcite or dolomite, within the rock. This can happen at higher temperatures, often above 400°C23.",
        title="S3 Inorganic",
    )
    TMAX: Optional[float] = Field(
        None,
        description="This accounts for any adjustments or calibrations needed to correct for factors like sample heterogeneity, weight, or the presence of contaminants. Tmax offers a more accurate representation of the thermal maturity of the organic matter.",
        title="Temperature Maximum",
    )
    RawTMAX: Optional[float] = Field(
        None,
        description="Raw Tmax in Rock-Eval pyrolysis refers to the initial temperature at which the maximum rate of hydrocarbon generation occurs from the thermal cracking of kerogen, as observed directly from the pyrolysis data without any corrections or adjustments12. This raw value is crucial for assessing the thermal maturity of the organic matter in the rock sample.",
        title="Raw Temperature Maximum",
    )
    S5: Optional[float] = Field(
        None,
        description="Pyrolysis S5, carbon dioxide generated from oxidation above 650degC. Thought to relate to inorganic carbon",
        title="S5",
    )
    S0: Optional[float] = Field(
        None,
        description="In older Rock-Eval data, the S0 peak represents the amount of very light hydrocarbons (typically C1-C5) that are volatilized at the beginning of the pyrolysis process, before the main S1 peak12. These light hydrocarbons are often referred to as “free hydrocarbons” and can provide additional information about the presence of very light oil or gas in the rock sample2.\n\nThe S0 peak is less commonly used in modern Rock-Eval analysis, as advancements in technology and methodology have led to more precise measurements and interpretations of hydrocarbon content. However, it can still be valuable for understanding the initial hydrocarbon content in older datasets.",
        title="S0",
    )
    S3COOrg: Optional[float] = Field(
        None,
        description="Pyrolysis S3CO, carbon monoxide generated from pyrolsis below 550degC. Thought to relate to organic carbon",
        title="S3CO Organic",
    )
    S3COInOrg: Optional[float] = Field(
        None,
        description="Pyrolysis S3CO, carbon monoxide generated from pyrolsis below 550degC. Thought to relate to inorganic carbon",
        title="S3CO Inorganic",
    )
    S4CO: Optional[float] = Field(
        None,
        description="Pyrolysis S4CO, carbon monoxide generated from oxidation below 650degC. Thought to relate to organic carbon",
        title="S4CO",
    )
    S4CO2: Optional[float] = Field(
        None,
        description="Pyrolysis S4CO2, carbon dioxide generated from oxidation below 650degC. Thought to relate to organic carbon",
        title="S4CO2",
    )
    PyrolysisCarbon: Optional[float] = Field(
        None,
        description="Pyrolysable organic carbon content of the sample.",
        title="Pyrolysis Carbon",
    )
    ResidualCarbon: Optional[float] = Field(
        None,
        description="Residual organic carbon content of the sample.",
        title="Residual Carbon",
    )
    MineralCarbon: Optional[float] = Field(
        None,
        description="Mineral carbon content of the sample.",
        title="Mineral Carbon",
    )
    MultiHeatingPeaks: Optional[MultiHeatingPeaks] = Field(
        None,
        description="Records the peak hydrocarbon yields during multple stages of pyrolysis.",
        title="Multi Heating Peaks",
    )
    CalculatedProperties: Optional[CalculatedProperties] = Field(
        None,
        description="Properties derived from the pyrolysis data, such as S1, S2, S3, Tmax, and other calculated values indicating the organic richness and thermal characteristics of the sample.",
        title="Calculated Properties",
    )
    TotalSulfurContent: Optional[List[TotalSulfurContentItem]] = Field(
        None,
        description="The total sulfur content in the sample, measured during the pyrolysis test, providing insights into sulfur-rich organic compounds.\n\nHere’s how sulfur measurements are integrated into Rock-Eval analysis, particularly with the Rock-Eval 7 Sulfur analyzer:\nSample Preparation:\nA small amount of rock sample (typically less than 100 mg) is prepared for analysis.\nPyrolysis Phase:\nThe sample is heated in an inert atmosphere (usually helium or nitrogen) to volatilize hydrocarbons and organic sulfur compounds. This phase measures the S1 and S2 peaks, as well as the initial sulfur content.\nOxidation Phase:\nAfter pyrolysis, the sample undergoes an oxidation phase where it is heated in the presence of oxygen. This phase measures the remaining carbon and sulfur compounds, including inorganic sulfur.\nDetection:\nThe gases released during both phases are analyzed using detectors calibrated for sulfur dioxide (SO₂), carbon monoxide (CO), and carbon dioxide (CO₂). An infrared detector is commonly used for SO₂ detection12.\nData Interpretation:\nThe SO₂ signal is analyzed to differentiate between various forms of sulfur:\nOrganic Sulfur: Released during the pyrolysis phase.\nInorganic Sulfur: Released during the oxidation phase, including sulfur from pyrite and sulfates.\nThe data can be used to quantify the total sulfur content and distinguish between different sulfur sources.\nApplications:\nUnderstanding sulfur content is crucial for evaluating the quality of hydrocarbons and assessing the potential for sour gas production.\nIt also helps in identifying the presence of sulfur-bearing minerals, which can impact reservoir quality and production strategies12.\nBy integrating sulfur measurements into Rock-Eval analysis, you gain a comprehensive understanding of both the organic and inorganic sulfur content in your rock samples, enhancing your ability to evaluate their hydrocarbon potential and associated risks.",
        title="Total Sulfur Content",
    )
