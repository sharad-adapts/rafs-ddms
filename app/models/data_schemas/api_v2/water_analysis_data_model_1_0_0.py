#  Copyright 2025 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  water_analysis.1.0.0.json
#   timestamp: 2025-02-13T20:04:47+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class Remark(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class Resistivity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    FluidResistivityMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidResistivityMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method by which the resistivity of the fluid sample was measured.",
        title="Fluid Resistivity Measurement Method ID",
    )
    Temperature: Optional[float] = Field(
        None,
        description="The temperature at which resistivity was measured.",
        title="Temperature",
    )


class WaterDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Temperature: Optional[float] = Field(
        None,
        description="The temperature at which Water Density was recorded.",
        title="Temperature",
    )


class Salinity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Temperature: Optional[float] = Field(
        None,
        description="The temperature at which salinity was measured.",
        title="Temperature",
    )


class TotalDissolvedSolids(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Type: Optional[str] = Field(
        None,
        description="A classification that identifies the various types of inorganic and organic substances dissolved in water, including salts, minerals, metals, cations, anions, and small organic molecules, which contribute to the overall concentration of total dissolved solids (TDS) in the water sample.",
        title="Type",
    )


class TotalSuspendedSolids(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Type: Optional[str] = Field(
        None,
        description="A classification that identifies the various particles and solid substances suspended in water, which contribute to the overall concentration of total suspended solids (TSS); these include silt, clay, organic matter, algae, and microorganisms, which can affect water clarity and quality.",
        title="Type",
    )


class TotalHardness(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Type: Optional[str] = Field(
        None,
        description="A classification that identifies the various sources and types of hardness-causing ions in the water sample, primarily focusing on divalent metal cations such as calcium and magnesium, which contribute to the overall hardness of the water.",
        title="Type",
    )


class TotalAlkalinity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Type: Optional[str] = Field(
        None,
        description="A classification that identifies the various sources and types of alkalinity in the water sample, primarily focusing on bicarbonates, carbonates, and hydroxides, which contribute to the overall buffering capacity of the water.",
        title="Type",
    )


class TotalSedimentSolids(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Type: Optional[str] = Field(
        None,
        description="A classification that identifies the various particles and solid substances suspended in the water sample, including organic matter, silt, clay, and other inorganic materials, which contribute to the overall concentration of total sediment solids (TSS) and affect the clarity and quality of the water.",
        title="Type",
    )


class PH(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    PHMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PHMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method by which pH was measured.",
        title="PH Measurement Method ID",
    )
    Temperature: Optional[float] = Field(
        None,
        description="The temperature at which pH was measured.",
        title="Temperature",
    )


class Conductivity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    ConductivityMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ConductivityMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method by which Conductivity was measured.",
        title="Conductivity Measurement Method ID",
    )
    Temperature: Optional[float] = Field(
        None,
        description="The temperature at which Conductivity was recorded.",
        title="Temperature",
    )


class WaterGeneralAnalysis(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    AnalysisPressure: Optional[float] = Field(
        None,
        description="The pressure at which the water sample is analyzed to determine its various properties and dissolved gases content.",
        title="Analysis Pressure",
    )
    DissolvedCO2: Optional[float] = Field(
        None,
        description="The concentration of carbon dioxide gas dissolved in the water sample.",
        title="Dissolved CO2",
    )
    DissolvedH2S: Optional[float] = Field(
        None,
        description="The concentration of hydrogen sulfide gas dissolved in the water sample.",
        title="Dissolved H2S",
    )
    DissolvedO2: Optional[float] = Field(
        None,
        description="The concentration of oxygen gas dissolved in the water sample.",
        title="Dissolved O2",
    )
    Resistivity: Optional[Resistivity] = Field(
        None,
        description="The electrical resistance of the water sample, often used to infer ion concentration.",
        title="Resistivity",
    )
    Viscosity: Optional[float] = Field(
        None,
        description="The measure of the water sample's resistance to flow or deformation.",
        title="Viscosity",
    )
    SolutionGasWaterRatio: Optional[float] = Field(
        None,
        description="The ratio of the volume of gas dissolved in the water to the volume of the water sample.",
        title="Solution Gas Water Ratio",
    )
    WaterViscousCompressibility: Optional[float] = Field(
        None,
        description="The measure of the change in water viscosity under varying pressure conditions.",
        title="Water Viscous Compressibility",
    )
    WaterDensity: Optional[WaterDensity] = Field(
        None,
        description="The mass per unit volume of the water sample.",
        title="Water Density",
    )
    WaterSpecificHeat: Optional[float] = Field(
        None,
        description="The amount of heat required to raise the temperature of a unit mass of water by one degree Celsius.",
        title="Water Specific Heat",
    )
    WaterFormationVolumeFactor: Optional[float] = Field(
        None,
        description="The ratio of the volume of water in reservoir conditions to its volume at surface conditions.",
        title="Water Formation Volume Factor",
    )
    WaterHeatCapacity: Optional[float] = Field(
        None,
        description="The total amount of heat required to raise the temperature of the water sample by one degree Celsius.",
        title="Water Heat Capacity",
    )
    WaterIsothermalCompressibility: Optional[float] = Field(
        None,
        description="The measure of the relative change in the volume of the water with respect to changes in pressure at constant temperature.",
        title="Water Isothermal Compressibility",
    )
    WaterThermalConductivity: Optional[float] = Field(
        None,
        description="The ability of the water sample to conduct heat.",
        title="Water Thermal Conductivity",
    )
    WaterThermalExpansion: Optional[float] = Field(
        None,
        description="The measure of the change in volume of the water sample as a result of a temperature change.",
        title="Water Thermal Expansion",
    )
    WaterEnthalpy: Optional[float] = Field(
        None,
        description="The total heat content of the water sample.",
        title="Water Enthalpy",
    )
    WaterEntropy: Optional[float] = Field(
        None,
        description="The amount of energy in the water sample that is not available for doing work.",
        title="Water Entropy",
    )
    WaterSpecificVolume: Optional[float] = Field(
        None,
        description="The inverse of water density, indicating the volume occupied by a unit mass of water.",
        title="Water Specific Volume",
    )
    Salinity: Optional[Salinity] = Field(
        None,
        description="The total concentration of dissolved salts in the water sample.",
        title="Salinity",
    )
    TotalDissolvedSolids: Optional[TotalDissolvedSolids] = Field(
        None,
        description="The total concentration of solid substances dissolved in the water sample.",
        title="Total Dissolved Solids",
    )
    TotalSuspendedSolids: Optional[TotalSuspendedSolids] = Field(
        None,
        description="The total concentration of particles suspended in the water sample.",
        title="Total Suspended Solids",
    )
    TotalHardness: Optional[TotalHardness] = Field(
        None,
        description="The concentration of multivalent cations, primarily calcium and magnesium ions, in the water sample.",
        title="Total Hardness",
    )
    TotalAlkalinity: Optional[TotalAlkalinity] = Field(
        None,
        description="The capacity of the water sample to neutralize acids, primarily due to the presence of bicarbonates, carbonates, and hydroxides.",
        title="Total Alkalinity",
    )
    TotalSedimentSolids: Optional[TotalSedimentSolids] = Field(
        None,
        description="The total concentration of sediment particles within the water sample.",
        title="Total Sediment Solids",
    )
    pH: Optional[PH] = Field(
        None,
        description="A measure of the acidity or alkalinity of the water sample, based on the concentration of hydrogen ions.",
        title="pH",
    )
    Conductivity: Optional[Conductivity] = Field(
        None,
        description="The measure of the water sample’s ability to conduct electrical current, related to the concentration of ions in the water.",
        title="Conductivity",
    )


class Anion(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[str] = Field(
        None, description="The name of this anion.", title="Component Name ID"
    )
    Value: Optional[float] = Field(None, title="Value")
    ElementalMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ElementalMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method of measurement for this component.",
        title="Elemental Measurement Method ID",
    )


class Cation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[str] = Field(
        None, description="The name of this cation.", title="Component Name ID"
    )
    Value: Optional[float] = Field(None, title="Value")
    ElementalMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ElementalMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method of measurement for this component.",
        title="Elemental Measurement Method ID",
    )


class DissolvedMetal(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[str] = Field(
        None, description="The name of this cation.", title="Component Name ID"
    )
    Value: Optional[float] = Field(None, title="Value")
    ElementalMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ElementalMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method of measurement for this component.",
        title="Elemental Measurement Method ID",
    )


class OrganicAcid(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[str] = Field(
        None, description="The name of this cation.", title="Component Name ID"
    )
    Value: Optional[float] = Field(None, title="Value")
    ElementalMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ElementalMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method of measurement for this component.",
        title="Elemental Measurement Method ID",
    )


class Remarks(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class WaterSampleComponentItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Anions: Optional[List[Anion]] = Field(
        None,
        description="Array capturing the name and measurement method of the anions in the sample.",
        title="Anions",
    )
    Cations: Optional[List[Cation]] = Field(
        None,
        description="Array capturing the name and measurement method of the cations in the sample.",
        title="Cations",
    )
    DissolvedMetals: Optional[List[DissolvedMetal]] = Field(
        None,
        description="Array capturing the name and measurement method of the dissolved metals in the sample.",
        title="Dissolved Metals",
    )
    OrganicAcids: Optional[List[OrganicAcid]] = Field(
        None,
        description="Array capturing the name and measurement method of the organic acids in the sample.",
        title="Organic Acids",
    )
    IonDifference: Optional[float] = Field(
        None,
        description="The ion difference of this component.",
        title="Ion Difference",
    )
    MolarConcentration: Optional[float] = Field(
        None,
        description="The molar concentration of this component",
        title="Molar Concentration",
    )
    VolumeConcentration: Optional[float] = Field(
        None,
        description="The volume concentration of this component.",
        title="Volume Concentration",
    )
    MassConcentration: Optional[float] = Field(
        None,
        description="The mass concentration of this component.",
        title="Mass Concentration",
    )
    EquivalentConcentration: Optional[float] = Field(
        None,
        description="The equivalent concentration of this component.",
        title="Equivalent Concentration",
    )
    ConcentrationRelativeToDetectableLimits: Optional[float] = Field(
        None,
        description="The concentration of this component relative to the detectable limits of the experiment.",
        title="Concentration Relative To Detectable Limits",
    )
    Remarks: Optional[Remarks] = Field(
        None,
        description="Additional notes or observations regarding the test, conditions, or results that may be relevant for interpretation.",
        title="Remarks",
    )


class WaterAnalysisModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    WaterAnalysisMethodID: Optional[str] = Field(
        None,
        description="The method used for this analysis.",
        title="Water Analysis Method ID",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )
    WaterGeneralAnalysis: Optional[WaterGeneralAnalysis] = Field(
        None,
        description="Object containing general analysis properties.",
        title="Water General Analysis",
    )
    WaterSampleComponent: Optional[List[WaterSampleComponentItem]] = Field(
        None,
        description="Array capturing the components and concentrations from the water sample during the analysis.",
        title="Water Sample Component",
    )
