#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  sto_data_schema.json
#   timestamp: 2023-12-11T15:41:00+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class StockTankPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class StockTankTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Temperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class APIAtTemperatureItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Temperature: Optional[Temperature] = None


class PourPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ASTMFlashPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NBase(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WaxContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ParrafinContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CloudPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MeltPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WaterContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class TotalAcidNumber(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MercapSulphur(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PenetrationGrade(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SofteningPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SmokingPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FreezingPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AnilinePoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SaltContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WaterSedimentContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ViscosityAtTemperatureItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Temperature: Optional[Temperature] = None


class SulphurContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[str] = None


class NitrogenContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[str] = None


class OxygenContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[str] = None


class HydrogenContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[str] = None


class CarbonContent(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[str] = None


class NSRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class HCRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OCRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CHNOSAnalysis(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SulphurContent: Optional[SulphurContent] = Field(
        None, description="Sulphur content in a sample", title="Sulphur Content"
    )
    NitrogenContent: Optional[NitrogenContent] = Field(
        None, description="Nitrogen content in a sample", title="Nitrogen Content"
    )
    OxygenContent: Optional[OxygenContent] = Field(
        None, description="Oxygen content in a sample", title="Oxygen Content"
    )
    HydrogenContent: Optional[HydrogenContent] = Field(
        None, description="Hydrogen content in a sample", title="Hydrogen Content"
    )
    CarbonContent: Optional[CarbonContent] = Field(
        None, description="Carbon content in a sample", title="Carbon Content"
    )
    NSRatio: Optional[NSRatio] = Field(
        None, description="Elemental Nitrogen to Sulphur ratio", title="NS Ratio"
    )
    HCRatio: Optional[HCRatio] = Field(
        None,
        description="Elemental Hydrogen to Carbon ratio as a fraction of Kerogen isolate",
        title="HC Ratio",
    )
    OCRatio: Optional[OCRatio] = Field(
        None,
        description="Elemental Oxygen to Carbon ratio as a fraction of Kerogen isolate",
        title="OC Ratio",
    )


class MetalsElementAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Element: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-Elements:[\w\-\.\:\%]+:[0-9]*$")
    ] = None
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Method: Optional[str] = None


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    Method: Optional[str] = Field(
        None, description="The sample analysis method used for this analysis"
    )
    FluidConditions: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidPhasesPresent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PhasesPresent: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidPhasesPresent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    StockTankPressure: Optional[StockTankPressure] = None
    StockTankTemperature: Optional[StockTankTemperature] = None
    MolecularWeight: Optional[MolecularWeight] = None
    APIAtTemperature: Optional[List[APIAtTemperatureItem]] = Field(
        None,
        description="Fluid API gravity at indicated temperature",
        title="API at Temperature",
    )
    WatsonKFactor: Optional[float] = None
    PourPoint: Optional[PourPoint] = Field(
        None,
        description="The temperature below which the liquid loses its flow characteristics",
        title="Pour Point",
    )
    ASTMFlashPoint: Optional[ASTMFlashPoint] = None
    NBase: Optional[NBase] = None
    WaxContent: Optional[WaxContent] = Field(
        None,
        description="The amount or percentage of wax present in a sample",
        title="Wax Content",
    )
    ParrafinContent: Optional[ParrafinContent] = None
    CloudPoint: Optional[CloudPoint] = Field(
        None,
        description="The temperature below which a transparent solution undergoes either a liquid-liquid phase separation to form an emulsion or a liquid-solid phase transition to form either a stable solution or a suspension that settles a precipitate",
        title="Cloud Point",
    )
    MeltPoint: Optional[MeltPoint] = Field(
        None,
        description="The temperature at which a substance changes from its solid state to its liquid state",
        title="Melting Point",
    )
    WaterContent: Optional[WaterContent] = Field(
        None,
        description="The amount or percentage of water present in a sample",
        title="Water Content",
    )
    TotalAcidNumber: Optional[TotalAcidNumber] = Field(
        None,
        description="The quantity of acidic compounds present in a sample",
        title="TAN Total Acid Number",
    )
    MercapSulphur: Optional[MercapSulphur] = Field(
        None, description="Mercaptan sulphur concentration", title="Mercaptan Sulphur"
    )
    PenetrationGrade: Optional[PenetrationGrade] = Field(
        None, description="The penetration grade", title="Penetration Grade"
    )
    SofteningPoint: Optional[SofteningPoint] = Field(
        None,
        description="The temperature at which a resin begins to flow",
        title="Softening Point",
    )
    SmokingPoint: Optional[SmokingPoint] = Field(
        None,
        description="The temperature at which an oil begins to produce a continuous visible smoke",
        title="Smoking Point",
    )
    FreezingPoint: Optional[FreezingPoint] = Field(
        None,
        description="The temperature at which a substance changes from its liquid state to its solid state",
        title="Freezing Point",
    )
    AnilinePoint: Optional[AnilinePoint] = Field(
        None,
        description="The minimum temperature at which equal volumes of aniline and lubricant oil are miscible, i.e. form a single phase upon mixing",
        title="Aniline Point",
    )
    SaltContent: Optional[SaltContent] = Field(
        None,
        description="The amount or percentage of sodium chloride present in a sample",
        title="Salt Content",
    )
    WaterSedimentContent: Optional[WaterSedimentContent] = Field(
        None,
        description="The amount or percentage of basic water and sediment present in a sample",
        title="Water Sediment Content",
    )
    ViscosityAtTemperature: Optional[List[ViscosityAtTemperatureItem]] = Field(
        None,
        description="Fluid viscosity at indicated temperature",
        title="Viscosity at Temperature",
    )
    CHNOSAnalysis: Optional[CHNOSAnalysis] = Field(
        None,
        description="Carbon Hydrogen Nitrogen Oxygen Sulphur analysis",
        title="CHNOS Analysis",
    )
    MetalsElementAnalysis: Optional[List[MetalsElementAnalysi]] = Field(
        None,
        description="The metal elemental composition of a sample",
        title="Metals Element Analysis",
    )
