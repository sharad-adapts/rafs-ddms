#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  cap_pressure_data_schema.json
#   timestamp: 2023-10-26T16:27:40+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Permeability(BaseModel):
    Value: Optional[float] = None
    Type: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CapillaryPressureMethod(BaseModel):
    Value: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CapillaryPressureMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Capillary Pressure test method, e.g. Imbibition, Primary Imbibition, Drainage, Tertiary Drainage, Mercury Injection",
    )


class InitialWaterSaturation(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InitialGasSaturation(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Temperature(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CapillaryPressureMax(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CapillaryPressureMin(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CapillaryPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PhaseSaturationItem(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    DisplacingFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid introduced to a sample during capillary pressure testing, e.g. Mercury",
    )
    DisplacedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid produced or displaced from a sample during capillary pressure testing, e.g. Brine, Hexane, or LiveCrudeOil",
    )
    CapillaryPressurePhaseType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CapillaryPressurePhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Phase transition type for this capillary pressure test, e.g. Wetting or Nonwetting",
    )


class PhaseInjectedVolumeItem(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    DisplacingFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid introduced to a sample during capillary pressure testing, e.g. Mercury",
    )
    DisplacedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid produced or displaced from a sample during capillary pressure testing, e.g. Brine, Hexane, or LiveCrudeOil",
    )
    CapillaryPressurePhaseType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CapillaryPressurePhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Phase transition type for this capillary pressure test, e.g. Wetting or Nonwetting",
    )


class PoreThroatRadius(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PoreThroatMedianRadius(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class JFunction(BaseModel):
    Value: Optional[float] = None


class GasWaterCapillaryPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasOilCapillaryPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilWaterCapillaryPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasWaterFWL(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilWaterFWL(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CalculatedProperties(BaseModel):
    PoreThroatRadius: Optional[PoreThroatRadius] = None
    PoreThroatMedianRadius: Optional[PoreThroatMedianRadius] = None
    JFunction: Optional[JFunction] = None
    GasWaterCapillaryPressure: Optional[GasWaterCapillaryPressure] = None
    GasOilCapillaryPressure: Optional[GasOilCapillaryPressure] = None
    OilWaterCapillaryPressure: Optional[OilWaterCapillaryPressure] = None
    GasWaterFWL: Optional[GasWaterFWL] = Field(
        None, description="estimated height above free water level for gas"
    )
    OilWaterFWL: Optional[OilWaterFWL] = Field(
        None, description="estimated height above free water level for oil"
    )


class PoreThroatSize(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativePhaseSaturation(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    DisplacingFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid introduced to a sample during capillary pressure testing, e.g. Mercury",
    )
    DisplacedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid produced or displaced from a sample during capillary pressure testing, e.g. Brine, Hexane, or LiveCrudeOil",
    )
    CapillaryPressurePhaseType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CapillaryPressurePhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Phase transition type for this capillary pressure test, e.g. Wetting or Nonwetting",
    )


class PhaseSaturationFrequency(BaseModel):
    Value: Optional[float] = None
    DisplacingFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacingFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid introduced to a sample during capillary pressure testing, e.g. Mercury",
    )
    DisplacedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid produced or displaced from a sample during capillary pressure testing, e.g. Brine, Hexane, or LiveCrudeOil",
    )
    CapillaryPressurePhaseType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CapillaryPressurePhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Phase transition type for this capillary pressure test, e.g. Wetting or Nonwetting",
    )


class PoreThroatSizeDistributionItem(BaseModel):
    PoreThroatSize: Optional[PoreThroatSize] = None
    CumulativePhaseSaturation: Optional[CumulativePhaseSaturation] = None
    PhaseSaturationFrequency: Optional[PhaseSaturationFrequency] = None


class CapillaryPressureStep(BaseModel):
    StepNumber: Optional[str] = None
    CapillaryPressure: Optional[CapillaryPressure] = None
    PhaseSaturation: Optional[List[PhaseSaturationItem]] = None
    PhaseInjectedVolume: Optional[List[PhaseInjectedVolumeItem]] = None
    Remark: Optional[str] = None
    CalculatedProperties: Optional[CalculatedProperties] = None
    PoreThroatSizeDistribution: Optional[List[PoreThroatSizeDistributionItem]] = None


class TestDatum(BaseModel):
    Permeability: Optional[Permeability] = None
    CapillaryPressureMethod: Optional[CapillaryPressureMethod] = None
    InitialWaterSaturation: Optional[InitialWaterSaturation] = None
    InitialGasSaturation: Optional[InitialGasSaturation] = None
    Temperature: Optional[Temperature] = None
    CapillaryPressureMax: Optional[CapillaryPressureMax] = None
    CapillaryPressureMin: Optional[CapillaryPressureMin] = None
    CapillaryPressureSteps: Optional[List[CapillaryPressureStep]] = None


class Model(BaseModel):
    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    TestData: Optional[List[TestDatum]] = None
