#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  routine_core_analysis.1.0.0.json
#   timestamp: 2025-02-05T18:09:45+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class Conditions(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Pressure: float = Field(
        ...,
        description="The recorded absolute pressure condition. The unit of measure context is defined via meta[] in the Storage record while the Search responses return the value in base SI unit Pa (Pascal).",
        example="1 bar",
        title="Pressure",
    )
    Temperature: float = Field(
        ...,
        description="The recorded temperature condition. The unit of measure context is defined via meta[] in the Storage record while the Search responses return the value in base SI unit K (Kelvin).",
        example="15 degC",
        title="Temperature",
    )
    IsStandardConditions: Optional[bool] = Field(
        None,
        description="To capture when Measurement have been made at Standard Conditions (25°C / 100 kPa)\nMutually Exclusive with Pressure/Temperature.\nCapture",
        title="Is Standard Conditions",
    )
    NonStandardConditionsReference: Optional[str] = Field(
        None,
        description='Open Text Box to capture the P & T Reference when measurements are made at non standard conditions (such as "Reservoir", "Tank",…)',
        title="Non Standard Conditions Reference",
    )


class PermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    PermeabilityMeasurementTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of permeability being measured/computed at the reported confining pressure.",
        title="Permeability Measurement Type ID",
    )
    SampleOrientationTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrientationType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The orientation of the long axis of a rock sample, relative to the bedding in the source or to the wellbore path, e.g. HorizontalToBedding, HorizontalToBorehole, AxialPerpendicular.",
        title="Sample Orientation Type ID",
    )
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )
    NetConfiningStress: Optional[float] = Field(
        None,
        description="The pressure exerted on a sample from its environment, minus the pore pressure within the sample.",
        title="Net Confining Stress",
    )
    PressureMean: Optional[float] = Field(
        None,
        description="Mean pressure during permeability measurements.  Average between inlet and outlet pressures, used to calculate Klinkenberg correction, typically reported as reciprocal pressure, e.g. 1/bar",
        title="Pressure Mean",
    )


class PorosityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    PorosityMeasurementTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PorosityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of porosity being measured/computed at the reported confining pressure.",
        title="Porosity Measurement Type ID",
    )
    SampleOrientationTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrientationType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The orientation of the long axis of a rock sample, relative to the bedding in the source or to the wellbore path, e.g. HorizontalToBedding, HorizontalToBorehole, AxialPerpendicular.",
        title="Sample Orientation Type ID",
    )
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )
    NetConfiningStress: Optional[float] = Field(
        None,
        description="The pressure exerted on a sample from its environment, minus the pore pressure within the sample.",
        title="Net Confining Stress",
    )


class GrainDensityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    GrainDensityMeasurementTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-GrainDensityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of measurement used to calculate the mass of solid material within a sample relative to the volume of the sample, e.g. BoylesLaw.",
        title="Grain Density Measurement Type ID",
    )
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )
    SampleOrientationTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrientationType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The orientation of the long axis of a rock sample, relative to the bedding in the source or to the wellbore path, e.g. HorizontalToBedding, HorizontalToBorehole, AxialPerpendicular.",
        title="Sample Orientation Type ID",
    )


class GrainVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )


class PoreVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )


class SaturationItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    SaturationFluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid Type used for saturation of the sample, e.g. water, gas, or oil.",
        title="Saturation Fluid Type ID",
    )
    SaturationMethodTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationMethodType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method used to saturate the sample, e.g. MercuryInjection, DrainageTwoPhase, PrimaryImbibition, SecondaryImbibition.",
        title="Saturation Method Type ID",
    )
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )


class Remark(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class RoutineCoreAnalysisModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    LithologyDescription: Optional[str] = Field(
        None,
        description="A description of the physical and chemical characteristics of the sample.",
        title="Lithology Description",
    )
    Conditions: Optional[Conditions] = Field(
        None,
        description="Pressure and temperature condition at which measurement has been made/computed or recorded during the measurement.",
        title="Conditions",
    )
    NetConfiningStress: Optional[float] = Field(
        None,
        description="The pressure exerted on a sample from its environment, minus the pore pressure within the sample.",
        title="Net Confining Stress",
    )
    Permeability: Optional[List[PermeabilityItem]] = Field(
        None,
        description="The sample's permeability measured/computed at the reported confining pressure.",
        title="Permeability",
    )
    PermeabilityMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of permeability being measured/computed at the reported confining pressure.",
        title="Permeability Measurement Method ID",
    )
    Porosity: Optional[List[PorosityItem]] = Field(
        None,
        description="The sample's porosity measured/computed at the reported confining pressure.",
        title="Porosity",
    )
    GrainDensity: Optional[List[GrainDensityItem]] = Field(
        None,
        description="Grain density refers to the density of individual grains or particles of a substance.",
        title="Grain Density",
    )
    GrainVolume: Optional[GrainVolume] = Field(
        None,
        description="The volume occupied by the solid mineral grains in a rock, excluding the pore spaces.",
        title="Grain Volume",
    )
    PoreVolume: Optional[PoreVolume] = Field(
        None,
        description="The volume of the sample occupied by pore space.",
        title="Pore Volume",
    )
    Saturation: Optional[List[SaturationItem]] = Field(
        None,
        description="The extent to which pore space within the sample is filled with fluids.",
        title="Saturation",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )
    SaltWeight: Optional[float] = Field(
        None,
        description="The weight of salt in the brine extracted during the analysis, used in measurement correction.",
        title="Salt Weight",
    )
    BrineVolume: Optional[float] = Field(
        None,
        description="The volume of brine extracted during the analysis.",
        title="Brine Volume",
    )
