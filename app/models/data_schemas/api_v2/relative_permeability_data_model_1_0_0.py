#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  RelativePermeabilityDataSchema.1.0.0.json
#   timestamp: 2025-01-30T20:47:07+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class EffectivePermeability(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    PermeabilityMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of permeability being measured, e.g. Gas, PulseDecay, Klinkenberg.",
        title="Permeability Measurement Method ID",
    )
    Value: Optional[float] = Field(
        None, description="The effective permeability value.", title="Value"
    )
    FluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The fluid type used in determining effective permeability.",
        title="Fluid Type ID",
    )


class RelativePermeability(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(
        None, description="The relative permeability value.", title="Value"
    )
    FluidSystemAnalysisTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidSystemAnalysisType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The fluid system used in determining relative permeability.",
        title="Fluid System Analysis Type ID",
    )


class Saturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(
        None, description="The saturation value.", title="Value"
    )
    FluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The fluid type used for this saturation.",
        title="Fluid Type ID",
    )
    SaturationTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies the area of focus for this saturation measurement, e.g. 'End Face' or 'Average'",
        title="Saturation Type ID",
    )


class InitialConditions(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    EffectivePermeability: Optional[EffectivePermeability] = Field(
        None,
        description="A measure of how easily fluids can flow through a porous sample, taking into consideration the saturation, presence of other fluids, and the interactions between those fluids into account.",
        title="Effective Permeability",
    )
    RelativePermeability: Optional[RelativePermeability] = Field(
        None,
        description="Relative permeability is a measure of how easily a particular fluid can flow through a porous medium when other fluids are also present.",
        title="Relative Permeability",
    )
    Saturation: Optional[Saturation] = Field(
        None,
        description="At the start of the experiment, the extent to which pore space within the sample is filled with fluids.",
        title="Saturation",
    )
    LastFlowRate: Optional[float] = Field(
        None,
        description="The last recorded flow rate prior to the experiment.",
        title="Last Flow Rate",
    )
    TestTemperature: Optional[float] = Field(
        None,
        description="The recorded temperature within the test environment.",
        title="Test Temperature",
    )
    NetConfiningStress: Optional[float] = Field(
        None,
        description="The pressure exerted on a sample from its environment, minus the pore pressure within the sample.",
        title="Net Confining Stress",
    )
    OverburdenPressure: Optional[float] = Field(
        None,
        description="The pressure exerted by the weight of the overlying rock and soil layers on the rock sample being tested.",
        title="Overburden Pressure",
    )
    PorePressure: Optional[float] = Field(
        None,
        description="The pressure exerted by fluids (such as water or oil) within the pores and fractures of a rock sample.",
        title="Pore Pressure",
    )
    FlowDirection: Optional[str] = Field(
        None,
        description='Direction of flow for the experiment, e.g. "Vertical from bottom".',
        title="Flow Direction",
    )


class TerminalConditions(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    EffectivePermeability: Optional[EffectivePermeability] = Field(
        None,
        description="A measure of how easily fluids can flow through a porous sample, taking into consideration the saturation, presence of other fluids, and the interactions between those fluids into account.",
        title="Effective Permeability",
    )
    RelativePermeability: Optional[RelativePermeability] = Field(
        None,
        description="Relative permeability is a measure of how easily a particular fluid can flow through a porous medium when other fluids are also present.",
        title="Relative Permeability",
    )
    Saturation: Optional[Saturation] = Field(
        None,
        description="At the end of the experiment, the extent to which pore space within the sample is filled with fluids.",
        title="Saturation",
    )


class ReferencePermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(
        None,
        description="The permeability value acting as a reference for this experiment.",
        title="Value",
    )
    PermeabilityMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of permeability being measured, e.g. Gas, PulseDecay, Klinkenberg.",
        title="Permeability Measurement Method ID",
    )


class InjectionRateItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(
        None, description="The flow rate value.", title="Value"
    )
    FluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None, description="Fluid Type injected into the sample.", title="Fluid Type ID"
    )


class CumulativeProduction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(
        None, description="The cumulative production value at this step.", title="Value"
    )
    FluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid Type displaced from the sample due to injection",
        title="Fluid Type ID",
    )


class EffectivePermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    PermeabilityMeasurementMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of permeability being measured, e.g. Gas, PulseDecay, Klinkenberg.",
        title="Permeability Measurement Method ID",
    )
    Value: Optional[float] = Field(
        None, description="The effective permeability value.", title="Value"
    )
    FluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The fluid type used in determining effective permeability.",
        title="Fluid Type ID",
    )


class RelativePermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(
        None, description="The relative permeability value.", title="Value"
    )
    FluidSystemAnalysisTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidSystemAnalysisType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The fluid system used in determining relative permeability.",
        title="Fluid System Analysis Type ID",
    )


class InSituSaturationProfile(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Time: Optional[float] = Field(
        None,
        description="The time at which the in-situ saturation was measured.",
        title="Time",
    )
    Position: Optional[float] = Field(
        None, description="The position along the sample.", title="Position"
    )
    InitialSaturation: Optional[float] = Field(
        None, description="The initial saturation value.", title="Initial Saturation"
    )
    EquilibriumSaturation: Optional[float] = Field(
        None,
        description="The saturation value as measured at this timestamp.",
        title="Equilibrium Saturation",
    )


class DifferentialPressureProfile(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Time: Optional[float] = Field(
        None, description="The time at which the pressure was measured.", title="Time"
    )
    DifferentialPressure: Optional[float] = Field(
        None,
        description="The differential pressure value.",
        title="Differential Pressure",
    )


class ProductionProfile(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Time: Optional[float] = Field(
        None, description="The time at which the pressure was measured.", title="Time"
    )
    ProductionRate: Optional[float] = Field(
        None, description="The rate of fluid production", title="Production Rate"
    )
    FluidTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The type of fluid.", title="Fluid Type ID")


class Remark(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class PermeabilityTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StartTime: Optional[float] = Field(
        None,
        description="The start time of this test step, typically in minutes.",
        title="Start Time",
    )
    DifferentialPressure: Optional[float] = Field(
        None,
        description="The pressure difference or pressure gradient through the sample at equilibrium, also known as Delta P.",
        title="Differential Pressure",
    )
    InjectionRate: Optional[List[InjectionRateItem]] = Field(
        None,
        description="The rate at which the fluid is injected into the sample.",
        title="Injection Rate",
    )
    CumulativeProduction: Optional[CumulativeProduction] = Field(
        None,
        description="The cumulative amount of fluid displaced from the sample",
        title="Cumulative Production",
    )
    EffectivePermeability: Optional[List[EffectivePermeabilityItem]] = Field(
        None,
        description="A measure of how easily fluids can flow through a porous sample, taking into consideration the saturation, presence of other fluids, and the interactions between those fluids into account.",
        title="Effective Permeability",
    )
    RelativePermeability: Optional[List[RelativePermeabilityItem]] = Field(
        None,
        description="Relative permeability is a measure of how easily a particular fluid can flow through a porous medium when other fluids are also present.",
        title="Relative Permeability",
    )
    Saturation: Optional[Saturation] = Field(
        None,
        description="The extent to which pore space within the sample is filled with fluids.",
        title="Saturation",
    )
    InSituSaturationProfiles: Optional[List[InSituSaturationProfile]] = Field(
        None,
        description="Captures water saturation values along the length of the core sample at time intervals.",
        title="In Situ Saturation Profiles",
    )
    DifferentialPressureProfiles: Optional[List[DifferentialPressureProfile]] = Field(
        None,
        description="Captures the differential pressure measured over time during the experiment.",
        title="Differential Pressure Profiles",
    )
    ProductionProfiles: Optional[List[ProductionProfile]] = Field(
        None,
        description="Stores data on fluid production over time.",
        title="Production Profiles",
    )
    FractionalFlowRate: Optional[float] = Field(
        None,
        description="The fractional value of the injected fluid flow rate.",
        title="Fractional Flow Rate",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )


class RelativePermeabilityModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ..., description="OSDU Identifier for this SamplesAnalysis.", title="Sample ID"
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    DesaturationMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DesaturationMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="OSDU Identifier for this SamplesAnalysis.",
        title="Desaturation Method ID",
    )
    InitialConditions: Optional[InitialConditions] = Field(
        None,
        description="The initial conditions of permeability, saturation, and flow rate within the sample.",
        title="Initial Conditions",
    )
    TerminalConditions: Optional[TerminalConditions] = Field(
        None,
        description="The permeability and saturation conditions of the sample at the end of the experiment.",
        title="Terminal Conditions",
    )
    RelativePermeabilityCrossover: Optional[float] = Field(
        None,
        description="The relative permeability value of a crossover point in a relative permeability x saturation analysis graph.",
        title="Relative Permeability Crossover",
    )
    EndFaceSaturationCrossover: Optional[float] = Field(
        None,
        description="The saturation value of a crossover point in a relative permeability x saturation analysis graph.",
        title="End Face Saturation Crossover",
    )
    ReferencePermeability: Optional[List[ReferencePermeabilityItem]] = Field(
        None,
        description="e.g. gas permeability kg, gas permeability at minimum liquid saturation kg@Slmin, oil permeability ko, water permeability kw, etc",
        title="Reference Permeability",
    )
    SaturationProcessMethodID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationProcessMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The method used to saturate the rock sample with a particular fluid in the experiment.",
        title="Saturation Process Method ID",
    )
    InterfacialTension: Optional[float] = Field(
        None,
        description="The measured tension at the interface between the wetting and non-wetting phases during a test step.",
        title="Interfacial Tension",
    )
    BrineSalinity: Optional[float] = Field(
        None,
        description="The salinity level of the brine used in the test, affecting the rock's electrical resistivity properties.",
        title="Brine Salinity",
    )
    OilViscosity: Optional[float] = Field(
        None,
        description="A measure of a fluid’s internal resistance to flow.",
        title="Oil Viscosity",
    )
    GasViscosity: Optional[float] = Field(
        None,
        description="A measure of a fluid’s internal resistance to flow.",
        title="Gas Viscosity",
    )
    WaterViscosity: Optional[float] = Field(
        None,
        description="A measure of a fluid’s internal resistance to flow.",
        title="Water Viscosity",
    )
    OilDensity: Optional[float] = Field(
        None,
        description="The mass per volume of oil in the sample.",
        title="Oil Density",
    )
    GasDensity: Optional[float] = Field(
        None,
        description="The mass per volume of gas in the sample.",
        title="Gas Density",
    )
    WaterDensity: Optional[float] = Field(
        None,
        description="The mass per volume of water in the sample.",
        title="Water Density",
    )
    FluidSystemAnalysisTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidSystemAnalysisType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of fluid system in this analysis, e.g. gasbrine or gasoil.",
        title="Fluid System Analysis Type ID",
    )
    PermeabilityTestSteps: Optional[List[PermeabilityTestStep]] = Field(
        None, description="Permeability Test Steps", title="Permeability Test Steps"
    )
    OilTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies the type of oil used in the experiment.",
        title="Oil Type ID",
    )
    GasTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies the type of gas used in the experiment.",
        title="Gas Type ID",
    )
    WaterTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies the type of gas used in the experiment.",
        title="Water Type ID",
    )
    EndTime: Optional[float] = Field(
        None, description="Overall duration of the test.", title="End Time"
    )
