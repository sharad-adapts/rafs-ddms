#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  WettabilityIndexDataSchema.1.0.0.json
#   timestamp: 2025-01-30T20:47:09+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class WettabilityIndexItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = Field(None, title="Value")
    WettabilityIndexTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityIndexType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of wettability index reported, e.g. AmottHarvey or USBM.",
        title="Wettability Index Type ID",
    )


class Remark(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class WettabilityIndexData(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    CapillaryPressureAnalysisID: Optional[
        constr(
            regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="OSDU ID for the Capillary Pressure Analysis referenced in this Wettability Analysis.",
        title="Capillary Pressure Analysis ID",
    )
    ForcedImbibedBrineVolume: Optional[float] = Field(
        None,
        description="The volume of forced imbibed brine, displacing water, expressed as fraction of pore volume with no confining pressure applied.",
        title="Forced Imbibed Brine Volume",
    )
    ForcedImbibedOilVolume: Optional[float] = Field(
        None,
        description="The volume of forced imbibed oil, displacing water, expressed as fraction of pore volume with no applied confining pressure.",
        title="Forced Imbibed Oil Volume",
    )
    Temperature: Optional[float] = Field(
        None,
        description="The temperature at which the wettability index measurements are conducted.",
        title="Temperature",
    )
    InitialBrineSaturation: Optional[float] = Field(
        None,
        description="The initial amount of brine saturation in the sample before wettability tests are performed.",
        title="Initial Brine Saturation",
    )
    InitialOilSaturation: Optional[float] = Field(
        None,
        description="The initial amount of oil saturation in the sample before wettability tests are performed.",
        title="Initial Oil Saturation",
    )
    SpontaneousImbibedBrineVolume: Optional[float] = Field(
        None,
        description="The volume of spontaneous imbibed brine, displacing oil, expressed as fraction of pore volume with no confining pressure applied.",
        title="Spontaneous Imbibed Brine Volume",
    )
    DisplacedOilVolume: Optional[float] = Field(
        None,
        description="The volume of oil displaced by brine.",
        title="Displaced Oil Volume",
    )
    BrineImbibitionBrineSaturation: Optional[float] = Field(
        None,
        description="volume of brine saturation during brine imbibition, fraction percent of the pore volume",
        title="Brine Imbibition Brine Saturation",
    )
    BrineDisplacementOilSaturation: Optional[float] = Field(
        None,
        description="volume of oil saturation during brine displacement, expressed in fraction of pore volume",
        title="Brine Displacement Oil Saturation",
    )
    SpontaneousImbibedOilVolume: Optional[float] = Field(
        None,
        description="volume of spontaneously imbibed oil, displacing brine, expressed as fraction of pore volume. no confining pressure applied",
        title="Spontaneous Imbibed Oil Volume",
    )
    OilImbibitionBrineSaturation: Optional[float] = Field(
        None,
        description="volume of brine saturation during oil imbibition, expressed as fraction of pore volume",
        title="Oil Imbibition Brine Saturation",
    )
    DisplacedBrineVolume: Optional[float] = Field(
        None,
        description="volume of brine displaced by oil, fraction percent of the pore volume",
        title="Displaced Brine Volume",
    )
    DisplacementRatio: Optional[float] = Field(
        None,
        description="The ratio of the volume of fluid displaced by the wetting phase to the volume of fluid displaced by the non-wetting phase.",
        title="Displacement Ratio",
    )
    OilImbibitionOilSaturation: Optional[float] = Field(
        None,
        description="volume of oil saturation during oil imbibition, expressed as fraction of pore volume",
        title="Oil Imbibition Oil Saturation",
    )
    WettabilityIndex: Optional[List[WettabilityIndexItem]] = Field(
        None,
        description="The wettability index is typically determined using laboratory experiments, such as capillary pressure measurements, or through specialized tests like the Amott-Harvey or USBM (United States Bureau of Mines) methods.",
        title="Wettability Index",
    )
    ConfiningPressure: Optional[float] = Field(
        None,
        description="The pressure applied to the sample during wettability index measurements to simulate reservoir conditions.",
        title="Confining Pressure",
    )
    DesaturationMethod: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DesaturationMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The technique used to remove oil or water from the sample to prepare it for wettability testing.",
        title="Desaturation Method",
    )
    InjectionFluidID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid introduced to a sample during wettability index testing, e.g. Mercury.",
        title="Injection Fluid ID",
    )
    DisplacedFluidID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid produced or displaced from a sample during wettability index testing, e.g. Brine, Hexane, or LiveCrudeOil.",
        title="Displaced Fluid ID",
    )
    FluidSystem: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidSystemAnalysisType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The type of fluids used in the wettability tests, such as water and oil, to determine the wettability index.",
        title="Fluid System",
    )
    InitialWaterSaturation: Optional[float] = Field(
        None,
        description="The initial water saturation expressed as a fraction of the pore volume.",
        title="Initial Water Saturation",
    )
    InitialCapillaryPressure: Optional[float] = Field(
        None,
        description="The capillary pressure of the sample before any fluid displacement or imbibition occurs.",
        title="Initial Capillary Pressure",
    )
    ForcedWaterImbibition: Optional[float] = Field(
        None,
        description="The process of measuring wettability by forcing water into the sample under controlled conditions.",
        title="Forced Water Imbibition",
    )
    ForcedOilImbibition: Optional[float] = Field(
        None,
        description="The process of measuring wettability by forcing oil into the sample under controlled conditions.",
        title="Forced Oil Imbibition",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )


class WettabilityIndexModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    WettabilityIndexData: Optional[WettabilityIndexData] = Field(
        None,
        description="Object capturing wettability index data, conditions, saturations, volumes, etc.",
        title="Wettability Index Data",
    )
