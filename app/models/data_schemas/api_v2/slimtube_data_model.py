#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  slimtube_data_schema.json
#   timestamp: 2023-11-16T21:08:11+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class TestTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ColumnLength(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ColumnDiameter(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ColumnPorosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ColumnTotalPoreVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ColumnPermeability(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PackedColumnProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ColumnLength: Optional[ColumnLength] = None
    ColumnDiameter: Optional[ColumnDiameter] = None
    PackingMaterial: Optional[str] = Field(None, title="PackingMaterial")
    ColumnPorosity: Optional[ColumnPorosity] = None
    ColumnTotalPoreVolume: Optional[ColumnTotalPoreVolume] = None
    ColumnPermeability: Optional[ColumnPermeability] = None


class DisplacementPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PoreVolumeInjected(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeOilRecovery(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MaterialBalance(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AsphaltanceContentOfResidualOil(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CoreFloodingItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    DisplacementPressure: Optional[DisplacementPressure] = None
    PoreVolumeInjected: Optional[PoreVolumeInjected] = None
    CumulativeOilRecovery: Optional[CumulativeOilRecovery] = None
    MaterialBalance: Optional[MaterialBalance] = None
    AsphaltanceContentOfResidualOil: Optional[AsphaltanceContentOfResidualOil] = None


class MinimumMiscibilityPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PoresInjected(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeOilRecoveryVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeOilRecoveryWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasOilRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasGravity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PackedColumnDisplacementItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    IncrementNumber: Optional[str] = Field(None, title="IncrementNumber")
    PoresInjected: Optional[PoresInjected] = None
    CumulativeOilRecoveryVolume: Optional[CumulativeOilRecoveryVolume] = None
    CumulativeOilRecoveryWeight: Optional[CumulativeOilRecoveryWeight] = None
    GasOilRatio: Optional[GasOilRatio] = None
    GasGravity: Optional[GasGravity] = None
    OilDensity: Optional[OilDensity] = None


class MaterialInjectedWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MaterialRecoveredWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MaterialRecoveredCumulativeWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class MaterialBalanceDatum(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    MaterialInjected: Optional[str] = Field(None, title="MaterialInjected")
    MaterialInjectedWeight: Optional[MaterialInjectedWeight] = None
    MaterialRecovered: Optional[str] = Field(None, title="MaterialRecovered")
    MaterialRecoveredWeight: Optional[MaterialRecoveredWeight] = None
    MaterialRecoveredCumulativeWeight: Optional[
        MaterialRecoveredCumulativeWeight
    ] = None


class VaporRelativeMole(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class VaporCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentFormula: Optional[str] = Field(None, title="ComponentFormula")
    VaporRelativeMole: Optional[VaporRelativeMole] = None


class VaporCompositionalAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    IncrementNumberSampled: Optional[str] = Field(None, title="IncrementNumberSampled")
    PoreVolumeInjected: Optional[PoreVolumeInjected] = None
    VaporComposition: Optional[List[VaporCompositionItem]] = None


class LiquidRelativeMolarWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidRelativeMass(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class LiquidCompositionalAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentFormula: Optional[str] = Field(None, title="ComponentFormula")
    LiquidRelativeMolarWeight: Optional[LiquidRelativeMolarWeight] = None
    FlashedLiquidRelativeMass: Optional[FlashedLiquidRelativeMass] = None


class AvgMoleWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ResidueDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ResidueAPI(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ResidueRelativeMolarWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ResidueMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ResidueCalculatedProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentFormula: Optional[str] = Field(None, title="ComponentFormula")
    ResidueRelativeMolarWeight: Optional[ResidueRelativeMolarWeight] = None
    ResidueMolecularWeight: Optional[ResidueMolecularWeight] = None
    ResidueDensity: Optional[ResidueDensity] = None


class CalculatedProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    AvgMoleWeight: Optional[AvgMoleWeight] = None
    ResidueDensity: Optional[ResidueDensity] = None
    ResidueAPI: Optional[ResidueAPI] = None
    ResidueCalculatedProperties: Optional[List[ResidueCalculatedProperty]] = None


class StepAveragePressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SlimTubeTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[str] = Field(None, title="StepNumber")
    StepAveragePressure: Optional[StepAveragePressure] = None
    Remark: Optional[str] = Field(None, title="Remark")


class DifferentialPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InjectionVolumeAtTestTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InjectionVolumeAtPumpTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InjectedPoreVolumeFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class DarcyVelocity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeOilProductionPercOOIP(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeOilProductionSTO(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class IncrementalProducedGOR(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeProducedGOR(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SlimTubeTestVolumeStepItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[str] = Field(None, title="StepNumber")
    DifferentialPressure: Optional[DifferentialPressure] = None
    RunTime: Optional[str] = Field(None, title="RunTime")
    InjectionVolumeAtTestTemperature: Optional[InjectionVolumeAtTestTemperature] = None
    InjectionVolumeAtPumpTemperature: Optional[InjectionVolumeAtPumpTemperature] = None
    InjectedPoreVolumeFraction: Optional[InjectedPoreVolumeFraction] = None
    DarcyVelocity: Optional[DarcyVelocity] = None
    CumulativeOilProductionPercOOIP: Optional[CumulativeOilProductionPercOOIP] = None
    CumulativeOilProductionSTO: Optional[CumulativeOilProductionSTO] = None
    IncrementalProducedGOR: Optional[IncrementalProducedGOR] = None
    CumulativeProducedGOR: Optional[CumulativeProducedGOR] = None
    Remark: Optional[str] = Field(None, title="Remark")


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    TestTemperature: Optional[TestTemperature] = None
    Remark: Optional[str] = Field(None, title="Remark")
    PackedColumnProperties: Optional[List[PackedColumnProperty]] = None
    CoreFlooding: Optional[List[CoreFloodingItem]] = None
    MinimumMiscibilityPressure: Optional[MinimumMiscibilityPressure] = None
    PackedColumnDisplacement: Optional[List[PackedColumnDisplacementItem]] = None
    MaterialBalanceData: Optional[List[MaterialBalanceDatum]] = None
    VaporCompositionalAnalysis: Optional[List[VaporCompositionalAnalysi]] = None
    LiquidCompositionalAnalysis: Optional[List[LiquidCompositionalAnalysi]] = None
    CalculatedProperties: Optional[List[CalculatedProperty]] = None
    SlimTubeTestSteps: Optional[List[SlimTubeTestStep]] = None
    SlimTubeTestVolumeStep: Optional[List[SlimTubeTestVolumeStepItem]] = None
