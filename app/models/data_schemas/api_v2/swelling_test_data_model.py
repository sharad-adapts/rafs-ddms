#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  swelling_test_data_schema.json
#   timestamp: 2024-09-11T19:19:58+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class TestTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class SaturationPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class DensityAtSaturationPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class GasPhaseType(Enum):
    Pb = "Pb"
    Pd = "Pd"
    field_2_Ph = "2-Ph"


class RelativeVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class Density(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class GasOilRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class CumulativeMethaneToOriginalFluidMolePCT(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class CumulativeMethaneOfTotalFluidMolePCT(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class SwellingTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[str] = Field(
        None,
        description="Internal step number which identifies the sequence of step in swelling measurements",
        title="Step Number",
    )
    SaturationPressure: Optional[SaturationPressure] = None
    GasPhaseType: Optional[GasPhaseType] = Field(None, description="Pb/Pd/2-Ph")
    RelativeVolume: Optional[RelativeVolume] = None
    Density: Optional[Density] = None
    GasOilRatio: Optional[GasOilRatio] = None
    CumulativeMethaneToOriginalFluidMolePCT: Optional[
        CumulativeMethaneToOriginalFluidMolePCT
    ] = None
    CumulativeMethaneOfTotalFluidMolePCT: Optional[
        CumulativeMethaneOfTotalFluidMolePCT
    ] = None


class MoleWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class TargetMolePct(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class AchieveMolePct(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+")
    ] = None


class InjectionGasProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentName: Optional[str] = Field(None, title="Component Name")
    ComponentFormula: Optional[str] = Field(None, title="Component Name")
    MoleWeight: Optional[MoleWeight] = None
    TargetMolePct: Optional[TargetMolePct] = None
    AchieveMolePct: Optional[AchieveMolePct] = None


class SwellingTestDataSchema(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    TestTemperature: Optional[TestTemperature] = None
    SaturationPressure: Optional[SaturationPressure] = None
    DensityAtSaturationPressure: Optional[DensityAtSaturationPressure] = None
    SwellingTestSteps: Optional[List[SwellingTestStep]] = None
    InjectionGasProperties: Optional[List[InjectionGasProperty]] = None
