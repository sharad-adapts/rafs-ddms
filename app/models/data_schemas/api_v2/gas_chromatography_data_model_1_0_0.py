#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  GasChromatographyDataSchema.1.0.0.json
#   timestamp: 2024-12-18T20:55:33+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional

from pydantic import Extra, Field, constr


class Peak(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    AreaValue: Optional[float] = Field(
        None,
        description="Captures the value of the area under the peak.",
        title="Area Value",
    )
    AreaConcentration: Optional[float] = Field(
        None,
        description="Concentration of a compound measured using area under the peak for both the compound of interest and the standard compound, along with the known concentration of the standard.",
        title="Area Concentration",
    )
    HeightValue: Optional[float] = Field(
        None,
        description="Captures the value of the peak's height.",
        title="Height Value",
    )
    HeightConcentration: Optional[float] = Field(
        None,
        description="Concentration of a compound measured using height under the peak for both the compound of interest and the standard compound, along with the known concentration of the standard.",
        title="Height Concentration",
    )
    PeakValueTypeUnknown: Optional[float] = Field(
        None,
        description="Captures the value of a peak reported without area or height specified.  If the height or area is specified, HeightValue or AreaValue should be used, respectively.",
        title="Peak Value Type Unknown",
    )


class GasChromatographyAnalysis(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Name of the component in this analysis.  In the case of internal standard compounds, the name of the actual compound should be used in lieu of, e.g. 'STD1', if it is known.",
        title="Component Name ID",
    )
    RetentionTime: Optional[float] = Field(
        None,
        description="The time it takes for a compound to pass through the GC column and be detected, providing a reference point for comparing other compounds.",
        title="Retention Time",
    )
    Peak: Optional[Peak] = Field(
        None,
        description="A graphical representation of the highest point (peak) of a detected signal for a compound in the chromatogram graph, a signal which represents to the compound's concentration as a function of time.",
        title="Peak",
    )
    IsInternalStandard: Optional[bool] = Field(
        None,
        description="Identifies whether the component is an internal standard.",
        title="Is Internal Standard",
    )


class InternalStandardCompoundItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Name of the component in this analysis.",
        title="Component Name ID",
    )
    Mass: Optional[float] = Field(
        None, description="The mass of the standard compound.", title="Mass"
    )
    Concentration: Optional[float] = Field(
        None,
        description="The concentration of the standard compound.",
        title="Concentration",
    )


class GasChromatographyModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    SampleMass: float = Field(
        ..., description="Reported mass of the analyzed sample.", title="Sample Mass"
    )
    Method: Optional[str] = Field(
        None,
        description="Free string object to account for any particular methods or lab-specific analysis details.",
        title="Method",
    )
    GasChromatographyAnalysis: Optional[List[GasChromatographyAnalysis]] = Field(
        None,
        description="Hydrocarbon abundance measured by gas chromatography, e.g. Aromatic,Gasoline,HighTemperature,Pyrolysis,Saturate,SimulatedDistillation,SulfurDetection,ThermalExtraction,WholeOil",
        title="Gas Chromatography Analysis",
    )
    InternalStandardCompound: Optional[List[InternalStandardCompoundItem]] = Field(
        None,
        description="One or more compounds added to a sample in a known quantity before the analysis begins; Also known as an internal standard. Used for accurate identification and quantification.",
        title="Internal Standard Compound",
    )
