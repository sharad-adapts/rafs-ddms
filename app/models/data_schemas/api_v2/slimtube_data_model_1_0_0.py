#  Copyright 2025 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  slimtube.1.0.0.json
#   timestamp: 2025-02-12T01:00:00+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class Remarks(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class PackedColumnProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ColumnLength: Optional[float] = Field(
        None,
        description="Length of the packed column enclosing the sample.",
        title="Column Length",
    )
    ColumnDiameter: Optional[float] = Field(
        None,
        description="Diameter of the packed column enclosing the sample.",
        title="Column Diameter",
    )
    PackingMaterial: Optional[str] = Field(
        None,
        description="Material used to fill the packed column, e.g. sand.",
        title="Packing Material",
    )
    ColumnPorosity: Optional[float] = Field(
        None,
        description="The amount of pore space relative to the volume of the packed column sample.",
        title="Column Porosity",
    )
    ColumnTotalPoreVolume: Optional[float] = Field(
        None,
        description="The total volume of pore space within the packed column.",
        title="Column Total Pore Volume",
    )
    ColumnPermeability: Optional[float] = Field(
        None,
        description="The permeability of packed column.",
        title="Column Permeability",
    )


class CoreFloodingItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    DisplacementPressure: Optional[float] = Field(
        None,
        description="The minimum pressure required to initiate and sustain the movement of fluids through a porous medium.",
        title="Displacement Pressure",
    )
    PoreVolumeInjected: Optional[float] = Field(
        None,
        description="The total volume of fluid injected into a reservoir relative to the volume of its pore spaces.",
        title="Pore Volume Injected",
    )
    CumulativeOilRecovery: Optional[float] = Field(
        None,
        description="The total amount of oil produced from a reservoir over a specified period.",
        title="Cumulative Oil Recovery",
    )
    MaterialBalance: Optional[float] = Field(
        None,
        description="A calculation assessing the consistency between the amounts of oil, gas, and water produced versus injected to evaluate reservoir performance.",
        title="Material Balance",
    )
    AsphaltanceContentOfResidualOil: Optional[float] = Field(
        None,
        description="The concentration of heavy, complex hydrocarbons known as asphaltenes remaining in the residual oil after extraction processes.",
        title="Asphaltance Content Of Residual Oil",
    )


class PackedColumnDisplacementItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    IncrementNumber: Optional[str] = Field(
        None,
        description="A sequential identifier representing the number of increments or stages in a process or measurement.",
        title="Increment Number",
    )
    PoresInjected: Optional[float] = Field(
        None,
        description="The number of pore volumes of a fluid injected into a reservoir during enhanced oil recovery processes.",
        title="Pores Injected",
    )
    CumulativeOilRecoveryVolume: Optional[float] = Field(
        None,
        description="The total volume of oil extracted from a reservoir over a specified period.",
        title="Cumulative Oil Recovery Volume",
    )
    CumulativeOilRecoveryWeight: Optional[float] = Field(
        None,
        description="The total weight of oil extracted from a reservoir over a specified period.",
        title="Cumulative Oil Recovery Weight",
    )
    GasOilRatio: Optional[float] = Field(
        None,
        description="The volume ratio of produced gas to produced oil from a reservoir.",
        title="Gas Oil Ratio",
    )
    GasGravity: Optional[float] = Field(
        None,
        description="The relative density of produced gas compared to air.",
        title="Gas Gravity",
    )
    OilDensity: Optional[float] = Field(
        None,
        description="The mass per unit volume of oil, typically measured in kilograms per cubic meter (kg/m³) or grams per cubic centimeter (g/cm³).",
        title="Oil Density",
    )


class MaterialBalanceDatum(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    MaterialInjected: Optional[str] = Field(
        None, description="The material injected", title="Material Injected"
    )
    MaterialInjectedWeight: Optional[float] = Field(
        None,
        description="The weight of the material injected",
        title="Material Injected Weight",
    )
    MaterialRecovered: Optional[str] = Field(
        None, description="The material recovered.", title="Material Recovered"
    )
    MaterialRecoveredWeight: Optional[float] = Field(
        None,
        description="The weight of the recovered material.",
        title="Material Recovered Weight",
    )
    MaterialRecoveredCumulativeWeight: Optional[float] = Field(
        None,
        description="The cumulative weight of the recovered material since the start of injection.",
        title="Material Recovered Cumulative Weight",
    )


class VaporCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The chemical formula of each component found in the vapor during analysis.",
        title="Component Name ID",
    )
    VaporRelativeMole: Optional[float] = Field(
        None,
        description="The molar weight of the component relative to the vapor.",
        title="Vapor Relative Mole",
    )


class VaporCompositionalAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    IncrementNumberSampled: Optional[float] = Field(
        None,
        description="A sequential identifier representing the number of specific sampling points or intervals taken during a measurement or observation process.",
        title="Increment Number Sampled",
    )
    PoreVolumeInjected: Optional[float] = Field(
        None,
        description="The cumulative volume of fluid injected into a reservoir expressed as a proportion of the total pore volume within the reservoir.",
        title="Pore Volume Injected",
    )
    VaporComposition: Optional[List[VaporCompositionItem]] = Field(
        None,
        description="Object capturing the component name and molar weight of this component of the vapor.",
        title="Vapor Composition",
    )


class LiquidCompositionalAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The chemical formula of each component found in the liquid during analysis.",
        title="Component Name ID",
    )
    LiquidRelativeMolarWeight: Optional[float] = Field(
        None,
        description="The molar weight of the component relative to the liquid.",
        title="Liquid Relative Molar Weight",
    )
    FlashedLiquidRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the flashed liquid.",
        title="Flashed Liquid Relative Mass",
    )


class ResidueCalculatedProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The chemical formula representing the composition of a specific component in terms of the elements and their proportions.",
        title="Component Name ID",
    )
    ResidueRelativeMolarWeight: Optional[float] = Field(
        None,
        description="he ratio of the molar mass of the residual oil component to the molar mass of a reference substance, typically dimensionless.",
        title="Residue Relative Molar Weight",
    )
    ResidueMolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the residual oil, representing the sum of the atomic weights of its constituent atoms.",
        title="Residue Molecular Weight",
    )
    ResidueDensity: Optional[float] = Field(
        None,
        description="The mass per unit volume of the residual oil.",
        title="Residue Density",
    )


class CalculatedProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    AvgMoleWeight: Optional[float] = Field(
        None,
        description="The weighted average mass of the molecules in a sample.",
        title="Average Mole Weight",
    )
    ResidueDensity: Optional[float] = Field(
        None,
        description="The mass per unit volume of the residual oil.",
        title="Residue Density",
    )
    ResidueAPI: Optional[float] = Field(
        None,
        description="The API gravity of the residual oil, which measures its density relative to water.",
        title="Residue API",
    )
    ResidueCalculatedProperties: Optional[List[ResidueCalculatedProperty]] = Field(
        None,
        description="The set of derived physical and chemical properties of the residual oil, calculated from experimental data or using theoretical models.",
        title="Residue Calculated Properties",
    )


class SlimTubeTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[float] = Field(None, title="Step Number")
    StepAveragePressure: Optional[float] = Field(
        None,
        description="Average pressure applied in this step of the SLim Tube Test",
        title="Step Average Pressure",
    )
    Remarks: Optional[Remarks] = Field(
        None,
        description="Additional notes or observations regarding the step, includes conditions, or results that may be relevant for interpretation.",
        title="Remarks",
    )


class SlimTubeTestVolumeStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[float] = Field(
        None,
        description="The number used to sequence and identify the changes in volume for this analysis.",
        title="Step Number",
    )
    DifferentialPressure: Optional[float] = Field(
        None,
        description="The differential pressure of this test step.",
        title="Differential Pressure",
    )
    RunTime: Optional[float] = Field(
        None,
        description="The overall run time of the test at this step.",
        title="Run Time",
    )
    InjectionVolumeAtTestTemperature: Optional[float] = Field(
        None,
        description="The volume of injected fluid at test temperature.",
        title="Injection Volume At Test Temperature",
    )
    InjectionVolumeAtPumpTemperature: Optional[float] = Field(
        None,
        description="The volume of injected fluid measured at pump temperature.",
        title="Injection Volume At Pump Temperature",
    )
    InjectedPoreVolumeFraction: Optional[float] = Field(
        None,
        description="The injected fluid measured as a fraction of pore volume",
        title="Injected Pore Volume Fraction",
    )
    DarcyVelocity: Optional[float] = Field(
        None,
        description="The flow velocity of a fluid through a porous medium, as described by Darcy's law.",
        title="Darcy Velocity",
    )
    CumulativeOilProductionPercOOIP: Optional[float] = Field(
        None,
        description="Cumulative oil production as a percentage of oil in place.",
        title="Cumulative Oil Production Percentage of Oil in Place",
    )
    CumulativeOilProductionSTO: Optional[float] = Field(
        None,
        description="Cumulative oil production, Stock Tank",
        title="Cumulative Oil Production STO",
    )
    IncrementalProducedGOR: Optional[float] = Field(
        None,
        description="Gas oil ratio of the production during this test step.",
        title="Incremental Produced GOR",
    )
    CumulativeProducedGOR: Optional[float] = Field(
        None,
        description="Gas Oil ratio of the cumulative production from the sample during slim tube testing.",
        title="Cumulative Produced GOR",
    )
    Remarks: Optional[Remarks] = Field(
        None,
        description="Recorded remarks for this step of the slim tube test.",
        title="Remarks",
    )


class SlimtubeModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    TestTemperature: Optional[float] = Field(
        None,
        description="The recorded temperature within the test environment.",
        title="Test Temperature",
    )
    Remarks: Optional[Remarks] = Field(
        None,
        description="Additional notes or observations regarding the test, conditions, or results that may be relevant for interpretation.",
        title="Remarks",
    )
    PackedColumnProperties: Optional[List[PackedColumnProperty]] = Field(
        None,
        description="Physical properties of the packed column with sample.",
        title="Packed Column Properties",
    )
    CoreFlooding: Optional[List[CoreFloodingItem]] = Field(
        None,
        description="Core flooding is a laboratory technique used to simulate and analyze fluid flow and behavior in a reservoir rock under controlled conditions.",
        title="Core Flooding",
    )
    MinimumMiscibilityPressure: Optional[float] = Field(
        None,
        description="The minimum pressure for miscibility to be achieved.",
        title="Minimum Miscibility Pressure",
    )
    PackedColumnDisplacement: Optional[List[PackedColumnDisplacementItem]] = Field(
        None,
        description="Array  of measurements recording the incremental and cumulative recovery of oil from the packed column.",
        title="Packed Column Displacement",
    )
    MaterialBalanceData: Optional[List[MaterialBalanceDatum]] = Field(
        None,
        description="Array that records the type and weight of the material injected into the sample as well as the material recovered.",
        title="Material Balance Data",
    )
    VaporCompositionalAnalysis: Optional[List[VaporCompositionalAnalysi]] = Field(
        None,
        description="Array recording the compositional analysis of the vapor retrieved from the sample.",
        title="Vapor Compositional Analysis",
    )
    LiquidCompositionalAnalysis: Optional[List[LiquidCompositionalAnalysi]] = Field(
        None,
        description="Array recording the compositional analysis of the liquid retrieved from the sample.",
        title="Liquid Compositional Analysis",
    )
    CalculatedProperties: Optional[List[CalculatedProperty]] = Field(
        None,
        description="Derived attributes and parameters obtained from slim tube tests, which are experimental methods used to evaluate the miscibility and interaction of injected fluids with reservoir hydrocarbons under simulated reservoir conditions.",
        title="Calculated Properties",
    )
    SlimTubeTestSteps: Optional[List[SlimTubeTestStep]] = Field(
        None,
        description="Array object capturing the slim tube test steps.",
        title="SlimTubeTest Steps",
    )
    SlimTubeTestVolumeSteps: Optional[List[SlimTubeTestVolumeStep]] = Field(
        None,
        description="The sequence of changes in volume for the analysis.",
        title="Slim Tube Test Volume Steps",
    )
