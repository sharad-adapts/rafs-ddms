# generated by datamodel-codegen:
#   filename:  mining_geotech_logging_data_schema.json
#   timestamp: 2024-05-17T06:44:36+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel

class GeolFrom(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class GeolTo(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class RecoveredLength(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class RQD(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class FractureCount(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MiningGeotechDatum(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    GeolFrom: GeolFrom
    GeolTo: GeolTo
    RecoveredLength: RecoveredLength
    RQD: RQD
    FractureCount: FractureCount
    Description: Optional[str] = Field(
        None, description='Description e.g., information.', title='Description'
    )
    LoggedBy: Optional[str] = Field(None, description='Logged by.', title='LoggedBy')
    LogDate: Optional[datetime] = Field(
        None, description='LogDate e.g., 2021-01-01T00:00:00Z.', title='LogDate'
    )


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r'^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$'
    )
    SampleID: constr(regex=r'^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$')
    MiningGeotechData: Optional[List[MiningGeotechDatum]] = None
