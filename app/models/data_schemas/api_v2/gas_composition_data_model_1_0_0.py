#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  GasCompositionDataSchema.1.0.0.json
#   timestamp: 2024-12-20T20:00:22+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional

from pydantic import Extra, Field, constr


class GasCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The specific hydrocarbon or non-hydrocarbon gas (e.g., methane, ethane, carbon dioxide) identified in the gas composition analysis.",
        title="Component ID",
    )
    VolumeFraction: Optional[float] = Field(
        None,
        description="The concentration of the gas component in the overall hydrocarbon gas composition as a fraction of volume.",
        title="Volume Fraction",
    )
    MassFraction: Optional[float] = Field(
        None,
        description="The concentration of the gas component in the overall hydrocarbon gas composition as a fraction of mass.",
        title="Mass Fraction",
    )
    MoleFraction: Optional[float] = Field(
        None,
        description="The concentration of the gas component in the overall hydrocarbon gas composition as a mole fraction.",
        title="Mole Fraction",
    )
    UnknownFraction: Optional[float] = Field(
        None,
        description="The concentration of the gas component in the overall hydrocarbon gas composition, where the type of fraction is not known, e.g. legacy data.",
        title="Unknown Fraction",
    )
    SpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component.",
        title="Specific Gravity",
    )


class GasCompositionModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Method: Optional[str] = Field(
        None,
        description="The sample analysis method used for this analysis.",
        title="Method",
    )
    GasComposition: Optional[List[GasCompositionItem]] = Field(
        None,
        description="The relative abundance of gases measured using gas chromatography.  If NormalisingFactor is populated and/or IsNormalised set, then the GasComposition has been normalised to that set of components.",
        title="Gas Composition",
    )
    NormalisingFactor: Optional[str] = Field(
        None,
        description="A description of the set of normalising components used when the gas composition is normalised, e.g. C1-C5.  If this is populated, IsNormalised should also be set.",
        title="Normalising Factor",
    )
    IsNormalised: Optional[bool] = Field(
        None,
        description="Specifies whether the Gas Composition array object values have been normalized to a set of components provided in Normalising Factor.",
        title="IsNormalised",
    )
