#  Copyright 2025 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  vapor_liquid_equilibrium.1.0.0.json
#   timestamp: 2025-02-12T17:28:52+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class Remark(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class VaporCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The specific name of each component in the vapor phase, such as methane or ethane.",
        title="Component Name ID",
    )
    MoleFraction: Optional[float] = Field(
        None,
        description="The mole fraction of each component in the vapor phase, indicating its relative abundance by mole.",
        title="Mole Fraction",
    )
    MassFraction: Optional[float] = Field(
        None,
        description="The mass fraction of each component in the vapor phase, indicating its relative abundance by mass.",
        title="Mass Fraction",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )


class LiquidCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The specific name of each component in the liquid phase, such as water or hydrocarbons.",
        title="Component Name ID",
    )
    MoleFraction: Optional[float] = Field(
        None,
        description="The mole fraction of each component in the liquid phase, indicating its relative abundance by mole.",
        title="Mole Fraction",
    )
    MassFraction: Optional[float] = Field(
        None,
        description="The mass fraction of each component in the liquid phase, indicating its relative abundance by mass.",
        title="Mass Fraction",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )


class VaporLiquidEquilibriumModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis D",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    TestNumber: Optional[str] = Field(
        None,
        description="A unique identifier assigned to the specific VLE test for tracking and reference purposes.",
        title="Test Number",
    )
    TestTemperature: Optional[float] = Field(
        None,
        description="The recorded temperature within the test environment.",
        title="Test Temperature",
    )
    TestPressure: Optional[float] = Field(
        None,
        description="The pressure at which the VLE test is conducted, influencing the equilibrium between vapor and liquid phases.",
        title="Test Pressure",
    )
    GasSolventAdded: Optional[float] = Field(
        None,
        description="The type and amount of gas solvent introduced into the mixture to assess its effect on phase behavior.",
        title="Gas Solvent Added",
    )
    MixtureVolume: Optional[float] = Field(
        None,
        description="The total volume of the gas-liquid mixture used in the VLE test, critical for understanding the proportions of phases.",
        title="Mixture Volume",
    )
    MixtureGasSolventMoleFraction: Optional[float] = Field(
        None,
        description="The mole fraction of the gas solvent in the mixture, which indicates its proportion relative to other components.",
        title="Mixture Gas Solvent Mole Fraction",
    )
    MixtureGOR: Optional[float] = Field(
        None,
        description="The Gas-Oil Ratio (GOR) of the mixture, representing the amount of gas relative to liquid by volume at standard conditions.",
        title="Mixture Gas Oil Ratio",
    )
    MixturePsatTestTemperature: Optional[float] = Field(
        None,
        description="The temperature at which the mixture’s saturation pressure is determined during the test.",
        title="Mixture Psat Test Temperature",
    )
    MixtureRelativeVolumeRelativeToPsat: Optional[float] = Field(
        None,
        description="The measured relative volume ratio = measured volume/volume at Psat.",
        title="Mixture Relative Volume Relative To Psat",
    )
    AtmosphericFlashTestReference: Optional[str] = Field(
        None,
        description="A reference to the atmospheric flash test, used to describe the behavior of the mixture when brought to atmospheric pressure.",
        title="Atmospheric Flash Test Reference",
    )
    InjectedGasAdded: Optional[float] = Field(
        None,
        description="The quantity of gas injected into the system during the test, which affects phase compositions and behavior.",
        title="Injected Gas Added",
    )
    CumulativeGasAdded: Optional[float] = Field(
        None,
        description="The total amount of gas added over the course of the test, providing insight into gas saturation levels.",
        title="Cumulative Gas Added",
    )
    VaporPhaseVolume: Optional[float] = Field(
        None,
        description="The volume of the vapor phase at equilibrium, important for calculating phase proportions and gas properties.",
        title="Vapor Phase Volume",
    )
    VaporPhaseViscosity: Optional[float] = Field(
        None,
        description="The viscosity of the vapor phase, describing its resistance to flow, which affects transport and mobility in the system.",
        title="Vapor Phase Viscosity",
    )
    VaporPhaseDensity: Optional[float] = Field(
        None,
        description="The density of the vapor phase, a critical property for calculating mass and transport characteristics.",
        title="VaporPhase Density",
    )
    LiquidPhaseVolume: Optional[float] = Field(
        None,
        description="The volume of the liquid phase at equilibrium, used to determine the relative amounts of vapor and liquid phases.",
        title="Liquid Phase Volume",
    )
    LiquidPhaseDensity: Optional[float] = Field(
        None,
        description="The density of the liquid phase, important for understanding mass, flow properties, and phase behavior.",
        title="Liquid Phase Density",
    )
    VaporComposition: Optional[List[VaporCompositionItem]] = Field(
        None,
        description="The overall composition of the vapor phase, detailing the proportion of each component present.",
        title="Vapor Composition",
    )
    VaporTransportTestReference: Optional[str] = Field(
        None,
        description="A reference to a test assessing the transport properties of the vapor phase, such as flow rates or permeability.",
        title="Vapor Transport Test Reference",
    )
    LiquidTransportTestReference: Optional[str] = Field(
        None,
        description="A reference to a test assessing the transport properties of the liquid phase, like viscosity or diffusion rates.",
        title="Liquid Transport Test Reference",
    )
    LiquidComposition: Optional[List[LiquidCompositionItem]] = Field(
        None,
        description="The overall composition of the liquid phase, detailing the proportion of each component present.",
        title="Liquid Composition",
    )
