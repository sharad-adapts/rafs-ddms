#  Copyright 2025 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  tec.1.0.0.json
#   timestamp: 2025-02-12T15:18:59+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class PressureItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    PressureMeasurementTypeID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PressureMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The specific type of pressure being measured.",
        title="Pressure Measurement Type ID",
    )
    Value: Optional[float] = Field(None, title="Value")


class TestDatum(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    TimeStamp: Optional[str] = Field(
        None, description="Timestamp of the test step.", title="Time Stamp"
    )
    TestTime: Optional[float] = Field(
        None,
        description="The amount of time elapsed since the start of the experiment at this test step.",
        title="Test Time",
    )
    Temperature: Optional[float] = Field(
        None,
        description="The recorded temperature within the test environment.",
        title="Temperature",
    )
    AxialStrain: Optional[float] = Field(
        None,
        description="Axial strain is a measure of how much a material deforms along its length when subjected to an axial load or force.",
        title="Axial Strain",
    )


class CoefficientDatum(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RunNumber: Optional[float] = Field(
        None,
        description="The run number identifies the specific iteration of the overall test.",
        title="Run Number",
    )
    TECMeasured: Optional[float] = Field(
        None,
        description="The measured thermal expansion coefficient.",
        title="TEC Measured",
    )
    TECCorrectionFactor: Optional[float] = Field(
        None,
        description="A factor value applied to correct the measured thermal expansion coefficient.",
        title="TEC Correction Factor",
    )
    TECCorrected: Optional[float] = Field(
        None,
        description="The corrected thermal expansion coefficient.",
        title="TEC Corrected",
    )
    TemperatureMean: Optional[float] = Field(
        None, description="Average temperature for this run.", title="Temperature Mean"
    )
    TemperatureMinimum: Optional[float] = Field(
        None,
        description="Minimum temperature recorded during this run.",
        title="Temperature Minimum",
    )
    TemperatureMaximum: Optional[float] = Field(
        None,
        description="Maximum temperature recorded during this run.",
        title="Temperature Maximum",
    )
    SpacerID: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-Elements:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None,
        description="The element name of the spacer used to maintain precise distance between the sample and the experiment chamber walls.",
        title="Spacer ID",
    )


class TecModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    TestFluid: Optional[str] = Field(
        None, description="The fluid used for this TEC analysis.", title="Test Fluid"
    )
    BulkDensity: Optional[float] = Field(
        None,
        description="Bulk density is a measure of the mass of a material per unit volume, including both the solid particles and the void spaces (air gaps or pores) within the material.",
        title="Bulk Density",
    )
    Pressure: Optional[List[PressureItem]] = Field(
        None,
        description="The force applied per unit area on the surface of the sample by its environment.",
        title="Pressure",
    )
    TestData: Optional[List[TestDatum]] = Field(
        None,
        description="Array capturing test data such as axial strain.",
        title="Test Data",
    )
    CoefficientData: Optional[List[CoefficientDatum]] = Field(
        None,
        description="Array capturing measured and corrected TEC values as well as temperatures and spacer used for each run.",
        title="Coefficient Data",
    )
