#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  electrical_properties_data_schema.json
#   timestamp: 2024-09-11T19:19:40+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class BrineConcentration(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BrineSaturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BrineSalinity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class QuantityOfOilInTheVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BrineResistivity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WaterSaturationOverResistivityIndexItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None


class Temperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NetConfiningStress(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Frequency(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ElectricalPropertiesDataSchema(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    BrineConcentration: Optional[BrineConcentration] = None
    FormationResistivityFactor: Optional[float] = None
    AdjustedFormationResistivityFactor: Optional[float] = None
    CementationExponent: Optional[float] = None
    AdjustedCementationExponent: Optional[float] = None
    SaturationExponent: Optional[float] = None
    AdjustedSaturationExponent: Optional[float] = None
    BrineSaturation: Optional[BrineSaturation] = None
    FormationFactorAtNetOverburdenPressure: Optional[float] = None
    AdjustedFormationFactorAtNetOverburnedPressure: Optional[float] = None
    BrineSalinity: Optional[BrineSalinity] = None
    NumberOfElectrodes: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-NumberOfElectrodes:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    QuantityOfOilInTheVolume: Optional[QuantityOfOilInTheVolume] = None
    FluidSystem: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidSystemAnalysisType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    DisplacingFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-InjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid introduced to a sample during electrical properties testing, e.g. Mercury",
    )
    DisplacedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Fluid produced or displaced from a sample during electrical properties testing, e.g. Brine, Hexane, or LiveCrudeOil",
    )
    SaturationProcessMethod: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SaturationProcessMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    DesaturationMethod: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DesaturationMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    BrineResistivity: Optional[BrineResistivity] = None
    WaterSaturationOverResistivityIndex: Optional[
        List[WaterSaturationOverResistivityIndexItem]
    ] = None
    Temperature: Optional[Temperature] = None
    NetConfiningStress: Optional[NetConfiningStress] = None
    Frequency: Optional[Frequency] = None
