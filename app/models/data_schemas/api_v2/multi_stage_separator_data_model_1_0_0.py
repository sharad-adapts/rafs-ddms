#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  multi_stage_separator.1.0.0.json
#   timestamp: 2025-02-10T22:00:14+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from datetime import date
from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class Remarks(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class VaporCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Name of the component in the liquid.",
        title="Component Name ID",
    )
    RelativeMoleWeight: Optional[float] = Field(
        None,
        description="Molar mass relative to other components.",
        title="Relative Mole Weight",
    )
    MolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the component.",
        title="Molecular Weight",
    )
    MolePercent: Optional[float] = Field(
        None,
        description="The molar percentage of the component, if available.",
        title="Mole Percent",
    )
    MassPercent: Optional[float] = Field(
        None,
        description="The mass percentage of the component, if available.",
        title="Mass Percent",
    )
    VolumePercent: Optional[float] = Field(
        None,
        description="The volume percentage of the component, if available.",
        title="Volume Percent",
    )
    SpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component.",
        title="Specific Gravity",
    )


class LiquidCompositionItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleOrganicCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Name of the component in the liquid.",
        title="Component Name ID",
    )
    RelativeMoleWeight: Optional[float] = Field(
        None,
        description="Molar mass relative to other components.",
        title="Relative Mole Weight",
    )
    MolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the component.",
        title="Molecular Weight",
    )
    MolePercent: Optional[float] = Field(
        None,
        description="The molar percentage of the component, if available.",
        title="Mole Percent",
    )
    MassPercent: Optional[float] = Field(
        None,
        description="The mass percentage of the component, if available.",
        title="Mass Percent",
    )
    VolumePercent: Optional[float] = Field(
        None,
        description="The volume percentage of the component, if available.",
        title="Volume Percent",
    )
    SpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component.",
        title="Specific Gravity",
    )


class Remark(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    RemarkSequenceNumber: Optional[int] = Field(
        None,
        description="A unique identifier for each remark record. This identifier is used to uniquely identify a member in an array of remarks.",
        example=1,
        title="Remark Sequence Number",
    )
    Remark: Optional[str] = Field(
        None, description="A descriptive comment for this remark.", title="Remark"
    )
    RemarkSource: Optional[str] = Field(
        None,
        description="The person, vendor, interpreter or other provider of information.",
        title="Remark Source",
    )
    RemarkDate: Optional[date] = Field(
        None, description="The date the remark was issued.", title="Remark Date"
    )


class TestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[float] = Field(
        None,
        description="The step number in the multi-stage separator test, used to sequence and identify different phases of the test.",
        title="Step Number",
    )
    StepPressure: Optional[float] = Field(
        None,
        description="The pressure applied during this step, affecting the separation efficiency and results.",
        title="Step Pressure",
    )
    StepTemperature: Optional[float] = Field(
        None,
        description="The temperature during this step of the test, influencing fluid properties and separation outcomes.",
        title="Step Temperature",
    )
    OilDensity: Optional[float] = Field(
        None,
        description="The density of the oil measured at this step, crucial for calculating volume factors and fluid behavior.",
        title="Oil Density",
    )
    OilSpecificGravity: Optional[float] = Field(
        None,
        description="The density of flashed oil relative to the density of water at 60 degrees Fahrenheit",
        title="Oil Specific Gravity",
    )
    ResidualOilAPIGravity: Optional[float] = Field(
        None,
        description="The API gravity of the residual oil at the final test step conditions.",
        title="Residual Oil API Gravity",
    )
    OilMolecularWeight: Optional[float] = Field(
        None,
        description="The average molecular weight of the oil at this test step.",
        title="Oil Molecular Weight",
    )
    OilViscosity: Optional[float] = Field(
        None,
        description="A measure of a fluid’s internal resistance to flow.",
        title="Oil Viscosity",
    )
    OilFormationVolumeFactor: Optional[float] = Field(
        None,
        description="The formation volume factor of oil at this step, reflecting changes in oil volume under test conditions.",
        title="Oil Formation Volume Factor",
    )
    OilShrinkageFactor: Optional[float] = Field(
        None,
        description="This is inverse of stage oil formation volume factor, and commonly used instead of Oil Formation Volume Factor for intermediate stages",
        title="Oil Shrinkage Factor",
    )
    GasDensity: Optional[float] = Field(
        None,
        description="The density of the gas measured at a specific step, crucial for calculating volume factors and fluid behavior.",
        title="Gas Density",
    )
    GasGravity: Optional[float] = Field(
        None,
        description="The gravity of the gas measured at this step, indicating its density and composition.",
        title="Gas Gravity",
    )
    GasMolecularWeight: Optional[float] = Field(
        None,
        description="The average molecular weight of the gas at this test step.",
        title="Gas Molecular Weight",
    )
    GasViscosity: Optional[float] = Field(
        None,
        description="A measure of a fluid’s internal resistance to flow.",
        title="Gas Viscosity",
    )
    GasZFactor: Optional[float] = Field(
        None,
        description="The compressibility factor of the gas, used to adjust gas volume measurements based on deviations from ideal gas behavior.",
        title="Gas Z Factor",
    )
    GasFormationVolumeFactor: Optional[float] = Field(
        None,
        description="The formation volume factor of the gas measured at a specific step, used to calculate gas volume changes.",
        title="Gas Formation Volume Factor",
    )
    CumulativeGasOilRatioLiberatedStandardConditions: Optional[float] = Field(
        None,
        description="The cumulative liberated gas-to-oil ratio up to this step, referenced to standard conditions.",
        title="Cumulative Gas Oil Ratio Liberated Standard Conditions",
    )
    GasOilRatioStandardConditions: Optional[float] = Field(
        None,
        description="The volume of gas at standard conditions dissolved in the oil divided by the residual oil volume.",
        title="Gas Oil Ratio Standard Conditions",
    )
    GasOilRatioStepConditions: Optional[float] = Field(
        None,
        description="The volume of gas at step conditions dissolved in the oil divided by the oil volume at this stage.",
        title="Gas Oil Ratio Step Conditions",
    )
    GasOilRatioLiberatedStandardConditions: Optional[float] = Field(
        None,
        description="The volume of gas liberated at this step at standard conditions divided by the residual oil volume.",
        title="Gas Oil Ratio Liberated Standard Conditions",
    )
    FluidConditions: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleTestCondition:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies the testing condition of the sample fluid, e.g. InitialReservoir, CurrentReservoir, StockTank, InitialSaturation (References SampleTestCondition).",
        title="Fluid Conditions",
    )
    PhasesPresentID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-FluidPhasesPresent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies the phases of fluid present in the sample, e.g. SeparatorLiquid, FlashedOil, OilWithMud, Gas, ReservoirFluid (references FluidPhasesPresent)",
        title="Phases Present ID",
    )
    VaporComposition: Optional[List[VaporCompositionItem]] = Field(
        None,
        description="The detailed composition of the vapor phase, including the concentration of various components.",
        title="Vapor Composition",
    )
    LiquidComposition: Optional[List[LiquidCompositionItem]] = Field(
        None,
        description="Array object capturing the composition of the liquid component of the sample at this test step.",
        title="Liquid Composition",
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description="Array object capturing remarks or additional information for this test step.  Remarks for the analysis as a whole should be captured in the associated SamplesAnalysis work product component.",
        example="",
        title="Remarks",
    )


class MultiStageSeparatorModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    TestNumber: Optional[str] = Field(
        None,
        description="The unique identifier for the multi-stage separator test, used to track and reference specific test results.",
        title="Test Number",
    )
    ReservoirTemperature: Optional[float] = Field(
        None,
        description="The temperature of the reservoir during the test, which affects fluid properties and separation outcomes.",
        title="Reservoir Temperature",
    )
    SaturationPressure: Optional[float] = Field(
        None,
        description="The pressure at which the fluid becomes saturated with gas, critical for determining phase behavior, as measured at reservoir temperature.",
        title="Saturation Pressure",
    )
    ReservoirPressure: Optional[float] = Field(
        None,
        description="The pressure conditions of the reservoir where the sample was collected.",
        title="Reservoir Pressure",
    )
    SaturatedOilFormationVolumeFactor: Optional[float] = Field(
        None,
        description="The formation volume factor of the oil at saturation pressure, representing the volume change of oil under reservoir conditions.",
        title="Saturated Oil Formation Volume Factor",
    )
    SaturatedOilDensity: Optional[float] = Field(
        None,
        description="The density of the oil at saturation pressure, used to calculate various fluid properties and reservoir conditions.",
        title="Saturated Oil Density",
    )
    SeparatorTestGasOilRatio: Optional[float] = Field(
        None,
        description="The ratio of gas to oil measured during the separator test, important for understanding the production characteristics.",
        title="Separator Test Gas Oil Ratio",
    )
    OverallGasGravity: Optional[float] = Field(
        None,
        description="The average gravity of the gas, indicating its density relative to air and affecting the separation process.",
        title="Overall Gas Gravity",
    )
    Remarks: Optional[Remarks] = Field(
        None,
        description="Additional notes or observations related to the multi-stage separator test.",
        title="Remarks",
    )
    TestSteps: Optional[List[TestStep]] = Field(
        None,
        description="Collection of data from various steps in the multi-stage separator test, providing detailed insights into the separation process.",
        title="Test Steps",
    )
