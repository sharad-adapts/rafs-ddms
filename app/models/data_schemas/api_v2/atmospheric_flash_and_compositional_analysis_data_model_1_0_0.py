#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  AtmosphericFlashAndCompositionalAnalysisDataSchema.1.0.0.json
#   timestamp: 2025-01-30T20:47:03+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class CompositionalAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The name of the component.", title="Component Name ID")
    FlashedLiquidRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the component in the flashed liquid.",
        title="Flashed Liquid Relative Mass",
    )
    FlashedGasRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the component in the flashed gas.",
        title="Flashed Gas Relative Mass",
    )
    OverallFluidRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the component in the flashed liquid.",
        title="Overall Fluid Relative Mass",
    )
    FlashedLiquidRelativeMole: Optional[float] = Field(
        None,
        description="The relative molar weight of the component in the flashed liquid.",
        title="Flashed Liquid Relative Mole",
    )
    FlashedGasRelativeMole: Optional[float] = Field(
        None,
        description="The relative molar weight of the component in the flashed gas.",
        title="Flashed Gas Relative Mole",
    )
    OverallFluidRelativeMole: Optional[float] = Field(
        None,
        description="The relative mass of the component in the overall fluid.",
        title="Overall Fluid Relative Mole",
    )
    OverallFluidSpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component in the overall fluid.",
        title="Overall Fluid Specific Gravity",
    )
    OverallFluidMolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the component in the overall fluid.",
        title="Overall Fluid Molecular Weight",
    )


class SampleCalculatedProperties(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    AvgFlashedLiquidMolecularWeight: Optional[float] = Field(
        None,
        description="The average mole weight of the flashed liquid.",
        title="Avg Flashed Liquid Molecular Weight",
    )
    AvgFlashedGasMolecularWeight: Optional[float] = Field(
        None,
        description="The average mole weight of the flashed gas.",
        title="Avg Flashed Gas Molecular Weight",
    )
    AvgOverallFluidMolecularWeight: Optional[float] = Field(
        None,
        description="The average mole weight of the overall fluid.",
        title="Avg Overall Fluid Molecular Weight",
    )
    FlashedLiquidDensity: Optional[float] = Field(
        None,
        description="The density of the flashed liquid at standard condition.",
        title="Flashed Liquid Density",
    )
    FlashedGasDensity: Optional[float] = Field(
        None,
        description="The density of the flashed gas at standard condition.",
        title="Flashed Gas Density",
    )
    FlashedOverallFluidDensity: Optional[float] = Field(
        None,
        description="The density of the overall fluid.",
        title="Flashed Overall Fluid Density",
    )
    FlashedLiquidRealRelativeDensity: Optional[float] = Field(
        None,
        description="The real relative density of the flashed liquid.",
        title="Flashed Liquid Real Relative Density",
    )
    FlashedGasRealRelativeDensity: Optional[float] = Field(
        None,
        description="The real relative density of the flashed gas.",
        title="Flashed Gas Real Relative Density",
    )
    OverallFluidRealRelativeDensity: Optional[float] = Field(
        None,
        description="The real relative density of the overall fluid.",
        title="Overall Fluid Real Relative Density",
    )
    OverallFluidGasOilRatio: Optional[float] = Field(
        None,
        description="The gas-oil ratio of the overall fluid.",
        title="Overall Fluid Gas Oil Ratio",
    )
    FlashedLiquidMoleFraction: Optional[float] = Field(
        None,
        description="The mole fraction of the flashed liquid.",
        title="Flashed Liquid Mole Fraction",
    )
    FlashedGasMoleFraction: Optional[float] = Field(
        None,
        description="The mole fraction of the flashed gas.",
        title="Flashed Gas Mole Fraction",
    )
    OverallFluidMoleFraction: Optional[float] = Field(
        None,
        description="The mole fraction of the overall fluid.",
        title="Overall Fluid Mole Fraction",
    )
    FlashedLiquidMassFraction: Optional[float] = Field(
        None,
        description="The mass fraction of the flashed liquid.",
        title="Flashed Liquid Mas sFraction",
    )
    FlashedGasMassFraction: Optional[float] = Field(
        None,
        description="The mass fraction of the flashed gas.",
        title="Flashed Gas Mass Fraction",
    )
    OverallFluidMassFraction: Optional[float] = Field(
        None,
        description="The mass fraction of the overall fluid.",
        title="Overall Fluid Mass Fraction",
    )
    FlashedGasGravity: Optional[float] = Field(
        None,
        description="The gravity of flashed gas, represented the molecular weight of the gas divided by the molecular weight of air.",
        title="Flashed Gas Gravity",
    )
    FlashedLiquidAPIGravity: Optional[float] = Field(
        None,
        description="The API Gravity of the flashed liquid.",
        title="Flashed Liquid API Gravity",
    )


class PlusComponentsCalculatedProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The name of the component.", title="Component Name ID")
    FlashedLiquidRelativeMole: Optional[float] = Field(
        None,
        description="The relative molar concentration of the component in the flashed liquid.",
        title="Flashed Liquid Relative Mole",
    )
    FlashedGasRelativeMole: Optional[float] = Field(
        None,
        description="The relative molar concentration of the component in the flashed gas.",
        title="Flashed Gas Relative Mole",
    )
    OverallFluidRelativeMole: Optional[float] = Field(
        None,
        description="The relative molar concentration of the component in the overall fluid.",
        title="Overall Fluid Relative Mole",
    )
    FlashedLiquidMolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the flashed liquid in the overall fluid.",
        title="Flashed Liquid Molecular Weight",
    )
    FlashedGasMolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the flashed gas in the overall fluid.",
        title="Flashed Gas Molecular Weight",
    )
    OverallFluidMolecularWeight: Optional[float] = Field(
        None,
        description="The molecular weight of the overall fluid.",
        title="Overall Fluid Molecular Weight",
    )
    FlashedLiquidDensity: Optional[float] = Field(
        None,
        description="The density of the component in the flashed liquid at standard condition.",
        title="Flashed Liquid Density",
    )
    FlashedGasDensity: Optional[float] = Field(
        None,
        description="The density of the component in the flashed gas at standard condition.",
        title="Flashed Gas Density",
    )
    OverallFluidDensity: Optional[float] = Field(
        None,
        description="The density of the component within the overall fluid at standard condition.",
        title="Overall Fluid Density",
    )
    FlashedLiquidRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the component in the flashed liquid.",
        title="Flashed Liquid Relative Mass",
    )
    FlashedGasRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the component in the flashed gas.",
        title="Flashed Gas Relative Mass",
    )
    OverallFluidRelativeMass: Optional[float] = Field(
        None,
        description="The relative mass of the component in the flashed liquid.",
        title="Overall Fluid Relative Mass",
    )
    OverallFluidSpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component in the overall fluid.  It is typical for either Specific Gravity or Density to be reported, but not necessarily both.",
        title="Overall Fluid Specific Gravity",
    )
    FlashedGasSpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component in the flashed gas. It is typical for either Specific Gravity or Density to be reported, but not necessarily both.",
        title="Flashed Gas Specific Gravity",
    )
    FlashedLiquidSpecificGravity: Optional[float] = Field(
        None,
        description="The specific gravity of the component in the flashed liquid. It is typical for either Specific Gravity or Density to be reported, but not necessarily both.",
        title="Flashed Liquid Specific Gravity",
    )


class CalculatedProperties(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SampleCalculatedProperties: Optional[SampleCalculatedProperties] = Field(
        None,
        description="Properties calculated for the sample.",
        title="Sample Calculated Properties",
    )
    PlusComponentsCalculatedProperties: Optional[
        List[PlusComponentsCalculatedProperty]
    ] = Field(
        None,
        description="Properties of additional components calculated.",
        title="Plus Components Calculated Properties",
    )


class GasCompositionalCalculation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The name of the component.", title="Component Name ID")
    MolecularWeight: Optional[float] = Field(
        None, description="Molecular Weight", title="Molecular Weight"
    )
    Density: Optional[float] = Field(
        None,
        description="Mass per volume of the component within the sample at standard condition.",
        title="Density",
    )


class OilCompositionalCalculation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentNameID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The name of the component.", title="Component Name ID")
    MolecularWeight: Optional[float] = Field(
        None, description="Molecular Weight", title="Molecular Weight"
    )
    Density: Optional[float] = Field(
        None,
        description="Mass per volume of the component within the sample at standard condition.",
        title="Density",
    )


class ContaminationCorrection(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ContaminationCorrectionStatus: Optional[str] = Field(
        None,
        description="Status of correction for mud contamination.",
        title="Contamination Correction Status",
    )
    ContaminantID: Optional[
        constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None,
        description="The OSDU ID for the contaminant fluid sample record.",
        title="Contaminant ID",
    )
    ReferenceFluidID: Optional[str] = Field(
        None,
        description="The fluid used as a reference to determine the degree of contamination, e.g. stock tank oil or reservoir fluid.",
        title="Reference Fluid ID",
    )
    WeightFraction: Optional[float] = Field(
        None,
        description="The degree of contamination as a fraction of weight.",
        title="Weight Fraction",
    )
    VolumeFraction: Optional[float] = Field(
        None,
        description="The degree of contamination as a fraction of volume.",
        title="Volume Fraction",
    )
    MoleFraction: Optional[float] = Field(
        None,
        description="The degree of contamination as a molar fraction.",
        title="Mole Fraction",
    )


class AtmosphericFlashAndCompositionalAnalysisModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for this SamplesAnalysis",
        title="Samples Analysis ID",
    )
    SampleID: constr(
        regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="OSDU Identifier for the Sample associated with this analysis",
        title="Sample ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        title="Meta",
    )
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    FlashPressure: Optional[float] = Field(
        None,
        description="Pressure at which the sample is flashed.",
        title="Flash Pressure",
    )
    FlashTemperature: Optional[float] = Field(
        None,
        description="Temperature at which the sample is flashed.",
        title="Flash Temperature",
    )
    CompositionalAnalysis: Optional[List[CompositionalAnalysi]] = Field(
        None,
        description="Compositional Analysis contains properties that generally include mole and mass percents of: total fluid, flashed gas and flashed liquid, and individual components (e.g., C1, C2, C3…).",
        title="Compositional Analysis",
    )
    CalculatedProperties: Optional[CalculatedProperties] = Field(
        None,
        description="Properties calculated for the sample.",
        title="Sample Calculated Properties",
    )
    GasCompositionalCalculations: Optional[List[GasCompositionalCalculation]] = Field(
        None,
        description="Calculations related to the composition of the gas.",
        title="Gas Compositional Calculations",
    )
    OilCompositionalCalculations: Optional[List[OilCompositionalCalculation]] = Field(
        None,
        description="Calculations related to the composition of the oil.",
        title="Oil Compositional Calculations",
    )
    ContaminationCorrection: Optional[ContaminationCorrection] = Field(
        None,
        description="This object captures if the reported compositional analysis is pre or post correction for mud contamination and the reported mud contamination percentage.",
        title="Contamination Correction",
    )
    StandardConditionPressure: Optional[float] = Field(
        None,
        description="Pressure at which the Gas Oil Ratio is defined.",
        title="Standard Condition Pressure",
    )
    StandardConditionTemperature: Optional[float] = Field(
        None,
        description="Temperature at which the Gas Oil Ratio is defined.",
        title="Standard Condition Temperature",
    )
    InitialConditionPressure: Optional[float] = Field(
        None,
        description="Initial pressure condition at the start of the experiment.",
        title="Initial Condition Pressure",
    )
    InitialConditionTemperature: Optional[float] = Field(
        None,
        description="Initial temperature condition at the start of the experiment.",
        title="Initial Condition Temperature",
    )
    InitialConditionFormationVolumeFactor: Optional[float] = Field(
        None,
        description="The ratio of the volume of fluid in the reservoir to the volume of the fluid at the surface conditions, accounting for the effects of pressure and temperature.",
        title="Initial Condition Formation Volume Factor",
    )
    InitialConditionSaturatedFluidDensity: Optional[float] = Field(
        None,
        description="Density of saturated fluid at initial pressure and temperature conditions.",
        title="Initial Condition Saturated Fluid Density",
    )
    StandardConditionWaterDensity: Optional[float] = Field(
        None,
        description="The density of water at standard conditions.",
        title="Standard Condition Water Density",
    )
