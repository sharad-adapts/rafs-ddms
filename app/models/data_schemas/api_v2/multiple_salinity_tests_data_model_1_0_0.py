#  Copyright 2025 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  multiple_salinity_tests.1.0.0.json
#   timestamp: 2025-02-13T14:58:20+00:00

from __future__ import annotations

from app.models.config import RafsBaseModel

from typing import List, Optional, Union

from pydantic import Extra, Field, constr


class Meta(RafsBaseModel):
    kind: str = Field(
        "Unit",
        const=True,
        description="The kind of reference, 'Unit' for FrameOfReferenceUOM.",
        title="UOM Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The unit symbol or name of the unit.",
        example="ft[US]",
        title="UOM Unit Symbol",
    )
    persistableReference: Optional[str] = Field(
        None,
        description="The self-contained, persistable reference string uniquely identifying the Unit.",
        example='{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}',
        title="UOM Persistable Reference",
    )
    unitOfMeasureID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to unit of measure reference.",
        example="namespace:reference-data--UnitOfMeasure:ftUS:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides Unit context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["HorizontalDeflection.EastWest", "HorizontalDeflection.NorthSouth"],
        title="UOM Property Names",
    )


class Meta1(RafsBaseModel):
    kind: str = Field(
        "CRS",
        const=True,
        description="The kind of reference, constant 'CRS' for FrameOfReferenceCRS.",
        title="CRS Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS.",
        example="WGS 84 / UTM zone 15N",
        title="CRS Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying the CRS.",
        example='{"authCode":{"auth":"EPSG","code":"32615"},"name":"WGS_1984_UTM_Zone_15N","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\\"WGS_1984_UTM_Zone_15N\\",GEOGCS[\\"GCS_WGS_1984\\",DATUM[\\"D_WGS_1984\\",SPHEROID[\\"WGS_1984\\",6378137.0,298.257223563]],PRIMEM[\\"Greenwich\\",0.0],UNIT[\\"Degree\\",0.0174532925199433]],PROJECTION[\\"Transverse_Mercator\\"],PARAMETER[\\"False_Easting\\",500000.0],PARAMETER[\\"False_Northing\\",0.0],PARAMETER[\\"Central_Meridian\\",-93.0],PARAMETER[\\"Scale_Factor\\",0.9996],PARAMETER[\\"Latitude_Of_Origin\\",0.0],UNIT[\\"Meter\\",1.0],AUTHORITY[\\"EPSG\\",32615]]"}',
        title="CRS Persistable Reference",
    )
    coordinateReferenceSystemID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="SRN to CRS reference.",
        example="namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides CRS context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["KickOffPosition.X", "KickOffPosition.Y"],
        title="CRS Property Names",
    )


class Meta2(RafsBaseModel):
    kind: str = Field(
        "DateTime",
        const=True,
        description="The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.",
        title="DateTime Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the DateTime format and reference.",
        example="UTC",
        title="DateTime Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying DateTime reference.",
        example='{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}',
        title="DateTime Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides DateTime context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Acquisition.StartTime", "Acquisition.EndTime"],
        title="DateTime Property Names",
    )


class Meta3(RafsBaseModel):
    kind: str = Field(
        "AzimuthReference",
        const=True,
        description="The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.",
        title="AzimuthReference Reference Kind",
    )
    name: Optional[str] = Field(
        None,
        description="The name of the CRS or the symbol/name of the unit.",
        example="TrueNorth",
        title="AzimuthReference Name",
    )
    persistableReference: str = Field(
        ...,
        description="The self-contained, persistable reference string uniquely identifying AzimuthReference.",
        example='{"code":"TrueNorth","type":"AZR"}',
        title="AzimuthReference Persistable Reference",
    )
    propertyNames: Optional[List[str]] = Field(
        None,
        description='The list of property names, to which this meta data item provides AzimuthReference context to. A full path like "StructureA.PropertyB" is required to define a unique context; "data" is omitted since frame-of reference normalization only applies to the data block.',
        example=["Bearing"],
        title="AzimuthReference Property Names",
    )


class WaterSaturationOverResistivityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ResistivityIndex: Optional[float] = Field(
        None,
        description="The index of resistivity used to relate resistivity measurements to water saturation in the formation.",
        title="Resistivity Index",
    )
    WaterSaturation: Optional[float] = Field(
        None,
        description="The calculated water saturation of the formation, derived from resistivity data, indicating the proportion of pore space occupied by water.",
        title="Water Saturation",
    )


class SalinityTestResult(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SampleID: Optional[
        constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None,
        description="The OSDU Identifier for the Sample associated with this analysis.",
        title="Sample ID",
    )
    BQv: Optional[float] = Field(
        None,
        description="The quantity of brine used in the test, representing the volume or concentration of brine related to the salinity measurements.",
        title="BQv",
    )
    Qv: Optional[float] = Field(
        None,
        description="The volume of fluid (brine or other) used in the test.",
        title="Qv",
    )
    BrineResistivity: Optional[float] = Field(
        None,
        description="The resistivity of the brine sample, which provides information about the ionic content and salinity of the brine.",
        title="Brine Resistivity",
    )
    AdjustedFormationResistivityFactor: Optional[float] = Field(
        None,
        description="The formation resistivity factor adjusted for the brine salinity, used in interpreting resistivity logs and fluid saturation.",
        title="Adjusted Formation Resistivity Factor",
    )
    AdjustedSaturationExponent: Optional[float] = Field(
        None,
        description="The saturation exponent adjusted for salinity effects, used to improve the accuracy of fluid saturation calculations.",
        title="Adjusted Saturation Exponent",
    )
    WaterSaturationOverResistivity: Optional[
        List[WaterSaturationOverResistivityItem]
    ] = Field(
        None,
        description="Data on water saturation calculated from resistivity measurements, used to determine fluid content in the formation.",
        title="Water Saturation Over Resistivity",
    )


class SalinityTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    BrineSalinity: Optional[float] = Field(
        None,
        description="The concentration of salt in the brine at a specific step of the test, affecting resistivity and other salinity-related calculations.",
        title="Brine Salinity",
    )
    BrineConductivity: Optional[float] = Field(
        None,
        description="The electrical conductivity of the brine at a specific step, which is inversely related to resistivity and indicative of ion concentration.",
        title="Brine Conductivity",
    )
    CoreConductivity: Optional[float] = Field(
        None,
        description="The conductivity of the core sample at a specific step, used to assess the effect of brine salinity on the coreâ€™s electrical properties.",
        title="Core Conductivity",
    )


class MultipleSalinityTestsModel100(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(
        ...,
        description="The OSDU Identifier for this SamplesAnalysis.",
        title="Samples Analysis ID",
    )
    Meta: List[Union[Meta, Meta1, Meta2, Meta3]] = Field(
        ...,
        description="A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.",
        example="",
        title="Meta",
    )
    TestMethodID: Optional[str] = Field(
        None,
        description="The method used to perform the analysis on this sample.",
        title="Test Method ID",
    )
    SalinityTestResults: Optional[List[SalinityTestResult]] = Field(
        None,
        description="Summary of results from salinity testing, including various measurements and calculated factors related to salinity.",
        title="Salinity Test Results",
    )
    SalinityTestSteps: Optional[List[SalinityTestStep]] = Field(
        None,
        description="Details of each step in the salinity testing process, including specific measurements and conditions during the test.",
        title="Salinity Test Steps",
    )
