#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  cce_data_schema.json
#   timestamp: 2023-11-07T13:53:18+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class TestTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SaturationPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Type: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PressureMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ReservoirPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class StepPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Type: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PressureMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class LiquidFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilCompressibility(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilViscosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class TotalVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SaturationPressureLiquidVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class IndicatedPressureLiquidVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class RelativeVolumeRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasCompressibility(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasViscosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FluidConditionType(Enum):
    Current_Reservoir_Conditions = "Current Reservoir Conditions"
    Initial_Reservoir_Conditions = "Initial Reservoir Conditions"
    Initial_Saturation_Conditions = "Initial Saturation Conditions"
    Stock_Tank_Conditions = "Stock Tank Conditions"


class PhasesPresentType(Enum):
    Oil = "Oil"
    Solid = "Solid"
    Gas = "Gas"
    Oil_and_Gas = "Oil and Gas"


class ConstantCompositionExpansionTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[str] = Field(
        None,
        description="Internal step number which identifies the sequence of step in CCE measurements",
        title="Step Number",
    )
    StepPressure: Optional[StepPressure] = Field(
        None, description="The pressure applied during the step.", title="Step Pressure"
    )
    LiquidFraction: Optional[LiquidFraction] = Field(
        None,
        description="The fraction of liquid by volume for this test step. This is the volume of liquid divided...",
        title="Liquid Fraction",
    )
    OilDensity: Optional[OilDensity] = Field(
        None,
        description="The density of the oil for this test step.",
        title="Oil Density",
    )
    OilCompressibility: Optional[OilCompressibility] = Field(
        None,
        description="The compressibility of the oil for this test step.",
        title="Oil Compressibility",
    )
    OilViscosity: Optional[OilViscosity] = Field(
        None, description="The dynamic viscosity of the oil for this test step."
    )
    TotalVolume: Optional[TotalVolume] = Field(
        None, description="The total volume for this test step.", title="Total Volume"
    )
    SaturationPressureLiquidVolume: Optional[SaturationPressureLiquidVolume] = None
    IndicatedPressureLiquidVolume: Optional[IndicatedPressureLiquidVolume] = None
    RelativeVolumeRatio: Optional[RelativeVolumeRatio] = Field(
        None,
        description="The measured relative volume ratio = measured volume/volume at Psat.",
    )
    GasDensity: Optional[GasDensity] = Field(
        None, description="The density of the gas for this test step."
    )
    GasZFactor: Optional[float] = Field(
        None,
        description="The Z factor of the gas for this test step.",
        title="GasZFactor",
    )
    GasCompressibility: Optional[GasCompressibility] = Field(
        None,
        description="The compressibility of the gas for this test step.",
        title="Gas Compressibility",
    )
    GasViscosity: Optional[GasViscosity] = Field(
        None,
        description="The viscosity of the gas phase at this test step",
        title="Gas Viscosity",
    )
    YFunction: Optional[float] = Field(
        None,
        description="The Y function at this test step. See  Standing, M.B.: Volumetric And Phase Behavior Of Oil Field Hydrocarbon Systems, Eighth Edition, SPE Richardson, Texas (1977).",
        title="Y Function",
    )
    FluidConditionType: Optional[FluidConditionType] = Field(
        None,
        description="The fluid condition at this test step.",
        title="Fluid Condition Type",
    )
    PhasesPresentType: Optional[PhasesPresentType] = None


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    TestTemperature: Optional[TestTemperature] = Field(
        None, description="The temperature of this test.", title="Test Temperature"
    )
    SaturationPressure: Optional[SaturationPressure] = Field(
        None,
        description="The saturation (or bubble point) pressure measured in this test.",
        title="Saturation Pressure",
    )
    ReservoirPressure: Optional[ReservoirPressure] = Field(
        None, title="Reservoir Pressure"
    )
    ConstantCompositionExpansionTestSteps: Optional[
        List[ConstantCompositionExpansionTestStep]
    ] = None
