#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.


# generated by datamodel-codegen:
#   filename:  compositionalanalysis_data_schema.json
#   timestamp: 2024-07-08T16:10:09+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class FlashPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidRelativeMass(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasRelativeMass(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidRelativeMole(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasRelativeMole(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidRelativeMass(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidRelativeMole(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CompositionalAnalysi(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentFormula: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The chemical composition of the component")
    ComponentName: Optional[str] = Field(
        None, description="The name of the liquid component."
    )
    FlashedLiquidRelativeMass: Optional[FlashedLiquidRelativeMass] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    FlashedGasRelativeMass: Optional[FlashedGasRelativeMass] = Field(
        None, description="The relative mass of the component in the flashed gas."
    )
    FlashedLiquidRelativeMole: Optional[FlashedLiquidRelativeMole] = Field(
        None,
        description="The relative molar weight of the component in the flashed liquid.",
    )
    FlashedGasRelativeMole: Optional[FlashedGasRelativeMole] = Field(
        None,
        description="The relative molar weight of the component in the flashed gas.",
    )
    OverallFluidRelativeMass: Optional[OverallFluidRelativeMass] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    OverallFluidRelativeMole: Optional[OverallFluidRelativeMole] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )


class AvgFlashedLiquidMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AvgFlashedGasMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AvgFlashedOverallFluidMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedOverallFluidDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidRealRelativeDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasRealRelativeDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidRealRelativeDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidGasOilRatio(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidMoleFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasMoleFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidMoleFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedLiquidMassFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasMassFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidMassFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SampleCalculatedProperties(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    AvgFlashedLiquidMolecularWeight: Optional[AvgFlashedLiquidMolecularWeight] = Field(
        None, description="The average mole weight of the flashed liquid"
    )
    AvgFlashedGasMolecularWeight: Optional[AvgFlashedGasMolecularWeight] = Field(
        None, description="The average mole weight of the flashed gas"
    )
    AvgFlashedOverallFluidMolecularWeight: Optional[
        AvgFlashedOverallFluidMolecularWeight
    ] = Field(None, description="The average mole weight of the overall flashed fluid")
    FlashedLiquidDensity: Optional[FlashedLiquidDensity] = Field(
        None, description="The density of the flashed liquid"
    )
    FlashedGasDensity: Optional[FlashedGasDensity] = Field(
        None, description="The density of the flashed gas"
    )
    FlashedOverallFluidDensity: Optional[FlashedOverallFluidDensity] = Field(
        None, description="The density of the overall fluid"
    )
    FlashedLiquidRealRelativeDensity: Optional[
        FlashedLiquidRealRelativeDensity
    ] = Field(None, description="The real relative density of the flashed liquid")
    FlashedGasRealRelativeDensity: Optional[FlashedGasRealRelativeDensity] = Field(
        None, description="The real relative density of the flashed gas"
    )
    OverallFluidRealRelativeDensity: Optional[OverallFluidRealRelativeDensity] = Field(
        None, description="The real relative density of the overall fluid"
    )
    OverallFluidGasOilRatio: Optional[OverallFluidGasOilRatio] = Field(
        None, description="The gas-oil ratio of the overall liquid"
    )
    FlashedLiquidMoleFraction: Optional[FlashedLiquidMoleFraction] = Field(
        None, description="The mole fraction of the flashed liquid"
    )
    FlashedGasMoleFraction: Optional[FlashedGasMoleFraction] = Field(
        None, description="The mole fraction of the flashed gas"
    )
    OverallFluidMoleFraction: Optional[OverallFluidMoleFraction] = Field(
        None, description="The mole fraction of the overall fluid"
    )
    FlashedLiquidMassFraction: Optional[FlashedLiquidMassFraction] = Field(
        None, description="The mass fraction of the flashed liquid"
    )
    FlashedGasMassFraction: Optional[FlashedGasMassFraction] = Field(
        None, description="The mass fraction of the flashed gas"
    )
    OverallFluidMassFraction: Optional[OverallFluidMassFraction] = Field(
        None, description="The mass fraction of the overall liquid"
    )


class FlashedLiquidMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashedGasMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidMolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OverallFluidDensity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PlusComponentsCalculatedProperty(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentFormula: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleCompositionComponent:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The formula of the liquid component.")
    ComponentName: Optional[str] = Field(
        None, description="The name of the liquid component."
    )
    FlashedLiquidRelativeMole: Optional[FlashedLiquidRelativeMole] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    FlashedLiquidMolecularWeight: Optional[FlashedLiquidMolecularWeight] = Field(
        None, description="The relative mass of the component in the flashed gas."
    )
    FlashedLiquidDensity: Optional[FlashedLiquidDensity] = Field(
        None,
        description="The relative molar weight of the component in the flashed liquid.",
    )
    FlashedGasMolecularWeight: Optional[FlashedGasMolecularWeight] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    FlashedGasRelativeMole: Optional[FlashedGasRelativeMole] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    FlashedGasDensity: Optional[FlashedGasDensity] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    OverallFluidMolecularWeight: Optional[OverallFluidMolecularWeight] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    OverallFluidRelativeMole: Optional[OverallFluidRelativeMole] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )
    OverallFluidDensity: Optional[OverallFluidDensity] = Field(
        None, description="The relative mass of the component in the flashed liquid."
    )


class CalculatedProperties(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SampleCalculatedProperties: Optional[SampleCalculatedProperties] = None
    PlusComponentsCalculatedProperties: Optional[
        List[PlusComponentsCalculatedProperty]
    ] = None


class MolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Density(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasCompositionalCalculation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentName: Optional[str] = Field(
        None, description="The name of the gas component."
    )
    MolecularWeight: Optional[MolecularWeight] = Field(
        None, description="Molecular Weight"
    )
    Density: Optional[Density] = Field(None, description="Density.")


class OilCompositionalCalculation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentName: Optional[str] = Field(
        None, description="The name of the oil component."
    )
    MolecularWeight: Optional[MolecularWeight] = Field(
        None, description="Molecular Weight"
    )
    Density: Optional[Density] = Field(None, description="Density.")


class MudContamination(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ContaminationCorrection(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    MudContamination: Optional[MudContamination] = None
    MudContaminationCorrectionStatus: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-MudContaminationCorrectionStatus:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    FlashPressure: Optional[FlashPressure] = None
    FlashTemperature: Optional[FlashTemperature] = None
    CompositionalAnalysis: Optional[List[CompositionalAnalysi]] = None
    CalculatedProperties: Optional[CalculatedProperties] = None
    GasCompositionalCalculations: Optional[List[GasCompositionalCalculation]] = None
    OilCompositionalCalculations: Optional[List[OilCompositionalCalculation]] = None
    ContaminationCorrection: Optional[ContaminationCorrection] = Field(
        None,
        description="This object captures if the reported compositional analysis is pre or post correction for mud contamination and the reported mud contamination percentage",
    )
