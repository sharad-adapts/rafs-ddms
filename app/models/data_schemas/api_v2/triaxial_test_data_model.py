#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  triaxial_test_data_schema.json
#   timestamp: 2023-10-30T11:31:57+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Length(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Diameter(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Density(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Time(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AxialStrain(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class RadialStrain(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AxialStress(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class RadialStress(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PorePressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AxialPWaveVelocity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class AxialSWaveVelocity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Porosity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class EffectiveAxialStress(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class EffectiveRadialStress(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Datum(BaseModel):
    SampleID: Optional[
        constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    ] = None
    Length: Optional[Length] = None
    Diameter: Optional[Diameter] = None
    Density: Optional[Density] = None
    Time: Optional[Time] = None
    AxialStrain: Optional[AxialStrain] = None
    RadialStrain: Optional[RadialStrain] = None
    AxialStress: Optional[AxialStress] = None
    RadialStress: Optional[RadialStress] = None
    PorePressure: Optional[PorePressure] = None
    AxialPWaveVelocity: Optional[AxialPWaveVelocity] = None
    AxialSWaveVelocity: Optional[AxialSWaveVelocity] = None
    Porosity: Optional[Porosity] = None
    EffectiveAxialStress: Optional[EffectiveAxialStress] = None
    EffectiveRadialStress: Optional[EffectiveRadialStress] = None
    PoissonsRatio: Optional[float] = Field(None, title="Poisson Ratio")
    Remarks: Optional[str] = Field(None, title="Remarks")
    LoadingCondition: Optional[str] = Field(None, title="Loading Condition")
    ConsolidationType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ConsolidationType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="Consolidation Type, e.g. Isotropic")
    DrainageCondition: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DrainageCondition:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None, description="Categorization of drainage of the sample, e.g. Drained"
    )
    LoadingMethod: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-LoadingMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Method by which stress is applied, or loaded, onto the sample",
    )
    Lithology: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-LithologyType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="Identified lithology of the rock sample")
    CutFluid: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-CutFluidType:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None, description="Cutting Fluid used when preparing this sample for testing"
    )


class Model(BaseModel):
    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    data: Optional[List[Datum]] = None
