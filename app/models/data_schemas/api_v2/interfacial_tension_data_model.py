#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  interfacial_tension_data_schema.json
#   timestamp: 2023-11-30T22:32:00+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class ComponentMassFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class ComponentMoleFraction(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Surfactant(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentName: Optional[str] = None
    ComponentMassFraction: Optional[ComponentMassFraction] = None
    ComponentMoleFraction: Optional[ComponentMoleFraction] = None


class StepPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class StepTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class SurfactantConcentration(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InterfacialTension(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class InterfacialTensionTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    StepNumber: Optional[str] = Field(
        None,
        description="Internal step number which identifies the sequence of step in interfacial tension measurements",
        title="Step Number",
    )
    StepPressure: Optional[StepPressure] = None
    StepTemperature: Optional[StepTemperature] = None
    WettingPhaseSaturation: Optional[float] = None
    SurfactantConcentration: Optional[SurfactantConcentration] = None
    InterfacialTension: Optional[InterfacialTension] = None
    Remark: Optional[str] = Field(None, title="Remark")


class Model(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    TestNumber: Optional[str] = Field(
        None,
        description="A number for this test for purposes of e.g., tracking lab sequence.",
        title="Test Number",
    )
    WettingPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    NonWettingPhase: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-WettabilityPhaseType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Surfactants: Optional[List[Surfactant]] = None
    Remark: Optional[str] = Field(None, title="Remark")
    InterfacialTensionTestSteps: Optional[List[InterfacialTensionTestStep]] = None
