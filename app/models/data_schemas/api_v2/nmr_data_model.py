#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  nmr_data_schema.json
#   timestamp: 2024-09-11T19:19:52+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class CumulativeWaterSaturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativeVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CumulativePorosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PorosityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PorosityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class IncrementalWaterSaturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class IncrementalPorosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PorosityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PorosityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class IncrementalVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T2FullySaturated(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T2PartiallySaturated(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T1CumulativePorosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T1CumulativeWaterSaturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T1IncrementalPorosity(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T1IncrementalWaterSaturation(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NMRTestStep(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    CumulativeWaterSaturation: Optional[CumulativeWaterSaturation] = Field(
        None, description="Cumulative water saturation"
    )
    CumulativeVolume: Optional[CumulativeVolume] = Field(
        None,
        description="Cumulative volume of fluid calculated based on amplitude measurement",
    )
    CumulativePorosity: Optional[CumulativePorosity] = Field(
        None, description="Cumulative porosity of the core plug"
    )
    IncrementalWaterSaturation: Optional[IncrementalWaterSaturation] = Field(
        None, description="Incremental water saturation"
    )
    IncrementalPorosity: Optional[IncrementalPorosity] = Field(
        None, description="Incremental porosity of the core plug"
    )
    IncrementalVolume: Optional[IncrementalVolume] = Field(
        None,
        description="Incremental volume of fluid calculated based on amplitude measurement",
    )
    T2FullySaturated: Optional[T2FullySaturated] = Field(
        None,
        description="T2 (transverse or spin-spin relaxation) when the sample is fully saturated",
    )
    T2PartiallySaturated: Optional[T2PartiallySaturated] = Field(
        None,
        description="T2 (transverse or spin-spin relaxation) when the sample is partially saturated",
    )
    T1CumulativePorosity: Optional[T1CumulativePorosity] = Field(
        None, description="Cumulative porosity of the core plug based on T1"
    )
    T1CumulativeWaterSaturation: Optional[T1CumulativeWaterSaturation] = Field(
        None, description="Cumulative water saturation of the core plug based on T1"
    )
    T1IncrementalPorosity: Optional[T1IncrementalPorosity] = Field(
        None, description="Incremental porosity of the core plug based on T1"
    )
    T1IncrementalWaterSaturation: Optional[T1IncrementalWaterSaturation] = Field(
        None, description="Incremental water saturation of the core plug based on T1"
    )


class BoundFluidBVI(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NMRT2BoundFluidRelativetoPoreVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class EchoSpacing(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FreeFluidFFI(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NMRT2FreeFluid(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PorosityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PorosityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PorosityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PermeabilityItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    PermeabilityType: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Swirr(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NMRT2Swirr(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T2CutOff(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class T2Mean(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Temperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PoreVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NetConfiningStress(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class NMRSummaryData(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    BoundFluidBVI: Optional[BoundFluidBVI] = Field(
        None,
        description="Bound fluid following sample desaturation, relative to pore volume",
    )
    NMRT2BoundFluidRelativetoPoreVolume: Optional[
        NMRT2BoundFluidRelativetoPoreVolume
    ] = Field(None, description="NMR t2 bound fluid relative to pore volume")
    DisplacedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-DisplacedFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    EchoSpacing: Optional[EchoSpacing] = Field(None, description="echo spacing Te")
    FreeFluidFFI: Optional[FreeFluidFFI] = Field(
        None,
        description="free fluid following sample desaturation, relative to pore volume",
    )
    NMRT2FreeFluid: Optional[NMRT2FreeFluid] = Field(
        None, description="nmr t2 free fluid expressed relative to pore volume"
    )
    InjectedFluid: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-SampleInjectionFluidType:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Porosity: Optional[List[PorosityItem]] = None
    Permeability: Optional[List[PermeabilityItem]] = None
    Swirr: Optional[Swirr] = Field(
        None, description="irreducible water saturation relative to pore volume"
    )
    NMRT2Swirr: Optional[NMRT2Swirr] = Field(
        None, description="nmr t2 irreducible water saturation relative to pore volume"
    )
    T2CutOff: Optional[T2CutOff] = Field(None, description="t2 cut off time")
    T2Mean: Optional[T2Mean] = Field(None, description="Average of T2 relaxation time")
    Temperature: Optional[Temperature] = Field(None, description="Test temperature")
    PoreVolume: Optional[PoreVolume] = Field(None, description="Pore Volume")
    NetConfiningStress: Optional[NetConfiningStress] = Field(
        None, description="Net Confining Stress"
    )


class NMRTestItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    TestCondition: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-NMRTestCondition:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The sample condition at which the NMR test was conducted",
        title="Test Condition",
    )
    NMRTestSteps: Optional[List[NMRTestStep]] = Field(
        None, description="The dynamic core nmr test steps", title="NMR Test Steps"
    )
    NMRSummaryData: Optional[NMRSummaryData] = Field(None, title="NMR Summary Data")


class NmrDataSchema(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    NMRTest: Optional[List[NMRTestItem]] = None
