#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  sto_data_schema.json
#   timestamp: 2023-05-02T16:44:18+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, constr


class FlashFromPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class FlashFromTemperature(FlashFromPressure):
    pass


class MolecularWeight(FlashFromPressure):
    pass


class FluidConditions(Enum):
    stock_tank_conditions = "stock tank conditions"
    initial_reservoir_conditions = "initial reservoir conditions"
    current_reservoir_conditions = "current reservoir conditions"
    initial_saturation_conditions = "initial saturation conditions"


class PhasesPresent(Enum):
    gas = "gas"
    water = "water"
    gas_and_oil_and_water = "gas and oil and water"
    oil = "oil"
    oil_and_gas = "oil and gas"
    oil_and_water = "oil and water"
    gas_and_water = "gas and water"


class SampleDepth(FlashFromPressure):
    pass


class OilAPIGravity(FlashFromPressure):
    pass


class WaterContent(FlashFromPressure):
    pass


class AsphaltaneContent(FlashFromPressure):
    pass


class ParrafinContent(FlashFromPressure):
    pass


class CloudPoint(FlashFromPressure):
    pass


class WaxContent(FlashFromPressure):
    pass


class WaxAppearanceTemperature(FlashFromPressure):
    pass


class Saturates(FlashFromPressure):
    pass


class PourPoint(FlashFromPressure):
    pass


class ASTMFlashPoint(FlashFromPressure):
    pass


class TotalAcidNumber(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\/]+:[0-9]*$"
        )
    ] = None


class TotalSulfurContent(FlashFromPressure):
    pass


class NBase(TotalAcidNumber):
    pass


class NitrogenContent(FlashFromPressure):
    pass


class ElementalSulfurContent(FlashFromPressure):
    pass


class LeadContent(FlashFromPressure):
    pass


class NickelContent(FlashFromPressure):
    pass


class VanadiumContent(FlashFromPressure):
    pass


class IronContent(FlashFromPressure):
    pass


class ViscosityAtTemperature(FlashFromPressure):
    pass


class ReidVaporPressure(FlashFromPressure):
    pass


class STOFLashedLiquidProperty(BaseModel):
    SampleDepth: Optional[SampleDepth] = None
    OilAPIGravity: Optional[OilAPIGravity] = None
    WaterContent: Optional[WaterContent] = None
    WatsonKFactor: Optional[float] = None
    AsphaltaneContent: Optional[AsphaltaneContent] = None
    ParrafinContent: Optional[ParrafinContent] = None
    CloudPoint: Optional[CloudPoint] = None
    WaxContent: Optional[WaxContent] = None
    WaxAppearanceTemperature: Optional[WaxAppearanceTemperature] = None
    Saturates: Optional[Saturates] = None
    PourPoint: Optional[PourPoint] = None
    ASTMFlashPoint: Optional[ASTMFlashPoint] = None
    TotalAcidNumber: Optional[TotalAcidNumber] = None
    TotalSulfurContent: Optional[TotalSulfurContent] = None
    NBase: Optional[NBase] = None
    NitrogenContent: Optional[NitrogenContent] = None
    ElementalSulfurContent: Optional[ElementalSulfurContent] = None
    LeadContent: Optional[LeadContent] = None
    NickelContent: Optional[NickelContent] = None
    VanadiumContent: Optional[VanadiumContent] = None
    IronContent: Optional[IronContent] = None
    ViscosityAtTemperature: Optional[ViscosityAtTemperature] = None
    ReidVaporPressure: Optional[ReidVaporPressure] = None


class AromaticsWeightFraction(FlashFromPressure):
    pass


class AsphaltenesWeightFraction(FlashFromPressure):
    pass


class NapthenesWeightFraction(FlashFromPressure):
    pass


class ParaffinsWeightFraction(FlashFromPressure):
    pass


class SaturationPressure(FlashFromPressure):
    pass


class SaturationTemperature(FlashFromPressure):
    pass


class SARAItem(BaseModel):
    AromaticsWeightFraction: Optional[AromaticsWeightFraction] = None
    AsphaltenesWeightFraction: Optional[AsphaltenesWeightFraction] = None
    NapthenesWeightFraction: Optional[NapthenesWeightFraction] = None
    ParaffinsWeightFraction: Optional[ParaffinsWeightFraction] = None
    SaturationPressure: Optional[SaturationPressure] = None
    SaturationTemperature: Optional[SaturationTemperature] = None


class ParaffinContent(FlashFromPressure):
    pass


class ParaffinWeightFraction(FlashFromPressure):
    pass


class CumulativeParaffinFraction(FlashFromPressure):
    pass


class HTGCAnalysisItem(BaseModel):
    CarbonNumber: Optional[str] = None
    ParaffinContent: Optional[ParaffinContent] = None
    ParaffinWeightFraction: Optional[ParaffinWeightFraction] = None
    CumulativeParaffinFraction: Optional[CumulativeParaffinFraction] = None


class Model(BaseModel):
    StockTankOilAnalysisTestID: constr(
        regex=r"^[\w\-\.]+:work-product-component--StockTankOilAnalysisTest:[\w\-\.\:\%]+:[0-9]*$"
    )
    FluidSampleID: Optional[
        constr(regex=r"^[\w\-\.]+:master-data--FluidSample:[\w\-\.\:\%]+:[0-9]*$")
    ] = None
    FlashFromPressure: Optional[FlashFromPressure] = None
    FlashFromTemperature: Optional[FlashFromTemperature] = None
    MolecularWeight: Optional[MolecularWeight] = None
    FluidConditions: Optional[FluidConditions] = None
    PhasesPresent: Optional[PhasesPresent] = None
    STOFLashedLiquidProperties: Optional[List[STOFLashedLiquidProperty]] = None
    SARA: Optional[List[SARAItem]] = None
    HTGCAnalysis: Optional[List[HTGCAnalysisItem]] = None
