#  Copyright 2024 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  eos_content_schema.json
#   timestamp: 2024-09-18T15:10:30+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field, constr

from app.models.config import RafsBaseModel


class MolecularWeight(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class BoilingPoint(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CriticalTemperature(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CriticalPressure(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class CriticalVolume(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class VolumeTranslationFactor(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Component(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentName: Optional[str] = Field(None, description="The name of this component")
    MolecularWeight: Optional[MolecularWeight] = Field(
        None, description="molecular weight of this component"
    )
    StdGravity: Optional[float] = Field(
        None,
        description="nominal gravitational acceleration of an object in a vacuum near the surface of the Earth",
    )
    BoilingPoint: Optional[BoilingPoint] = Field(
        None,
        description="temperature at which the component transitions from liquid to gas",
    )
    CriticalTemperature: Optional[CriticalTemperature] = Field(
        None,
        description="the temperature at and above which vapor of the substance cannot be liquefied, no matter how much pressure is applied (Purdue)",
    )
    CriticalPressure: Optional[CriticalPressure] = Field(
        None,
        description="pressure required to liquefy a gas at its critical temperature (Purdue)",
    )
    CriticalVolume: Optional[CriticalVolume] = Field(
        None,
        description="volume occupied by 1 mole of gas at critical temperature and pressure",
    )
    VolumeTranslationFactor: Optional[VolumeTranslationFactor] = None
    ShiftFactor: Optional[float] = None
    AcentricFactor: Optional[float] = None
    OmegaA: Optional[float] = None
    OmegaB: Optional[float] = None
    Parachor: Optional[float] = Field(
        None,
        description="an empirical constant for a liquid that relates the surface tension to the molecular volume",
    )


class BinaryInteractionParameter(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    ComponentName1: Optional[str] = None
    ComponentName2: Optional[str] = None
    Value: Optional[float] = None


class ViscosityCoefficientItem(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    LBCCoefficient1: Optional[float] = None
    LBCCoefficient2: Optional[float] = None
    LBCCoefficient3: Optional[float] = None
    LBCCoefficient4: Optional[float] = None
    LBCCoefficient5: Optional[float] = None
    LBCCoefficient6: Optional[float] = None
    FluidType: Optional[
        constr(regex=r"^[\w\-\.]+:reference-data\-\-SampleType:[\w\-\.\:\%]+:[0-9]*$")
    ] = None


class EosContentSchema(RafsBaseModel):
    class Config:
        extra = Extra.forbid

    EoSMethod: Optional[str] = Field(
        None,
        description="The EoS Method, e.g. Peng-Robinson",
        title="Equation of State Method",
    )
    ViscosityCorrelationMethod: Optional[str] = Field(
        None,
        description="The VC Method, e.g. Lohrenz",
        title="Viscosity Correlation Method",
    )
    Components: Optional[List[Component]] = Field(
        None,
        description="Array Object containing the molecular components used in the creation of this equation of state",
    )
    BinaryInteractionParameters: Optional[List[BinaryInteractionParameter]] = None
    ViscosityCoefficient: Optional[List[ViscosityCoefficientItem]] = None
