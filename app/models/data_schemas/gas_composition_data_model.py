#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  gas_composition_data_schema.json
#   timestamp: 2023-09-20T23:58:56+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Concentration(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasCompositionItem(BaseModel):
    Component: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-GasChromatographyGasCompositionComponents:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Concentration: Optional[Concentration] = Field(
        None,
        description="the concentration of the gas component in the overall hydrocarbon gas composition",
    )


class WetnessC5(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class WetnessC4(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class DrynessC5(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class DrynessC4(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Maturity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Balance(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Character(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasIndicator(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class OilIndicator(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Bernard(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class Ratios(BaseModel):
    WetnessC5: Optional[WetnessC5] = Field(
        None, description="Gas Wetness (C2-C5) / (C1-C5)"
    )
    WetnessC4: Optional[WetnessC4] = Field(
        None, description="Gas Wetness (C2-C4) / (C1-C4)"
    )
    DrynessC5: Optional[DrynessC5] = Field(
        None, description="Gas Dryness ratio (C1) / (C1-C5)"
    )
    DrynessC4: Optional[DrynessC4] = Field(
        None, description="Gas Dryness ratio (C1) / (C1-C4)"
    )
    Maturity: Optional[Maturity] = Field(
        None, description="Gas Maturity ratio iso-butane / normal-pentane"
    )
    Balance: Optional[Balance] = Field(None, description="Balance ratio C1+C2/C3+C4+C5")
    Character: Optional[Character] = Field(None, description="Character ratio C4+C5/C3")
    GasIndicator: Optional[GasIndicator] = Field(
        None,
        description="Gas Indicator ratio ((C3+C4+C5) * Total Gas) / (C1+C2+C3+C4+C5)",
    )
    OilIndicator: Optional[OilIndicator] = Field(
        None, description="Oil Indicator ratio ((C3+C4)/C1)"
    )
    Bernard: Optional[Bernard] = Field(
        None, description="Bernard ratio - Methane / Ethane + Propane (%)"
    )


class Model(BaseModel):
    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    Method: Optional[str] = Field(
        None, description="The sample analysis method used for this analysis"
    )
    GasComposition: Optional[List[GasCompositionItem]] = Field(
        None,
        description="The relative abundance of hydrocarbon gases measured using gas chromatography",
        title="Gas Composition",
    )
    Ratios: Optional[Ratios] = None
