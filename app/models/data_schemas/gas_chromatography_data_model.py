#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  gas_chromatography_data_schema.json
#   timestamp: 2023-10-03T18:31:33+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr


class RetentionTime(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class PeakItem(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    AreaHeightQualifier: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CompoundsAreaHeight:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None


class GasChromatographyAnalysi(BaseModel):
    CompoundCode: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-(WholeOilGasChromatographyCompounds|SaturateGasChromatographyCompounds|AromaticGasChromatographyCompounds|GasolineGasChromatographyCompounds|PyrolysisGasChromatographyCompounds):[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    RetentionTime: Optional[RetentionTime] = None
    Peak: Optional[List[PeakItem]] = None


class PeakItem1(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    AreaHeightQualifier: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-CompoundsAreaHeight:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    Type: Optional[str] = Field(
        None,
        description="The type of the internal standard compound in Gas Chromatography analysis, e.g. Standard2",
    )


class StdCompoundItem(BaseModel):
    CompoundCode: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-(WholeOilGasChromatographyCompounds|SaturateGasChromatographyCompounds|AromaticGasChromatographyCompounds|GasolineGasChromatographyCompounds|PyrolysisGasChromatographyCompounds):[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = None
    RetentionTime: Optional[RetentionTime] = None
    Peak: Optional[List[PeakItem1]] = None


class Model(BaseModel):
    SamplesAnalysisID: constr(
        regex=r"^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$"
    )
    SampleID: constr(regex=r"^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$")
    Method: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-GeochemistryMethod:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(None, description="The sample analysis method used for this analysis")
    GasChromatographyAnalysis: Optional[List[GasChromatographyAnalysi]] = Field(
        None,
        description="Hydrocarbon abundance measured by gas chromatography, this analysis includs: Aromatic,Gasoline,HighTemperature,Pyrolysis,Saturate,SimulatedDistillation,SulfurDetection,ThermalExtraction,WholeOil",
        title="Gas Chromatography Analysis",
    )
    StdCompound: Optional[List[StdCompoundItem]] = Field(
        None, description="Compound added as internal standard"
    )
