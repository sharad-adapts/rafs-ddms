#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  fractionation_data_schema.json
#   timestamp: 2023-06-28T05:01:27+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, constr


class FractionationSum(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AsphaltenePctOfExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AlkanesPctOfWholeExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AromaticsPctofWholeExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NSOPctOfWholeExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NonElutedPctOfWholeExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassAlkanes(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassAromatics(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassResins(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassAsphaltenes(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class RecoveryPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NonHydrocarbonsPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassOfHydrocarbons(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassOfNonHydrocarbons(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NonHydrocarbonsEOM(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class OilMassInitial(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class OilMassAfterTopping(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class ToppingLossPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class MassOfLoadedAmount(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class RecoveryMass(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class LossPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class LossMass(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class SaturateNormalizedPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AromaticNormalizedPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NSONormalizedPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AsphalteneNormalizedPct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NaphthenesPctOfTotalExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class NParaffinsPctOfTotalExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class VolumePctOfAromaticFraction(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AsphalteneC5Pct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class AsphalteneC7Pct(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class IparaffinsPctOfTotalExtract(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class Model(BaseModel):
    SamplesAnalysisID: constr(
        regex=r'^[\w\-\.]+:work-product-component\-\-SamplesAnalysis:[\w\-\.\:\%]+:[0-9]*$'
    )
    SampleID: constr(regex=r'^[\w\-\.]+:master-data\-\-Sample:[\w\-\.\:\%]+:[0-9]*$')
    FractionationSum: Optional[FractionationSum] = None
    AsphaltenePctOfExtract: Optional[AsphaltenePctOfExtract] = None
    AlkanesPctOfWholeExtract: Optional[AlkanesPctOfWholeExtract] = None
    AromaticsPctofWholeExtract: Optional[AromaticsPctofWholeExtract] = None
    NSOPctOfWholeExtract: Optional[NSOPctOfWholeExtract] = None
    NonElutedPctOfWholeExtract: Optional[NonElutedPctOfWholeExtract] = None
    MassAlkanes: Optional[MassAlkanes] = None
    MassAromatics: Optional[MassAromatics] = None
    MassResins: Optional[MassResins] = None
    MassAsphaltenes: Optional[MassAsphaltenes] = None
    RecoveryPct: Optional[RecoveryPct] = None
    NonHydrocarbonsPct: Optional[NonHydrocarbonsPct] = None
    MassOfHydrocarbons: Optional[MassOfHydrocarbons] = None
    MassOfNonHydrocarbons: Optional[MassOfNonHydrocarbons] = None
    NonHydrocarbonsToHydrocarbonsRatio: Optional[float] = None
    NonHydrocarbonsEOM: Optional[NonHydrocarbonsEOM] = None
    OilMassInitial: Optional[OilMassInitial] = None
    OilMassAfterTopping: Optional[OilMassAfterTopping] = None
    ToppingLossPct: Optional[ToppingLossPct] = None
    MassOfLoadedAmount: Optional[MassOfLoadedAmount] = None
    RecoveryMass: Optional[RecoveryMass] = None
    LossPct: Optional[LossPct] = None
    LossMass: Optional[LossMass] = None
    SaturateNormalizedPct: Optional[SaturateNormalizedPct] = None
    AromaticNormalizedPct: Optional[AromaticNormalizedPct] = None
    NSONormalizedPct: Optional[NSONormalizedPct] = None
    AsphalteneNormalizedPct: Optional[AsphalteneNormalizedPct] = None
    NaphthenesPctOfTotalExtract: Optional[NaphthenesPctOfTotalExtract] = None
    NParaffinsPctOfTotalExtract: Optional[NParaffinsPctOfTotalExtract] = None
    VolumePctOfAromaticFraction: Optional[VolumePctOfAromaticFraction] = None
    AsphalteneC5Pct: Optional[AsphalteneC5Pct] = None
    AsphalteneC7Pct: Optional[AsphalteneC7Pct] = None
    IparaffinsPctOfTotalExtract: Optional[IparaffinsPctOfTotalExtract] = None
