#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  slimtube_data_schema.json
#   timestamp: 2023-06-01T17:04:25+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr


class TestTemperature(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class ColumnLength(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ColumnDiameter(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ColumnPorosity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ColumnTotalPoreVolume(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ColumnPermeability(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class PackedColumnProperty(BaseModel):
    ColumnLength: Optional[ColumnLength] = None
    ColumnDiameter: Optional[ColumnDiameter] = None
    PackingMaterial: Optional[str] = Field(None, title='PackingMaterial')
    ColumnPorosity: Optional[ColumnPorosity] = None
    ColumnTotalPoreVolume: Optional[ColumnTotalPoreVolume] = None
    ColumnPermeability: Optional[ColumnPermeability] = None


class DisplacementPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class PoreVolumeInjected(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeOilRecovery(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class MaterialBalance(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class AsphaltanceContentOfResidualOil(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CoreFloodingItem(BaseModel):
    DisplacementPressure: Optional[DisplacementPressure] = None
    PoreVolumeInjected: Optional[PoreVolumeInjected] = None
    CumulativeOilRecovery: Optional[CumulativeOilRecovery] = None
    MaterialBalance: Optional[MaterialBalance] = None
    AsphaltanceContentOfResidualOil: Optional[AsphaltanceContentOfResidualOil] = None


class MinimumMiscibilityPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = None


class PoresInjected(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeOilRecoveryVolume(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeOilRecoveryWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class GasOilRatio(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class GasGravity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class OilDensity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class PackedColumnDisplacementItem(BaseModel):
    IncrementNumber: Optional[str] = Field(None, title='IncrementNumber')
    PoresInjected: Optional[PoresInjected] = None
    CumulativeOilRecoveryVolume: Optional[CumulativeOilRecoveryVolume] = None
    CumulativeOilRecoveryWeight: Optional[CumulativeOilRecoveryWeight] = None
    GasOilRatio: Optional[GasOilRatio] = None
    GasGravity: Optional[GasGravity] = None
    OilDensity: Optional[OilDensity] = None


class MaterialInjectedWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class MaterialRecoveredWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class MaterialRecoveredCumulativeWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class MaterialBalanceDatum(BaseModel):
    MaterialInjected: Optional[str] = Field(None, title='MaterialInjected')
    MaterialInjectedWeight: Optional[MaterialInjectedWeight] = None
    MaterialRecovered: Optional[str] = Field(None, title='MaterialRecovered')
    MaterialRecoveredWeight: Optional[MaterialRecoveredWeight] = None
    MaterialRecoveredCumulativeWeight: Optional[
        MaterialRecoveredCumulativeWeight
    ] = None


class VaporRelativeMole(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class VaporCompositionItem(BaseModel):
    ComponentFormula: Optional[str] = Field(None, title='ComponentFormula')
    VaporRelativeMole: Optional[VaporRelativeMole] = None


class VaporCompositionalAnalysis(BaseModel):
    IncrementNumberSampled: Optional[str] = Field(None, title='IncrementNumberSampled')
    PoreVolumeInjected: Optional[PoreVolumeInjected] = None
    VaporComposition: Optional[List[VaporCompositionItem]] = None


class LiquidRelativeMolarWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class FlashedLiquidRelativeMass(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class LiquidCompositionalAnalysis(BaseModel):
    ComponentFormula: Optional[str] = Field(None, title='ComponentFormula')
    LiquidRelativeMolarWeight: Optional[LiquidRelativeMolarWeight] = None
    FlashedLiquidRelativeMass: Optional[FlashedLiquidRelativeMass] = None


class AvgMoleWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ResidueDensity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ResidueAPI(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ResidueRelativeMolarWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ResidueMolecularWeight(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class ResidueCalculatedProperty(BaseModel):
    ComponentFormula: Optional[str] = Field(None, title='ComponentFormula')
    ResidueRelativeMolarWeight: Optional[ResidueRelativeMolarWeight] = None
    ResidueMolecularWeight: Optional[ResidueMolecularWeight] = None
    ResidueDensity: Optional[ResidueDensity] = None


class CalculatedProperty(BaseModel):
    AvgMoleWeight: Optional[AvgMoleWeight] = None
    ResidueDensity: Optional[ResidueDensity] = None
    ResidueAPI: Optional[ResidueAPI] = None
    ResidueCalculatedProperties: Optional[List[ResidueCalculatedProperty]] = None


class StepAveragePressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class SlimTubeTestStep(BaseModel):
    StepNumber: Optional[str] = Field(None, title='StepNumber')
    StepAveragePressure: Optional[StepAveragePressure] = None
    Remark: Optional[str] = Field(None, title='Remark')


class DifferentialPressure(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class InjectionVolumeAtTestTemperature(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class InjectionVolumeAtPumpTemperature(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class InjectedPoreVolumeFraction(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class DarcyVelocity(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeOilProductionPercOOIP(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeOilProductionSTO(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class IncrementalProducedGOR(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class CumulativeProducedGOR(BaseModel):
    Value: Optional[float] = None
    UnitOfMeasure: Optional[
        constr(regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+')
    ] = None


class SlimTubeTestVolumeStepItem(BaseModel):
    StepNumber: Optional[str] = Field(None, title='StepNumber')
    DifferentialPressure: Optional[DifferentialPressure] = None
    RunTime: Optional[str] = Field(None, title='RunTime')
    InjectionVolumeAtTestTemperature: Optional[InjectionVolumeAtTestTemperature] = None
    InjectionVolumeAtPumpTemperature: Optional[InjectionVolumeAtPumpTemperature] = None
    InjectedPoreVolumeFraction: Optional[InjectedPoreVolumeFraction] = None
    DarcyVelocity: Optional[DarcyVelocity] = None
    CumulativeOilProductionPercOOIP: Optional[CumulativeOilProductionPercOOIP] = None
    CumulativeOilProductionSTO: Optional[CumulativeOilProductionSTO] = None
    IncrementalProducedGOR: Optional[IncrementalProducedGOR] = None
    CumulativeProducedGOR: Optional[CumulativeProducedGOR] = None
    Remark: Optional[str] = Field(None, title='Remark')


class Model(BaseModel):
    SlimTubeTestID: constr(
        regex=r'^[\w\-\.]+:work-product-component\-\-SlimTubeTest:[\w\-\.\:\%]+:[0-9]*$'
    ) = Field(..., title='Slim Tube Test ID')
    FluidSampleID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-FluidSample:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Unique identifier of the Fluid Sample which Atmospheric Flash and Compositional Analysis is done on',
        title='Fluid Sample ID',
    )
    TestNumber: Optional[str] = Field(
        None,
        description='A number for this test for purposes of e.g., tracking lab sequence.',
        title='Test Number',
    )
    TestTemperature: Optional[TestTemperature] = None
    Remark: Optional[str] = Field(None, title='Remark')
    PackedColumnProperties: Optional[List[PackedColumnProperty]] = None
    CoreFlooding: Optional[List[CoreFloodingItem]] = None
    MinimumMiscibilityPressure: Optional[MinimumMiscibilityPressure] = None
    PackedColumnDisplacement: Optional[List[PackedColumnDisplacementItem]] = None
    MaterialBalanceData: Optional[List[MaterialBalanceDatum]] = None
    VaporCompositionalAnalysis: Optional[List[VaporCompositionalAnalysis]] = None
    LiquidCompositionalAnalysis: Optional[List[LiquidCompositionalAnalysis]] = None
    CalculatedProperties: Optional[List[CalculatedProperty]] = None
    SlimTubeTestSteps: Optional[List[SlimTubeTestStep]] = None
    SlimTubeTestVolumeStep: Optional[List[SlimTubeTestVolumeStepItem]] = None
