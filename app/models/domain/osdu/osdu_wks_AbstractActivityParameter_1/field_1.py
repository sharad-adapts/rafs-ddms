#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  /api/schema-service/v1/schema/osdu:wks:work-product-component--SamplesAnalysis:1.0.0
#   timestamp: 2023-10-19T20:18:16+00:00

from __future__ import annotations

from datetime import datetime, time
from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Key(BaseModel):
    TimeIndexParameterKey: Optional[time] = Field(
        None,
        description="The time index acting as parameter key value.",
        title="Time Index Parameter Key",
    )
    IntegerParameterKey: Optional[int] = Field(
        None,
        description='Integer value from "ParameterKey" parameter, associated with this parameter. Example: {"ParameterKey": "index", "StringParameterKey: 2}.',
        title="Integer Parameter Key",
    )
    StringParameterKey: Optional[str] = Field(
        None,
        description='String value from "ParameterKey" parameter, associated with this parameter. Can be used to associate with parameter values of type string or data quantity. In the later case, the string representation of the quantity value will be used. Example: {"ParameterKey": "facies", "StringParameterKey: "shale"}, {"ParameterKey":"depth", "StringParameterKey":"1545.43m"}.',
        title="String Parameter Key",
    )
    ObjectParameterKey: Optional[
        constr(regex=r"^[\w\-\.]+:[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None,
        description="Relationship to an object ID, which acts as the parameter.",
        title="Object Parameter Key",
    )
    ParameterKey: Optional[str] = Field(
        None,
        description="The key name, which establishes an association between parameters.",
        title="Internal Parameter Key",
    )


class Field0(BaseModel):
    StringParameter: Optional[str] = Field(
        None,
        description="Parameter containing a string value.",
        title="String Parameter",
    )
    ParameterRoleID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-ParameterRole:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Reference data describing how the parameter was used by the activity, such as input, output, control, constraint, agent, predecessor activity, successor activity.",
        title="Parameter Role",
    )
    DataObjectParameter: Optional[
        constr(regex=r"^[\w\-\.]+:[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None,
        description="Parameter referencing to a top level object.",
        title="Data Object Parameter",
    )
    Selection: Optional[str] = Field(
        None,
        description="Textual description about how this parameter was selected.",
        title="Selection",
    )
    Title: str = Field(
        ...,
        description="Name of the parameter, used to identify it in the activity. It must have an equivalent in the ActivityTemplate parameters.",
        title="Title",
    )
    Index: Optional[int] = Field(
        None,
        description="When parameter is an array, used to indicate the index in the array.",
        title="Index",
    )
    ParameterKindID: constr(
        regex=r"^[\w\-\.]+:reference-data\-\-ParameterKind:[\w\-\.\:\%]+:[0-9]*$"
    ) = Field(..., description="[Added to cover lack of inheritance]")
    DataQuantityParameterUOMID: Optional[
        constr(
            regex=r"^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="Identifies unit of measure for floating point value.",
        title="Data Quantity Parameter UoM ID",
    )
    BooleanParameter: Optional[bool] = Field(
        None,
        description="The boolean parameter value, if ParameterKindID refers to the Boolean type.",
        title="Boolean Parameter",
    )
    Keys: Optional[List[Key]] = Field(
        None,
        description="A nested array describing keys used to identify a parameter value. When multiple values are provided for a given parameter, the key provides a way to identify the parameter through its association with an object, a time index or a parameter array member via ParameterKey value.",
        title="Keys",
    )
    DataQuantityParameter: Optional[float] = Field(
        None,
        description="Parameter containing a double value.",
        title="Data Quantity Parameter",
    )
    TimeIndexParameter: Optional[datetime] = Field(
        None,
        description="Parameter containing a time index value.  It is assumed that all TimeIndexParameters within an Activity have the same date-time format, which is then described by the FrameOfReference mechanism.",
        title="Time Index Parameter",
    )
    IntegerQuantityParameter: Optional[int] = Field(
        None,
        description="Parameter containing an integer value.",
        title="Integer Quantity Parameter",
    )
