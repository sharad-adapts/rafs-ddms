#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  https://stable-{{osdu}}.centralus.cloudapp.azure.com/api/schema-service/v1/schema/osdu:wks:master-data--RockSample:1.0.0
#   timestamp: 2023-02-10T14:53:56+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra, Field, constr

from .osdu_wks_AbstractAccessControlList_1 import field_0 as field_0_3
from .osdu_wks_AbstractCommonResources_1.field_0 import Field0
from .osdu_wks_AbstractFacilityVerticalMeasurement_1 import field_0
from .osdu_wks_AbstractLegalParentList_1 import field_0 as field_0_2
from .osdu_wks_AbstractLegalTags_1 import field_0 as field_0_5
from .osdu_wks_AbstractMaster_1.field_1 import Field0 as Field0_1
from .osdu_wks_AbstractMetaItem_1 import field_0 as field_0_4
from .osdu_wks_AbstractStorageLocation_1 import field_0 as field_0_1


class SampleRemark(BaseModel):
    RemarkSource: Optional[str] = Field(
        None,
        description='The person, vendor, interpreter or other provider of information.',
        title='Remark Source',
    )
    RemarkID: Optional[str] = Field(
        None,
        description='A unique identifier for each remark record.',
        title='Remark ID',
    )
    Remark: Optional[str] = Field(
        None, description='A descriptive comment for this remark.', title='Remark'
    )


class Data(Field0, Field0_1):
    SampleTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-RockSampleType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='Identifies a rock sample type.  E.g. Core, Cuttings, Core Slab, Core Plug, Core Chip, Slides. Considered mandatory.',
        title='Sample Type ID',
    )
    SampleRemarks: Optional[List[SampleRemark]] = Field(
        None,
        description='An array containing operational or quality comments pertaining to a rock sample.',
        example=[
            {
                'RemarkSource': 'Mud Logger',
                'RemarkID': '1',
                'Remark': 'Shaker not functioning properly.',
            }
        ],
        title='Sample Remarks',
    )
    BottomDepth: Optional[float] = Field(
        None,
        description='The depth of the base of the rock sample. For point measurements (slides, sidewall cores), the same value is assigned to TopDepth and BottomDepth.',
        title='Bottom Depth',
    )
    SampleWeight: Optional[float] = Field(
        None, description='Weight of sample', title='Sample Weight'
    )
    SampleAcquiredDate: Optional[datetime] = Field(
        None,
        description='The date that the sample was acquired.',
        title='Sample Acquired Date',
    )
    SampleOrientationID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-SampleOrientationType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The kind of orientation of this sample with respect to the bedding or drilling direction. Typical values are Horizontal, Vertical, Axial.',
        example='namespace:reference-data--SampleOrientationType:Horizontal:',
        title='Sample Orientation ID',
    )
    WellboreID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Unique wellbore identifier. Not required for outcrops.',
        title='Wellbore ID',
    )
    PreservationTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-CorePreservationType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The kind of preservation applied to this sample.',
        title='Preservation Type ID',
    )
    TopDepth: Optional[float] = Field(
        None,
        description='The depth of the top of the rock sample. For point measurements (slides, sidewall cores), the same value is assigned to TopDepth and BottomDepth.',
        title='Top Depth',
    )
    SampleLength: Optional[float] = Field(
        None,
        description='The length of rock sample. Not applicable to cuttings',
        title='Sample Length',
    )
    RockSampleIdentifier: Optional[str] = Field(
        None,
        description='Native identifier from a Master Data Management System or other trusted source external to OSDU - stored here in order to allow for multi-system connection and synchronization. If used, the "Source" property should identify that source system. i.e. this item is optional.',
        title='Rock Sample Identifier',
    )
    Name: Optional[str] = Field(
        None, description='The name of this RockSample.', title='Name'
    )
    DataSource: Optional[str] = Field(
        None,
        description='The person, vendor or other provider of this information.',
        title='Data Source',
    )
    CoringID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-Coring:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Identifies the Coring from which this sample is created from it directly. Not populated for outcrops and cuttings.',
        title='Coring ID',
    )
    AreCuttingsWashedAndDried: Optional[bool] = Field(
        None,
        description='For cuttings: a flag indication whether the cuttings were washed and dried. More details in the associated RockSampleAnalysis.',
        title='Are Cuttings Washed and Dried',
    )
    IsPlugCleaned: Optional[bool] = Field(
        None,
        description='For sample plugs: a flag indicating whether the plug has been cleaned. More details in the associated RockSampleAnalysis.',
        title='Is Plug Cleaned',
    )
    SampleOwnerID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Company and/or organization that owns the sample.',
        title='Sample Owner ID',
    )
    ParentSampleID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-RockSample:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Identifies the RockSample from which this sample is created from it directly.',
        title='Parent Sample ID',
    )
    VerticalMeasurement: Optional[field_0.Field0] = Field(
        None,
        description='References an entry in the VerticalMeasurements array for the Wellbore identified by WellboreID, or a standalone vertical reference which defines the vertical reference datum for all measured depths of the RockSample record. If this is not populated, the VerticalMeasurement is derived from the Coring.',
        title='Vertical Measurement',
    )
    LabSampleIdentifier: Optional[str] = Field(
        None,
        description='The data vendor assigned sample ID or number.',
        title='Laboratory Sample Identifier',
    )
    SampleDiameter: Optional[float] = Field(
        None,
        description='The diameter of rock sample. Not applicable to cuttings',
        title='Sample Diameter',
    )
    SampleInterval: Optional[float] = Field(
        None,
        description='The interval between the top depth and bottom depth.',
        title='Sample Interval',
    )
    SampleStorageLocations: Optional[List[field_0_1.Field0]] = Field(
        None,
        description='An array containing the name of the locations where the material sample is stored. It can be stored in more than one location over time.',
        title='Sample Storage Location',
    )
    IsCoreSlabbed: Optional[bool] = Field(
        None,
        description='A flag to denote whether a particular core has been slabbed or not.',
        title='Is Core Slabbed?',
    )
    ExtensionProperties: Optional[Dict[str, Any]] = None


class RockSample(BaseModel):
    class Config:
        extra = Extra.forbid

    ancestry: Optional[field_0_2.Field0] = Field(
        None,
        description='The links to data, which constitute the inputs, from which this record instance is derived.',
        title='Ancestry',
    )
    data: Optional[Data] = None
    kind: constr(regex=r'^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$') = Field(
        ...,
        description='The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.',
        example='osdu:wks:master-data--RockSample:1.0.0',
        title='Entity Kind',
    )
    acl: field_0_3.Field0 = Field(
        ...,
        description='The access control tags associated with this entity.',
        title='Access Control List',
    )
    version: Optional[int] = Field(
        None,
        description='The version number of this OSDU resource; set by the framework.',
        example=1562066009929332,
        title='Version Number',
    )
    tags: Optional[Dict[str, str]] = Field(
        None,
        description='A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.',
        example={'NameOfKey': 'String value'},
        title='Tag Dictionary',
    )
    modifyUser: Optional[str] = Field(
        None,
        description='The user reference, which created this version of this resource object. Set by the System.',
        example='some-user@some-company-cloud.com',
        title='Resource Object Version Creation User Reference',
    )
    modifyTime: Optional[datetime] = Field(
        None,
        description='Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.',
        example='2020-12-16T11:52:24.477Z',
        title='Resource Object Version Creation DateTime',
    )
    createTime: Optional[datetime] = Field(
        None,
        description='Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.',
        example='2020-12-16T11:46:20.163Z',
        title='Resource Object Creation DateTime',
    )
    meta: Optional[List[field_0_4.Field0]] = Field(
        None,
        description='The Frame of Reference meta data section linking the named properties to self-contained definitions.',
        title='Frame of Reference Meta Data',
    )
    legal: field_0_5.Field0 = Field(
        ...,
        description="The entity's legal tags and compliance status. The actual contents associated with the legal tags is managed by the Compliance Service.",
        title='Legal Tags',
    )
    createUser: Optional[str] = Field(
        None,
        description='The user reference, which created the first version of this resource object. Set by the System.',
        example='some-user@some-company-cloud.com',
        title='Resource Object Creation User Reference',
    )
    id: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-RockSample:[\w\-\.\:\%]+$')
    ] = Field(
        None,
        description='Previously called ResourceID or SRN which identifies this OSDU resource object without version.',
        example='namespace:master-data--RockSample:c69cf08a-ae35-5984-b855-f9b36ce1ea21',
        title='Entity ID',
    )
