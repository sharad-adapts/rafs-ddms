#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  /api/schema-service/v1/schema/osdu:wks:work-product-component--SamplesAnalysis:1.0.0
#   timestamp: 2023-10-19T20:18:16+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr

from ..osdu_wks_AbstractActivityParameter_1 import field_1
from ..osdu_wks_AbstractActivityState_1 import field_0


class SoftwareSpecification(BaseModel):
    Version: Optional[str] = Field(
        None,
        description="The version of the software, application or plug-in used while performing this activity.",
        title="Software Version",
    )
    SoftwareName: Optional[str] = Field(
        None,
        description="The name of the software, application or plug-in used while performing this activity.",
        title="Software Name",
    )


class Field1(BaseModel):
    ActivityStates: Optional[List[field_0.Field0]] = Field(
        None,
        description="The (non-overlapping) historical activity states and effective start and termination dates. The last state is replicated in the single LastActivityState for simpler queries.",
        title="Activity States",
    )
    SoftwareSpecifications: Optional[List[SoftwareSpecification]] = Field(
        None,
        description="Software names and versions used.",
        title="Software Specifications",
    )
    Parameters: Optional[List[field_1.Field0]] = Field(
        None,
        description="An array of parameter values used in one instance of activity.  It may include references to data objects which are inputs and/or outputs of the activity. The array is mandatory but can be empty.",
        title="Parameters",
    )
    ParentActivityID: Optional[
        constr(
            regex=r"^[\w\-\.]+:work-product-component\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The relationship to a parent activity.",
        title="Parent Activity ID",
    )
    PriorActivityIDs: Optional[
        List[
            constr(
                regex=r"^[\w\-\.]+:work-product-component\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$"
            )
        ]
    ] = Field(
        None,
        description="The activity or activities feeding results into this activity instance.",
        title="Prior Activity IDs",
    )
    ActivityTemplateID: Optional[
        constr(
            regex=r"^[\w\-\.]+:master-data\-\-ActivityTemplate:[\w\-\.\:\%]+:[0-9]*$"
        )
    ] = Field(
        None,
        description="The relation to the ActivityTemplate carrying expected parameter definitions and default values.",
        title="Activity Template ID",
    )
    LastActivityState: Optional[field_0.Field0] = Field(
        None,
        description="The current or last state this activity transitioned to. It is a copy of the last element in ActivityStates[]. If there is only one state recorded, the ActivityStates[] can stay empty.",
        title="Last Activity State",
    )
    ParentProjectID: Optional[
        constr(regex=r"^[\w\-\.]+:master-data\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$")
    ] = Field(
        None,
        description="The relationship to a parent project acting as a parent activity.",
        title="Parent Project ID",
    )
