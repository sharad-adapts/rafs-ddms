#  Copyright 2023 ExxonMobil Technology and Engineering Company
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# generated by datamodel-codegen:
#   filename:  rock_sample_analysis_1_1_0.json
#   timestamp: 2022-12-19T19:17:08+00:00

from __future__ import annotations

from datetime import date, datetime, time
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra, Field, constr

from .osdu_wks_AbstractAccessControlList_1 import field_0 as field_0_2
from .osdu_wks_AbstractCommonResources_1.field_0 import Field0
from .osdu_wks_AbstractFacilityVerticalMeasurement_1 import field_0
from .osdu_wks_AbstractLegalParentList_1 import field_0 as field_0_1
from .osdu_wks_AbstractLegalTags_1 import field_0 as field_0_4
from .osdu_wks_AbstractMetaItem_1 import field_0 as field_0_3
from .osdu_wks_AbstractWorkProductComponent_1.field_1 import Field0 as Field0_2
from .osdu_wks_AbstractWPCGroupType_1.field_0 import Field0 as Field0_1


class OtherMeasurement(BaseModel):
    SpecificationDate: Optional[date] = Field(
        None, description='The date value of the parameter.'
    )
    SpecificationDateTime: Optional[datetime] = Field(
        None, description='The date and time value of the parameter.'
    )
    SpecificationQuantity: Optional[float] = Field(
        None, description='The numeric value of the parameter.'
    )
    TerminationDateTime: Optional[datetime] = Field(
        None,
        description='The first point in time when this specification is no longer in effect.',
    )
    SpecificationText: Optional[str] = Field(
        None, description='The text value of the parameter.'
    )
    SpecificationTime: Optional[time] = Field(
        None, description='The time value of the parameter.'
    )
    EffectiveDateTime: Optional[datetime] = Field(
        None,
        description='The date and time at which this specification becomes effective.',
    )
    SpecificationIndicator: Optional[bool] = Field(
        None, description='The indicator value of the parameter.'
    )
    UnitOfMeasureID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The unit for the quantity parameter, like metre (m in SI units system) for quantity Length.',
    )
    ParameterTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-ParameterType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(None, description='Parameter representing a property or characteristic.')


class Remark(BaseModel):
    RemarkSource: Optional[str] = Field(
        None,
        description='The person, vendor, interpreter or other provider of information.',
        title='Remark Source',
    )
    RemarkID: Optional[str] = Field(
        None,
        description='A unique identifier for each remark record.',
        title='Remark ID',
    )
    Remark: Optional[str] = Field(
        None, description='A descriptive comment for this remark.', title='Remark'
    )


class Conditions(BaseModel):
    Temperature: Optional[float] = Field(
        None,
        description='The temperature condition for the analysis.',
        title='Temperature',
    )
    MeanPressure: Optional[float] = Field(
        None,
        description='The average pressure in which the gas permeability has been measured.',
        title='Mean Pressure',
    )
    PressureMeasurementTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-PressureMeasurementType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='Identifies the environment where the pressure was measured. E.g. Ambient, Overburden',
        title='Pressure Measurement Type ID',
    )
    Pressure: Optional[float] = Field(
        None, description='The pressure condition for the analysis.', title='Pressure'
    )
    PorePressure: Optional[float] = Field(
        None,
        description='The pressure of the fluid in the pore space.',
        title='Pore Pressure',
    )


class RCAMeasurement(BaseModel):
    PermeabilityMeasurementTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-PermeabilityMeasurementType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The measurement type used to obtain the Permeability values.',
        title='Permeability Measurement Type ID',
    )
    OtherMeasurements: Optional[List[OtherMeasurement]] = Field(
        None,
        description='Other measurements made in the context of this analysis',
        title='Other Measurements',
    )
    Remarks: Optional[List[Remark]] = Field(
        None,
        description='An array containing operational or quality comments pertaining to a rock sample analysis.',
        title='Analysis Remarks',
    )
    Permeability: Optional[float] = Field(
        None, description='The measured sample permeability.', title='Permeability'
    )
    Porosity: Optional[float] = Field(
        None, description='The measured sample porosity.', title='Porosity'
    )
    Conditions: Optional[Conditions] = Field(
        None,
        description='The conditions under which this analysis has been carried out',
        title='Conditions',
    )
    PorosityMeasurementTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-PorosityMeasurementType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The measurement type used to obtain the Porosity values.',
        title='Porosity Measurement Type ID',
    )


class RoutineCoreAnalysis(BaseModel):
    SaturationGas: Optional[float] = Field(
        None,
        description='The fraction of gas volume compared to the total pore volume.',
        title='Saturation Gas',
    )
    SaturationMethodTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-SaturationMethodType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The saturation method type, like Dean Stark, Retort, Karl Fischer.',
        title='Saturation Method Type ID',
    )
    SaturationWater: Optional[float] = Field(
        None,
        description='The fraction of water volume compared to the total pore volume.',
        title='Saturation Water',
    )
    GrainDensity: Optional[float] = Field(
        None, description='Th measured grain density', title='Grain Density'
    )
    SaturationOil: Optional[float] = Field(
        None,
        description='The fraction of oil volume compared to the total pore volume.',
        title='Saturation Oil',
    )
    WeightOfSalt: Optional[float] = Field(
        None,
        description='The weight of salt in the brine, needed in conjunction with SaturationWater.',
        title='Weight Of Salt',
    )
    RCAMeasurements: Optional[List[RCAMeasurement]] = Field(
        None,
        description='The conditions under which this analysis has been carried out',
        title='RCA Measurements',
    )
    GrainDensityMeasurementTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-GrainDensityMeasurementType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The measurement type used to obtain the GrainDensity value.',
        title='Grain Density Measurement Type ID',
    )


class GrainSizeAnalysis(BaseModel):
    GrainSizeMethodTypeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-GrainSizeAnalysisMethod:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The type of grain size analysis carried out during this analysis.',
        title='Grain Size Method ID',
    )
    GrainSizeClassificationSchemeID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-GrainSizeClassificationScheme:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The relationship to the GrainSizeClassificationScheme reference value record, which defined the grain size interval to GrainSizeClassification mapping. It provides the detailed context to the MeanGrainSizeDescription.',
        title='Grain Size Classification Scheme ID',
    )
    MedianGrainSize: Optional[float] = Field(
        None,
        description='The median grain size as numeric value, as determined in this analysis.',
        title='Median Grain Size',
    )
    MeanGrainSizeClassificationID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-GrainSizeClassification:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The mean grain size as determined in the analysis. It holds the relationship to a GrainSizeClassification reference value.',
        title='Mean Grain Size Classification ID',
    )


class Remark1(Remark):
    pass


class Data(Field0, Field0_1, Field0_2):
    BottomDepth: Optional[float] = Field(
        None,
        description='The last depth index from the analysis result.',
        title='Bottom Depth',
    )
    LaboratoryName: Optional[str] = Field(
        None,
        description='Name or branch of the laboratory performing the analysis.',
        title='Laboratory Name',
    )
    AnalysisDate: Optional[date] = Field(
        None,
        description='The date the batch of rock sample analysis was performed.',
        title='Analysis Date',
    )
    AnalysisTypeIDs: Optional[
        List[
            constr(
                regex=r'^[\w\-\.]+:reference-data\-\-RockSampleAnalysisType:[\w\-\.\:\%]+:[0-9]*$'
            )
        ]
    ] = Field(
        None,
        description='Type of laboratory test(s) performed (e.g. Routine Core Analysis, Grain Size) on a specific rock sample by a given laboratory.',
        title='Analysis Type IDs',
    )
    RockSampleID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-RockSample:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Identifies the RockSample on which this batch of analysis was performed.',
        title='Rock Sample ID',
    )
    SampleOrientationID: Optional[
        constr(
            regex=r'^[\w\-\.]+:reference-data\-\-SampleOrientationType:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The de-normalized Sample Orientation derived from the RockSample.',
        title='Sample Orientation ID',
    )
    WellboreID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Unique wellbore identifier. Required\xa0when\xa0RockSampleAnalysis does not have relationship with master-data Core.  E.g. analysis for sidewall core.',
        title='Wellbore ID',
    )
    TopDepth: Optional[float] = Field(
        None,
        description='The first depth index from the analysis result.',
        title='Top Depth',
    )
    RoutineCoreAnalysis: Optional[RoutineCoreAnalysis] = Field(
        None,
        description='If populated RoutineCoreAnalysis contains conditions and results of a routine core analysis. The array AnalysisTypeIDs must then contain a value of RoutineCoreAnalysis.',
        title='Routine Core Analysis',
    )
    CoringID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-Coring:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Identifies the Core on which this batch of analysis was performed.',
        title='Coring ID',
    )
    GrainSizeAnalysis: Optional[GrainSizeAnalysis] = Field(
        None,
        description='If populated, it contains information that additional content is available containing grain size analysis results. The array AnalysisTypeIDs must then contain a value of GrainSizeAnalysis.',
        title='Grain Size Analysis',
    )
    AnalysisOrganisationID: Optional[
        constr(regex=r'^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$')
    ] = Field(
        None,
        description='Identifies the Organisation that produces/produced this analysis.',
        title='Analysis Organisation ID',
    )
    Remarks: Optional[List[Remark1]] = Field(
        None,
        description='An array containing operational or quality comments pertaining to a rock sample analysis.',
        title='Analysis Remarks',
    )
    LabSampleIdentifier: Optional[str] = Field(
        None,
        description='The name or sample identifier assigned to the sample by the laboratory. This name or identifier is used to key into the associated content (e.g., document) to find the portion of the content dealing with the specific sample.',
        example='KK-16',
        title='Laboratory Sample Identifier',
    )
    VerticalMeasurement: Optional[field_0.Field0] = Field(
        None,
        description='References an entry in the VerticalMeasurements array for the Wellbore identified by WellboreID, or a standalone vertical reference which defines the vertical reference datum for all measured depths of the RockSample record. If this is not populated, the VerticalMeasurement is derived from the Coring.',
        title='Vertical Measurement',
    )
    DepthShiftsID: Optional[
        constr(
            regex=r'^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+:[0-9]*$'
        )
    ] = Field(
        None,
        description='The WellLog representation carrying the core-depth to logging-depth correction or mapping used or to be used with this analysis.',
        title='Depth Shifts ID',
    )
    ExtensionProperties: Optional[Dict[str, Any]] = None


class RockSampleAnalysis(BaseModel):
    class Config:
        extra = Extra.forbid

    ancestry: Optional[field_0_1.Field0] = Field(
        None,
        description='The links to data, which constitute the inputs, from which this record instance is derived.',
        title='Ancestry',
    )
    data: Optional[Data] = None
    kind: constr(regex=r'^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$') = Field(
        ...,
        description='The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.',
        example='osdu:wks:work-product-component--RockSampleAnalysis:1.1.0',
        title='Entity Kind',
    )
    acl: field_0_2.Field0 = Field(
        ...,
        description='The access control tags associated with this entity.',
        title='Access Control List',
    )
    version: Optional[int] = Field(
        None,
        description='The version number of this OSDU resource; set by the framework.',
        example=1562066009929332,
        title='Version Number',
    )
    tags: Optional[Dict[str, str]] = Field(
        None,
        description='A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.',
        example={'NameOfKey': 'String value'},
        title='Tag Dictionary',
    )
    modifyUser: Optional[str] = Field(
        None,
        description='The user reference, which created this version of this resource object. Set by the System.',
        example='some-user@some-company-cloud.com',
        title='Resource Object Version Creation User Reference',
    )
    modifyTime: Optional[datetime] = Field(
        None,
        description='Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.',
        example='2020-12-16T11:52:24.477Z',
        title='Resource Object Version Creation DateTime',
    )
    createTime: Optional[datetime] = Field(
        None,
        description='Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.',
        example='2020-12-16T11:46:20.163Z',
        title='Resource Object Creation DateTime',
    )
    meta: Optional[List[field_0_3.Field0]] = Field(
        None,
        description='The Frame of Reference meta data section linking the named properties to self-contained definitions.',
        title='Frame of Reference Meta Data',
    )
    legal: field_0_4.Field0 = Field(
        ...,
        description="The entity's legal tags and compliance status. The actual contents associated with the legal tags is managed by the Compliance Service.",
        title='Legal Tags',
    )
    createUser: Optional[str] = Field(
        None,
        description='The user reference, which created the first version of this resource object. Set by the System.',
        example='some-user@some-company-cloud.com',
        title='Resource Object Creation User Reference',
    )
    id: Optional[
        constr(
            regex=r'^[\w\-\.]+:work-product-component\-\-RockSampleAnalysis:[\w\-\.\:\%]+$'
        )
    ] = Field(
        None,
        description='Previously called ResourceID or SRN which identifies this OSDU resource object without version.',
        example='namespace:work-product-component--RockSampleAnalysis:dd76cf6c-226f-5636-ad1b-1ca0f8249cc8',
        title='Entity ID',
    )
