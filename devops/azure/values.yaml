# Using https://community.opengroup.org/osdu/platform/deployment-and-operations/helm-charts-azure/-/tree/master/osdu-ddms/standard-ddms for simplicity
## helm template "oci://msosdu.azurecr.io/helm/standard-ddms" --version <version/1.1x.0> -f values.yaml
## helm upgrade "oci://msosdu.azurecr.io/helm/standard-ddms" --version <version/1.1x.0> -f values.yaml

deployment:
  replicaCount: 1

azure:
  keyvault:
    secrets:
    - key: redis-host
      obj: redis-hostname
    - key: redis-pass
      obj: redis-password

configuration:
  - service: rafs-ddms
    container:
      image: rafs-ddms
      containerPort: 8080
    path: /api/rafs-ddms
    podAnnotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    probe:
      readiness:
        path: /api/rafs-ddms/readiness # make the API version as a variable
        delay: 60
      liveness:
        path: /api/rafs-ddms/healthz
        delay: 60
    auth:
      disable:
        - "/api/rafs-ddms/info"
        - "/api/rafs-ddms/docs*"
        - "/api/rafs-ddms/openapi.json"
    # This config specifically for environments with core services installed in osdu ns
    # Such as GLAB or SLB managed instances
    # For official azure values, refer to helm-charts-azure values
    config:
      CLOUD_PROVIDER: "azure"
      SERVICE_NAME: "rafs-ddms"
      OPENAPI_PREFIX: "/api/rafs-ddms"
      SERVICE_HOST_STORAGE: "http://storage.osdu/api/storage/v2"
      SERVICE_HOST_PARTITION: "http://partition.osdu/api/partition/v1"
      SERVICE_HOST_DATASET: "http://dataset.osdu/api/dataset/v1"
      SERVICE_HOST_SCHEMA: "http://schema.osdu/api/schema-service/v1"
      SERVICE_HOST_SEARCH: "http://search.osdu/api/search/v2"
      SERVICE_READINESS_URLS: "http://storage.osdu/api/storage/v2/liveness_check,http://schema.osdu/api/schema-service/v1/liveness_check"
      CACHE_ENABLE: "True"
      CACHE_BACKEND: "app.core.helpers.cache.backends.redis_cache.RedisCacheBackend"
      REDIS_DATABASE: "13"
      REDIS_SSL: "True"
      REDIS_PORT: "6380"
      REQUEST_TIMEOUT: "180"
      ENABLE_API_V1: "True"

    secrets:
    - name: REDIS_HOSTNAME
      key: redis-host
    - name: REDIS_PASSWORD
      key: redis-pass
    # About 800m of consumption with 4 uvloop workers and integration test run
    # Initialization will take longer if this is not correctly setup
    request:
      cpu: 0.5
      memory: 2Gi
    limit:
      cpu: 2
      memory: 4Gi
